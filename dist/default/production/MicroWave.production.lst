

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 23:48:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TRISE	set	3990
    50  0000                     _TRISD	set	3989
    51  0000                     _TRISA	set	3986
    52  0000                     _PORTC	set	3970
    53  0000                     _PORTB	set	3969
    54  0000                     _TRISC	set	3988
    55  0000                     _TRISB	set	3987
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60  007D60                     __pcinit:
    61                           	opt callstack 0
    62  007D60                     start_initialization:
    63                           	opt callstack 0
    64  007D60                     __initialization:
    65                           	opt callstack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (15 bytes)
    68  007D60  EE00  F017         	lfsr	0,__pbssCOMRAM
    69  007D64  0E0F               	movlw	15
    70  007D66                     clear_0:
    71  007D66  6AEE               	clrf	postinc0,c
    72  007D68  06E8               	decf	wreg,f,c
    73  007D6A  E1FD               	bnz	clear_0
    74  007D6C                     end_of_initialization:
    75                           	opt callstack 0
    76  007D6C                     __end_of__initialization:
    77                           	opt callstack 0
    78  007D6C  0100               	movlb	0
    79  007D6E  EFB9  F03E         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000017                     __pbssCOMRAM:
    83                           	opt callstack 0
    84  000017                     _DOArray:
    85                           	opt callstack 0
    86  000017                     	ds	15
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt callstack 0
    91  000001                     DO_SetState@state:
    92                           	opt callstack 0
    93  000001                     GPIO_Init_Pin@DirRegAddress:
    94                           	opt callstack 0
    95                           
    96                           ; 2 bytes @ 0x0
    97  000001                     	ds	1
    98  000002                     ??_DO_SetState:
    99                           
   100                           ; 1 bytes @ 0x1
   101  000002                     	ds	1
   102  000003                     GPIO_Init_Pin@pin_number:
   103                           	opt callstack 0
   104                           
   105                           ; 1 bytes @ 0x2
   106  000003                     	ds	1
   107  000004                     GPIO_Init_Pin@dir:
   108                           	opt callstack 0
   109                           
   110                           ; 1 bytes @ 0x3
   111  000004                     	ds	1
   112  000005                     ??_GPIO_Init_Pin:
   113                           
   114                           ; 1 bytes @ 0x4
   115  000005                     	ds	6
   116  00000B                     DO_SetState@DO:
   117                           	opt callstack 0
   118  00000B                     DO_Init@port:
   119                           	opt callstack 0
   120                           
   121                           ; 2 bytes @ 0xA
   122  00000B                     	ds	2
   123  00000D                     DO_Init@dir:
   124                           	opt callstack 0
   125                           
   126                           ; 2 bytes @ 0xC
   127  00000D                     	ds	2
   128  00000F                     DO_Init@pinN:
   129                           	opt callstack 0
   130                           
   131                           ; 1 bytes @ 0xE
   132  00000F                     	ds	1
   133  000010                     DO_Init@state:
   134                           	opt callstack 0
   135                           
   136                           ; 1 bytes @ 0xF
   137  000010                     	ds	1
   138  000011                     ??_DO_Init:
   139                           
   140                           ; 1 bytes @ 0x10
   141  000011                     	ds	5
   142  000016                     DO_Init@DO:
   143                           	opt callstack 0
   144                           
   145                           ; 1 bytes @ 0x15
   146  000016                     	ds	1
   147  000017                     
   148                           ; 1 bytes @ 0x16
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 13 in file "Microwave.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : 0/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   168 ;;      Params:         0       0       0       0       0       0       0       0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0
   170 ;;      Temps:          0       0       0       0       0       0       0       0       0
   171 ;;      Totals:         0       0       0       0       0       0       0       0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels required when called:    2
   174 ;; This function calls:
   175 ;;		_DO_Init
   176 ;;		_DO_SetState
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           	psect	text0
   183  007D72                     __ptext0:
   184                           	opt callstack 0
   185  007D72                     _main:
   186                           	opt callstack 29
   187  007D72                     
   188                           ;Microwave.c: 17:     DO_Init(DO_LAMP,&(PORTB),&(TRISB),(0),DO_OFF);
   189  007D72  0E81               	movlw	129
   190  007D74  6E0B               	movwf	DO_Init@port^0,c
   191  007D76  0E0F               	movlw	15
   192  007D78  6E0C               	movwf	(DO_Init@port+1)^0,c
   193  007D7A  0E93               	movlw	147
   194  007D7C  6E0D               	movwf	DO_Init@dir^0,c
   195  007D7E  0E0F               	movlw	15
   196  007D80  6E0E               	movwf	(DO_Init@dir+1)^0,c
   197  007D82  0E00               	movlw	0
   198  007D84  6E0F               	movwf	DO_Init@pinN^0,c
   199  007D86  0E00               	movlw	0
   200  007D88  6E10               	movwf	DO_Init@state^0,c
   201  007D8A  0E00               	movlw	0
   202  007D8C  EC40  F03F         	call	_DO_Init
   203                           
   204                           ;Microwave.c: 19:     DO_Init(DO_HEATER,&(PORTB),&(TRISB),(1),DO_OFF);
   205  007D90  0E81               	movlw	129
   206  007D92  6E0B               	movwf	DO_Init@port^0,c
   207  007D94  0E0F               	movlw	15
   208  007D96  6E0C               	movwf	(DO_Init@port+1)^0,c
   209  007D98  0E93               	movlw	147
   210  007D9A  6E0D               	movwf	DO_Init@dir^0,c
   211  007D9C  0E0F               	movlw	15
   212  007D9E  6E0E               	movwf	(DO_Init@dir+1)^0,c
   213  007DA0  0E01               	movlw	1
   214  007DA2  6E0F               	movwf	DO_Init@pinN^0,c
   215  007DA4  0E00               	movlw	0
   216  007DA6  6E10               	movwf	DO_Init@state^0,c
   217  007DA8  0E01               	movlw	1
   218  007DAA  EC40  F03F         	call	_DO_Init
   219                           
   220                           ;Microwave.c: 21:     DO_Init(DO_MOTOR,&(PORTC),&(TRISC),(2),DO_OFF);
   221  007DAE  0E82               	movlw	130
   222  007DB0  6E0B               	movwf	DO_Init@port^0,c
   223  007DB2  0E0F               	movlw	15
   224  007DB4  6E0C               	movwf	(DO_Init@port+1)^0,c
   225  007DB6  0E94               	movlw	148
   226  007DB8  6E0D               	movwf	DO_Init@dir^0,c
   227  007DBA  0E0F               	movlw	15
   228  007DBC  6E0E               	movwf	(DO_Init@dir+1)^0,c
   229  007DBE  0E02               	movlw	2
   230  007DC0  6E0F               	movwf	DO_Init@pinN^0,c
   231  007DC2  0E00               	movlw	0
   232  007DC4  6E10               	movwf	DO_Init@state^0,c
   233  007DC6  0E02               	movlw	2
   234  007DC8  EC40  F03F         	call	_DO_Init
   235  007DCC                     
   236                           ;Microwave.c: 23:     DO_SetState(DO_MOTOR,DO_ON);
   237  007DCC  0E01               	movlw	1
   238  007DCE  6E01               	movwf	DO_SetState@state^0,c
   239  007DD0  0E02               	movlw	2
   240  007DD2  ECEF  F03E         	call	_DO_SetState
   241  007DD6                     l57:
   242  007DD6  EFEB  F03E         	goto	l57
   243  007DDA  EF00  F000         	goto	start
   244  007DDE                     __end_of_main:
   245                           	opt callstack 0
   246                           
   247 ;; *************** function _DO_SetState *****************
   248 ;; Defined at:
   249 ;;		line 37 in file "DO.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;  DO              1    wreg     enum E3171
   252 ;;  state           1    0[COMRAM] enum E3167
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  DO              1   10[COMRAM] enum E3171
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   264 ;;      Params:         1       0       0       0       0       0       0       0       0
   265 ;;      Locals:         1       0       0       0       0       0       0       0       0
   266 ;;      Temps:          9       0       0       0       0       0       0       0       0
   267 ;;      Totals:        11       0       0       0       0       0       0       0       0
   268 ;;Total ram usage:       11 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text1
   278  007DDE                     __ptext1:
   279                           	opt callstack 0
   280  007DDE                     _DO_SetState:
   281                           	opt callstack 30
   282                           
   283                           ;incstack = 0
   284                           ;DO_SetState@DO stored from wreg
   285  007DDE  6E0B               	movwf	DO_SetState@DO^0,c
   286  007DE0                     
   287                           ;DO.c: 37: void DO_SetState(DO_t DO,LEDState_t state);DO.c: 38: {;DO.c: 39:     ((*(DOAr
      +                          ray[DO].portRegPtr))=(*(DOArray[DO].portRegPtr) & ~(1<<DOArray[DO].pin))|(state<<DOArray
      +                          [DO].pin));
   288  007DE0  500B               	movf	DO_SetState@DO^0,w,c
   289  007DE2  0D05               	mullw	5
   290  007DE4  0E17               	movlw	low _DOArray
   291  007DE6  24F3               	addwf	243,w,c
   292  007DE8  6ED9               	movwf	fsr2l,c
   293  007DEA  0E00               	movlw	high _DOArray
   294  007DEC  20F4               	addwfc	prodh,w,c
   295  007DEE  6EDA               	movwf	fsr2h,c
   296  007DF0  CFDE F002          	movff	postinc2,??_DO_SetState
   297  007DF4  CFDD F003          	movff	postdec2,??_DO_SetState+1
   298  007DF8  C002  FFD9         	movff	??_DO_SetState,fsr2l
   299  007DFC  C003  FFDA         	movff	??_DO_SetState+1,fsr2h
   300  007E00  500B               	movf	DO_SetState@DO^0,w,c
   301  007E02  0D05               	mullw	5
   302  007E04  0E1B               	movlw	low (_DOArray+4)
   303  007E06  24F3               	addwf	243,w,c
   304  007E08  6EE1               	movwf	fsr1l,c
   305  007E0A  0E00               	movlw	high (_DOArray+4)
   306  007E0C  20F4               	addwfc	prodh,w,c
   307  007E0E  6EE2               	movwf	fsr1h,c
   308  007E10  50E7               	movf	indf1,w,c
   309  007E12  6E04               	movwf	(??_DO_SetState+2)^0,c
   310  007E14  C001  F005         	movff	DO_SetState@state,??_DO_SetState+3
   311  007E18  2A04               	incf	(??_DO_SetState+2)^0,f,c
   312  007E1A  EF11  F03F         	goto	u274
   313  007E1E                     u275:
   314  007E1E  90D8               	bcf	status,0,c
   315  007E20  3605               	rlcf	(??_DO_SetState+3)^0,f,c
   316  007E22                     u274:
   317  007E22  2E04               	decfsz	(??_DO_SetState+2)^0,f,c
   318  007E24  EF0F  F03F         	goto	u275
   319  007E28  500B               	movf	DO_SetState@DO^0,w,c
   320  007E2A  0D05               	mullw	5
   321  007E2C  0E17               	movlw	low _DOArray
   322  007E2E  24F3               	addwf	243,w,c
   323  007E30  6EE1               	movwf	fsr1l,c
   324  007E32  0E00               	movlw	high _DOArray
   325  007E34  20F4               	addwfc	prodh,w,c
   326  007E36  6EE2               	movwf	fsr1h,c
   327  007E38  CFE6 F006          	movff	postinc1,??_DO_SetState+4
   328  007E3C  CFE5 F007          	movff	postdec1,??_DO_SetState+5
   329  007E40  C006  FFE1         	movff	??_DO_SetState+4,fsr1l
   330  007E44  C007  FFE2         	movff	??_DO_SetState+5,fsr1h
   331  007E48  50E7               	movf	indf1,w,c
   332  007E4A  6E08               	movwf	(??_DO_SetState+6)^0,c
   333  007E4C  500B               	movf	DO_SetState@DO^0,w,c
   334  007E4E  0D05               	mullw	5
   335  007E50  0E1B               	movlw	low (_DOArray+4)
   336  007E52  24F3               	addwf	243,w,c
   337  007E54  6EE1               	movwf	fsr1l,c
   338  007E56  0E00               	movlw	high (_DOArray+4)
   339  007E58  20F4               	addwfc	prodh,w,c
   340  007E5A  6EE2               	movwf	fsr1h,c
   341  007E5C  50E7               	movf	indf1,w,c
   342  007E5E  6E09               	movwf	(??_DO_SetState+7)^0,c
   343  007E60  0E01               	movlw	1
   344  007E62  6E0A               	movwf	(??_DO_SetState+8)^0,c
   345  007E64  2A09               	incf	(??_DO_SetState+7)^0,f,c
   346  007E66  EF37  F03F         	goto	u284
   347  007E6A                     u285:
   348  007E6A  90D8               	bcf	status,0,c
   349  007E6C  360A               	rlcf	(??_DO_SetState+8)^0,f,c
   350  007E6E                     u284:
   351  007E6E  2E09               	decfsz	(??_DO_SetState+7)^0,f,c
   352  007E70  EF35  F03F         	goto	u285
   353  007E74  500A               	movf	(??_DO_SetState+8)^0,w,c
   354  007E76  0AFF               	xorlw	255
   355  007E78  1408               	andwf	(??_DO_SetState+6)^0,w,c
   356  007E7A  1005               	iorwf	(??_DO_SetState+3)^0,w,c
   357  007E7C  6EDF               	movwf	indf2,c
   358  007E7E  0012               	return		;funcret
   359  007E80                     __end_of_DO_SetState:
   360                           	opt callstack 0
   361                           
   362 ;; *************** function _DO_Init *****************
   363 ;; Defined at:
   364 ;;		line 24 in file "DO.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  DO              1    wreg     enum E3171
   367 ;;  port            2   10[COMRAM] PTR volatile unsigned ch
   368 ;;		 -> PORTC(1), PORTB(1), 
   369 ;;  dir             2   12[COMRAM] PTR volatile unsigned ch
   370 ;;		 -> TRISC(1), TRISB(1), 
   371 ;;  pinN            1   14[COMRAM] unsigned char 
   372 ;;  state           1   15[COMRAM] enum E3167
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  DO              1   21[COMRAM] enum E3171
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      unsigned char 
   377 ;; Registers used:
   378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         6       0       0       0       0       0       0       0       0
   385 ;;      Locals:         1       0       0       0       0       0       0       0       0
   386 ;;      Temps:          5       0       0       0       0       0       0       0       0
   387 ;;      Totals:        12       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:       12 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    1
   391 ;; This function calls:
   392 ;;		_GPIO_Init_Pin
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text2
   399  007E80                     __ptext2:
   400                           	opt callstack 0
   401  007E80                     _DO_Init:
   402                           	opt callstack 29
   403                           
   404                           ;incstack = 0
   405                           ;DO_Init@DO stored from wreg
   406  007E80  6E16               	movwf	DO_Init@DO^0,c
   407  007E82                     
   408                           ;DO.c: 24: uint8 DO_Init(DO_t DO ,volatile uint8* port ,volatile uint8* dir,uint8 pinN ,
      +                          LEDState_t state);DO.c: 25: {;DO.c: 26:     DOArray[DO].portRegPtr = port;
   409  007E82  5016               	movf	DO_Init@DO^0,w,c
   410  007E84  0D05               	mullw	5
   411  007E86  0E17               	movlw	low _DOArray
   412  007E88  24F3               	addwf	243,w,c
   413  007E8A  6ED9               	movwf	fsr2l,c
   414  007E8C  0E00               	movlw	high _DOArray
   415  007E8E  20F4               	addwfc	prodh,w,c
   416  007E90  6EDA               	movwf	fsr2h,c
   417  007E92  C00B  FFDE         	movff	DO_Init@port,postinc2
   418  007E96  C00C  FFDD         	movff	DO_Init@port+1,postdec2
   419                           
   420                           ;DO.c: 27:     DOArray[DO].dirRegPtr = dir;
   421  007E9A  5016               	movf	DO_Init@DO^0,w,c
   422  007E9C  0D05               	mullw	5
   423  007E9E  0E19               	movlw	low (_DOArray+2)
   424  007EA0  24F3               	addwf	243,w,c
   425  007EA2  6ED9               	movwf	fsr2l,c
   426  007EA4  0E00               	movlw	high (_DOArray+2)
   427  007EA6  20F4               	addwfc	prodh,w,c
   428  007EA8  6EDA               	movwf	fsr2h,c
   429  007EAA  C00D  FFDE         	movff	DO_Init@dir,postinc2
   430  007EAE  C00E  FFDD         	movff	DO_Init@dir+1,postdec2
   431                           
   432                           ;DO.c: 28:     DOArray[DO].pin = pinN;
   433  007EB2  5016               	movf	DO_Init@DO^0,w,c
   434  007EB4  0D05               	mullw	5
   435  007EB6  0E1B               	movlw	low (_DOArray+4)
   436  007EB8  24F3               	addwf	243,w,c
   437  007EBA  6ED9               	movwf	fsr2l,c
   438  007EBC  0E00               	movlw	high (_DOArray+4)
   439  007EBE  20F4               	addwfc	prodh,w,c
   440  007EC0  6EDA               	movwf	fsr2h,c
   441  007EC2  C00F  FFDF         	movff	DO_Init@pinN,indf2
   442  007EC6                     
   443                           ;DO.c: 30:     GPIO_Init_Pin(dir,pinN,(0));
   444  007EC6  C00D  F001         	movff	DO_Init@dir,GPIO_Init_Pin@DirRegAddress
   445  007ECA  C00E  F002         	movff	DO_Init@dir+1,GPIO_Init_Pin@DirRegAddress+1
   446  007ECE  C00F  F003         	movff	DO_Init@pinN,GPIO_Init_Pin@pin_number
   447  007ED2  0E00               	movlw	0
   448  007ED4  6E04               	movwf	GPIO_Init_Pin@dir^0,c
   449  007ED6  EC95  F03F         	call	_GPIO_Init_Pin	;wreg free
   450  007EDA                     
   451                           ;DO.c: 31:     ((*port)=(*port & ~(1<<pinN))|(state<<pinN));
   452  007EDA  C00F  F011         	movff	DO_Init@pinN,??_DO_Init
   453  007EDE  C010  F012         	movff	DO_Init@state,??_DO_Init+1
   454  007EE2  2A11               	incf	??_DO_Init^0,f,c
   455  007EE4  EF76  F03F         	goto	u254
   456  007EE8                     u255:
   457  007EE8  90D8               	bcf	status,0,c
   458  007EEA  3612               	rlcf	(??_DO_Init+1)^0,f,c
   459  007EEC                     u254:
   460  007EEC  2E11               	decfsz	??_DO_Init^0,f,c
   461  007EEE  EF74  F03F         	goto	u255
   462  007EF2  C00B  FFD9         	movff	DO_Init@port,fsr2l
   463  007EF6  C00C  FFDA         	movff	DO_Init@port+1,fsr2h
   464  007EFA  50DF               	movf	indf2,w,c
   465  007EFC  6E13               	movwf	(??_DO_Init+2)^0,c
   466  007EFE  C00F  F014         	movff	DO_Init@pinN,??_DO_Init+3
   467  007F02  0E01               	movlw	1
   468  007F04  6E15               	movwf	(??_DO_Init+4)^0,c
   469  007F06  2A14               	incf	(??_DO_Init+3)^0,f,c
   470  007F08  EF88  F03F         	goto	u264
   471  007F0C                     u265:
   472  007F0C  90D8               	bcf	status,0,c
   473  007F0E  3615               	rlcf	(??_DO_Init+4)^0,f,c
   474  007F10                     u264:
   475  007F10  2E14               	decfsz	(??_DO_Init+3)^0,f,c
   476  007F12  EF86  F03F         	goto	u265
   477  007F16  5015               	movf	(??_DO_Init+4)^0,w,c
   478  007F18  0AFF               	xorlw	255
   479  007F1A  1413               	andwf	(??_DO_Init+2)^0,w,c
   480  007F1C  1012               	iorwf	(??_DO_Init+1)^0,w,c
   481  007F1E  C00B  FFD9         	movff	DO_Init@port,fsr2l
   482  007F22  C00C  FFDA         	movff	DO_Init@port+1,fsr2h
   483  007F26  6EDF               	movwf	indf2,c
   484  007F28  0012               	return		;funcret
   485  007F2A                     __end_of_DO_Init:
   486                           	opt callstack 0
   487                           
   488 ;; *************** function _GPIO_Init_Pin *****************
   489 ;; Defined at:
   490 ;;		line 30 in file "GPIO.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  DirRegAddres    2    0[COMRAM] PTR volatile unsigned ch
   493 ;;		 -> TRISC(1), TRISB(1), 
   494 ;;  pin_number      1    2[COMRAM] unsigned char 
   495 ;;  dir             1    3[COMRAM] unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  ret             1    0        unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      unsigned char 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         4       0       0       0       0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0       0       0       0       0
   509 ;;      Temps:          5       0       0       0       0       0       0       0       0
   510 ;;      Totals:        10       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:       10 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_DO_Init
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text3
   521  007F2A                     __ptext3:
   522                           	opt callstack 0
   523  007F2A                     _GPIO_Init_Pin:
   524                           	opt callstack 29
   525  007F2A                     
   526                           ;GPIO.c: 34:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
   527  007F2A  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   528  007F2E  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   529  007F32  5092               	movf	146,w,c	;volatile
   530  007F34  18DE               	xorwf	postinc2,w,c
   531  007F36  B4D8               	btfsc	status,2,c
   532  007F38  EFA0  F03F         	goto	u181
   533  007F3C  EFA2  F03F         	goto	u180
   534  007F40                     u181:
   535  007F40  EFD8  F03F         	goto	l806
   536  007F44                     u180:
   537  007F44  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   538  007F48  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   539  007F4C  5093               	movf	147,w,c	;volatile
   540  007F4E  18DE               	xorwf	postinc2,w,c
   541  007F50  B4D8               	btfsc	status,2,c
   542  007F52  EFAD  F03F         	goto	u191
   543  007F56  EFAF  F03F         	goto	u190
   544  007F5A                     u191:
   545  007F5A  EFD8  F03F         	goto	l806
   546  007F5E                     u190:
   547  007F5E  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   548  007F62  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   549  007F66  5094               	movf	148,w,c	;volatile
   550  007F68  18DE               	xorwf	postinc2,w,c
   551  007F6A  B4D8               	btfsc	status,2,c
   552  007F6C  EFBA  F03F         	goto	u201
   553  007F70  EFBC  F03F         	goto	u200
   554  007F74                     u201:
   555  007F74  EFD8  F03F         	goto	l806
   556  007F78                     u200:
   557  007F78  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   558  007F7C  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   559  007F80  5095               	movf	149,w,c	;volatile
   560  007F82  18DE               	xorwf	postinc2,w,c
   561  007F84  B4D8               	btfsc	status,2,c
   562  007F86  EFC7  F03F         	goto	u211
   563  007F8A  EFC9  F03F         	goto	u210
   564  007F8E                     u211:
   565  007F8E  EFD8  F03F         	goto	l806
   566  007F92                     u210:
   567  007F92  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   568  007F96  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   569  007F9A  5096               	movf	150,w,c	;volatile
   570  007F9C  18DE               	xorwf	postinc2,w,c
   571  007F9E  B4D8               	btfsc	status,2,c
   572  007FA0  EFD4  F03F         	goto	u221
   573  007FA4  EFD6  F03F         	goto	u220
   574  007FA8                     u221:
   575  007FA8  EFD8  F03F         	goto	l806
   576  007FAC                     u220:
   577  007FAC                     
   578                           ;GPIO.c: 40:     }
   579  007FAC  EFFF  F03F         	goto	l24
   580  007FB0                     l806:
   581                           
   582                           ;GPIO.c: 42:     {;GPIO.c: 43:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
   583  007FB0  C003  F005         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin
   584  007FB4  C004  F006         	movff	GPIO_Init_Pin@dir,??_GPIO_Init_Pin+1
   585  007FB8  2A05               	incf	??_GPIO_Init_Pin^0,f,c
   586  007FBA  EFE1  F03F         	goto	u234
   587  007FBE                     u235:
   588  007FBE  90D8               	bcf	status,0,c
   589  007FC0  3606               	rlcf	(??_GPIO_Init_Pin+1)^0,f,c
   590  007FC2                     u234:
   591  007FC2  2E05               	decfsz	??_GPIO_Init_Pin^0,f,c
   592  007FC4  EFDF  F03F         	goto	u235
   593  007FC8  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   594  007FCC  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   595  007FD0  50DF               	movf	indf2,w,c
   596  007FD2  6E07               	movwf	(??_GPIO_Init_Pin+2)^0,c
   597  007FD4  C003  F008         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin+3
   598  007FD8  0E01               	movlw	1
   599  007FDA  6E09               	movwf	(??_GPIO_Init_Pin+4)^0,c
   600  007FDC  2A08               	incf	(??_GPIO_Init_Pin+3)^0,f,c
   601  007FDE  EFF3  F03F         	goto	u244
   602  007FE2                     u245:
   603  007FE2  90D8               	bcf	status,0,c
   604  007FE4  3609               	rlcf	(??_GPIO_Init_Pin+4)^0,f,c
   605  007FE6                     u244:
   606  007FE6  2E08               	decfsz	(??_GPIO_Init_Pin+3)^0,f,c
   607  007FE8  EFF1  F03F         	goto	u245
   608  007FEC  5009               	movf	(??_GPIO_Init_Pin+4)^0,w,c
   609  007FEE  0AFF               	xorlw	255
   610  007FF0  1407               	andwf	(??_GPIO_Init_Pin+2)^0,w,c
   611  007FF2  1006               	iorwf	(??_GPIO_Init_Pin+1)^0,w,c
   612  007FF4  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   613  007FF8  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   614  007FFC  6EDF               	movwf	indf2,c
   615  007FFE                     l24:
   616  007FFE  0012               	return		;funcret
   617  008000                     __end_of_GPIO_Init_Pin:
   618                           	opt callstack 0
   619  0000                     
   620                           	psect	rparam
   621  0000                     tosu	equ	0xFFF
   622                           tosh	equ	0xFFE
   623                           tosl	equ	0xFFD
   624                           stkptr	equ	0xFFC
   625                           pclatu	equ	0xFFB
   626                           pclath	equ	0xFFA
   627                           pcl	equ	0xFF9
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           prodh	equ	0xFF4
   633                           prodl	equ	0xFF3
   634                           indf0	equ	0xFEF
   635                           postinc0	equ	0xFEE
   636                           postdec0	equ	0xFED
   637                           preinc0	equ	0xFEC
   638                           plusw0	equ	0xFEB
   639                           fsr0h	equ	0xFEA
   640                           fsr0l	equ	0xFE9
   641                           wreg	equ	0xFE8
   642                           indf1	equ	0xFE7
   643                           postinc1	equ	0xFE6
   644                           postdec1	equ	0xFE5
   645                           preinc1	equ	0xFE4
   646                           plusw1	equ	0xFE3
   647                           fsr1h	equ	0xFE2
   648                           fsr1l	equ	0xFE1
   649                           bsr	equ	0xFE0
   650                           indf2	equ	0xFDF
   651                           postinc2	equ	0xFDE
   652                           postdec2	equ	0xFDD
   653                           preinc2	equ	0xFDC
   654                           plusw2	equ	0xFDB
   655                           fsr2h	equ	0xFDA
   656                           fsr2l	equ	0xFD9
   657                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DO_Init@dir	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S39$dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S39$portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DOArray.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DO_Init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    GPIO_Init_Pin@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_DO_Init
    _DO_Init->_GPIO_Init_Pin

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1840
                            _DO_Init
                        _DO_SetState
 ---------------------------------------------------------------------------------
 (1) _DO_SetState                                         11    10      1     186
                                              0 COMRAM    11    10      1
 ---------------------------------------------------------------------------------
 (1) _DO_Init                                             12     6      6    1654
                                             10 COMRAM    12     6      6
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                       10     6      4     456
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_Init
     _GPIO_Init_Pin
   _DO_SetState

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      25       1       38.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      20        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 23:48:00 2020

                        l31 7F28                          l24 7FFE                          l37 7E7E  
                        l57 7DD6                          l58 7DD6                         l800 7F78  
                       l802 7F92                         l810 7E82                         l804 7FAC  
                       l812 7EC6                         l820 7DCC                         l806 7FB0  
                       l814 7EDA                         l816 7DE0                         l818 7D72  
                       l792 7F2A                         l794 7F2A                         l796 7F44  
                       l798 7F5E                         u200 7F78                         u201 7F74  
                       u210 7F92                         u211 7F8E                         u220 7FAC  
                       u221 7FA8                         u234 7FC2                         u235 7FBE  
                       u244 7FE6                         u180 7F44                         u245 7FE2  
                       u181 7F40                         u190 7F5E                         u254 7EEC  
                       u191 7F5A                         u255 7EE8                         u264 7F10  
                       u265 7F0C                         u274 7E22                         u275 7E1E  
                       u284 7E6E                         u285 7E6A                         prod 000FF3  
                       wreg 000FE8             __end_of_DO_Init 7F2A                        _main 7D72  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      prodl 000FF3                        start 0000                ___param_bank 000000  
             _GPIO_Init_Pin 7F2A                       ?_main 0001                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
              ?_DO_SetState 0001                       status 000FD8              ?_GPIO_Init_Pin 0001  
           __initialization 7D60                __end_of_main 7DDE                      ??_main 0017  
             __activetblptr 000000                   ??_DO_Init 0011  GPIO_Init_Pin@DirRegAddress 0001  
               DO_Init@pinN 000F                 DO_Init@port 000B                      clear_0 7D66  
                __accesstop 0060     __end_of__initialization 7D6C             ??_GPIO_Init_Pin 0005  
             ___rparam_used 000001            GPIO_Init_Pin@dir 0004              __pcstackCOMRAM 0001  
                 DO_Init@DO 0016        __size_of_DO_SetState 00A2                     _DOArray 0017  
                   _DO_Init 7E80                     __Hparam 0000                     __Lparam 0000  
              DO_Init@state 0010                     __pcinit 7D60                     __ramtop 0800  
                   __ptext0 7D72                     __ptext1 7DDE                     __ptext2 7E80  
                   __ptext3 7F2A            DO_SetState@state 0001        end_of_initialization 7D6C  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE     GPIO_Init_Pin@pin_number 0003  
       start_initialization 7D60       __end_of_GPIO_Init_Pin 8000                  DO_Init@dir 000D  
               __pbssCOMRAM 0017               ??_DO_SetState 0002                    ?_DO_Init 000B  
       __end_of_DO_SetState 7E80            __size_of_DO_Init 00AA                    __Hrparam 0000  
                  __Lrparam 0000                 _DO_SetState 7DDE               __size_of_main 006C  
             DO_SetState@DO 000B      __size_of_GPIO_Init_Pin 00D6  
