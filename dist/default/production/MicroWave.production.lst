

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 09:20:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001092                     __pidataCOMRAM:
    81                           	opt callstack 0
    82                           
    83                           ;initializer for LCD_Init_Custom_Sym@F3257
    84  001092  00                 	db	0
    85  001093  00                 	db	0
    86  001094  00                 	db	0
    87  001095  00                 	db	0
    88  001096  00                 	db	0
    89  001097  F8                 	db	248
    90  001098  F8                 	db	248
    91  001099  00                 	db	0
    92                           
    93                           ;initializer for _lines_offset_adresses
    94  00109A  00                 	db	0
    95  00109B  40                 	db	64
    96  0000                     _TMR0	set	4054
    97  0000                     _PORTD	set	3971
    98  0000                     _PORTE	set	3972
    99  0000                     _TRISA	set	3986
   100  0000                     _PORTC	set	3970
   101  0000                     _PORTB	set	3969
   102  0000                     _TRISE	set	3990
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISB	set	3987
   106  0000                     _GIE	set	32663
   107  0000                     _TMR0IE	set	32661
   108  0000                     _TMR0IF	set	32658
   109  0000                     _TMR0ON	set	32431
   110  0000                     _T08BIT	set	32430
   111  0000                     _T0CS	set	32429
   112  0000                     _T0PS0	set	32424
   113  0000                     _T0PS1	set	32425
   114  0000                     _T0PS2	set	32426
   115  0000                     _PSA	set	32427
   116                           
   117                           ; #config settings
   118  0000                     
   119                           	psect	cinit
   120  000F22                     __pcinit:
   121                           	opt callstack 0
   122  000F22                     start_initialization:
   123                           	opt callstack 0
   124  000F22                     __initialization:
   125                           	opt callstack 0
   126                           
   127                           ; Initialize objects allocated to COMRAM (10 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  000F22  0E92               	movlw	low __pidataCOMRAM
   130  000F24  6EF6               	movwf	tblptrl,c
   131  000F26  0E10               	movlw	high __pidataCOMRAM
   132  000F28  6EF7               	movwf	tblptrh,c
   133  000F2A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  000F2C  6EF8               	movwf	tblptru,c
   135  000F2E  EE00  F041         	lfsr	0,__pdataCOMRAM
   136  000F32  EE10 F00A          	lfsr	1,10
   137  000F36                     copy_data0:
   138  000F36  0009               	tblrd		*+
   139  000F38  CFF5 FFEE          	movff	tablat,postinc0
   140  000F3C  50E5               	movf	postdec1,w,c
   141  000F3E  50E1               	movf	fsr1l,w,c
   142  000F40  E1FA               	bnz	copy_data0
   143                           
   144                           ; Clear objects allocated to BANK1 (80 bytes)
   145  000F42  EE01  F000         	lfsr	0,__pbssBANK1
   146  000F46  0E50               	movlw	80
   147  000F48                     clear_0:
   148  000F48  6AEE               	clrf	postinc0,c
   149  000F4A  06E8               	decf	wreg,f,c
   150  000F4C  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to BANK0 (84 bytes)
   153  000F4E  EE00  F060         	lfsr	0,__pbssBANK0
   154  000F52  0E54               	movlw	84
   155  000F54                     clear_1:
   156  000F54  6AEE               	clrf	postinc0,c
   157  000F56  06E8               	decf	wreg,f,c
   158  000F58  E1FD               	bnz	clear_1
   159                           
   160                           ; Clear objects allocated to COMRAM (23 bytes)
   161  000F5A  EE00  F02A         	lfsr	0,__pbssCOMRAM
   162  000F5E  0E17               	movlw	23
   163  000F60                     clear_2:
   164  000F60  6AEE               	clrf	postinc0,c
   165  000F62  06E8               	decf	wreg,f,c
   166  000F64  E1FD               	bnz	clear_2
   167  000F66                     end_of_initialization:
   168                           	opt callstack 0
   169  000F66                     __end_of__initialization:
   170                           	opt callstack 0
   171  000F66  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172  000F68  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173  000F6A  0100               	movlb	0
   174  000F6C  EF67  F007         	goto	_main	;jump to C main() function
   175                           
   176                           	psect	bssCOMRAM
   177  00002A                     __pbssCOMRAM:
   178                           	opt callstack 0
   179  00002A                     _DOArray:
   180                           	opt callstack 0
   181  00002A                     	ds	15
   182  000039                     TMR0_ISR@counter:
   183                           	opt callstack 0
   184  000039                     	ds	2
   185  00003B                     _tempCounter:
   186                           	opt callstack 0
   187  00003B                     	ds	2
   188  00003D                     _tick_counter:
   189                           	opt callstack 0
   190  00003D                     	ds	2
   191  00003F                     TMR0_ISR@index:
   192                           	opt callstack 0
   193  00003F                     	ds	1
   194  000040                     _line_counter:
   195                           	opt callstack 0
   196  000040                     	ds	1
   197                           
   198                           	psect	dataCOMRAM
   199  000041                     __pdataCOMRAM:
   200                           	opt callstack 0
   201  000041                     LCD_Init_Custom_Sym@F3257:
   202                           	opt callstack 0
   203  000041                     	ds	8
   204  000049                     _lines_offset_adresses:
   205                           	opt callstack 0
   206  000049                     	ds	2
   207                           
   208                           	psect	bssBANK0
   209  000060                     __pbssBANK0:
   210                           	opt callstack 0
   211  000060                     _update_flag:
   212                           	opt callstack 0
   213  000060                     	ds	84
   214                           
   215                           	psect	bssBANK1
   216  000100                     __pbssBANK1:
   217                           	opt callstack 0
   218  000100                     _LCD_Data_Buffer:
   219                           	opt callstack 0
   220  000100                     	ds	80
   221                           
   222                           	psect	cstackBANK0
   223  0000B4                     __pcstackBANK0:
   224                           	opt callstack 0
   225  0000B4                     DO_Init@DO:
   226                           	opt callstack 0
   227                           
   228                           ; 1 bytes @ 0x0
   229  0000B4                     	ds	1
   230                           
   231                           	psect	cstackCOMRAM
   232  000001                     __pcstackCOMRAM:
   233                           	opt callstack 0
   234  000001                     ?i2___awdiv:
   235                           	opt callstack 0
   236  000001                     i2LCD_Data_Out@byte:
   237                           	opt callstack 0
   238  000001                     i2___awdiv@dividend:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0x0
   242  000001                     	ds	1
   243  000002                     i2LCD_Write_Symbol@sym:
   244                           	opt callstack 0
   245  000002                     i2LCD_Write_Instruction@inst:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0x1
   249  000002                     	ds	1
   250  000003                     i2LCD_SetDDRAM@ADDRESS:
   251                           	opt callstack 0
   252  000003                     i2___awdiv@divisor:
   253                           	opt callstack 0
   254                           
   255                           ; 2 bytes @ 0x2
   256  000003                     	ds	1
   257  000004                     ??i2_LCD_Update:
   258                           
   259                           ; 1 bytes @ 0x3
   260  000004                     	ds	1
   261  000005                     i2___awdiv@counter:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x4
   265  000005                     	ds	1
   266  000006                     i2___awdiv@sign:
   267                           	opt callstack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270  000006                     	ds	1
   271  000007                     i2___awdiv@quotient:
   272                           	opt callstack 0
   273                           
   274                           ; 2 bytes @ 0x6
   275  000007                     	ds	2
   276  000009                     i2LCD_SetSymbol@row:
   277                           	opt callstack 0
   278                           
   279                           ; 1 bytes @ 0x8
   280  000009                     	ds	1
   281  00000A                     i2LCD_SetSymbol@column:
   282                           	opt callstack 0
   283                           
   284                           ; 1 bytes @ 0x9
   285  00000A                     	ds	1
   286  00000B                     ??i2_LCD_SetSymbol:
   287                           
   288                           ; 1 bytes @ 0xA
   289  00000B                     	ds	2
   290  00000D                     i2LCD_Update@address:
   291                           	opt callstack 0
   292                           
   293                           ; 1 bytes @ 0xC
   294  00000D                     	ds	1
   295  00000E                     i2LCD_Update@updated:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0xD
   299  00000E                     	ds	1
   300  00000F                     i2LCD_Update@i:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0xE
   304  00000F                     	ds	1
   305  000010                     i2LCD_SetSymbol@sym:
   306                           	opt callstack 0
   307  000010                     i2LCD_Update@j:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0xF
   311  000010                     	ds	1
   312  000011                     ??_TMR0_ISR:
   313                           
   314                           ; 1 bytes @ 0x10
   315  000011                     	ds	4
   316  000015                     ?___awdiv:
   317                           	opt callstack 0
   318  000015                     DO_SetState@state:
   319                           	opt callstack 0
   320  000015                     LCD_Data_Out@byte:
   321                           	opt callstack 0
   322  000015                     GPIO_Init_Pin@DirRegAddress:
   323                           	opt callstack 0
   324  000015                     GPIO_Init_Nibble@DirRegAddress:
   325                           	opt callstack 0
   326  000015                     ___awdiv@dividend:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x14
   330  000015                     	ds	1
   331  000016                     ??_DO_SetState:
   332  000016                     LCD_Write_Symbol@sym:
   333                           	opt callstack 0
   334  000016                     LCD_Write_Instruction@inst:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0x15
   338  000016                     	ds	1
   339  000017                     GPIO_Init_Pin@pin_number:
   340                           	opt callstack 0
   341  000017                     GPIO_Init_Nibble@nibble_num:
   342                           	opt callstack 0
   343  000017                     LCD_SetDDRAM@ADDRESS:
   344                           	opt callstack 0
   345  000017                     LCD_SetCGRAM@ADDRESS:
   346                           	opt callstack 0
   347  000017                     ___awdiv@divisor:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x16
   351  000017                     	ds	1
   352  000018                     ??_LCD_Update:
   353  000018                     GPIO_Init_Pin@dir:
   354                           	opt callstack 0
   355  000018                     GPIO_Init_Nibble@dir:
   356                           	opt callstack 0
   357  000018                     LCD_Init_Custom_Sym@data:
   358                           	opt callstack 0
   359                           
   360                           ; 8 bytes @ 0x17
   361  000018                     	ds	1
   362  000019                     ??_GPIO_Init_Pin:
   363  000019                     ??_GPIO_Init_Nibble:
   364  000019                     ___awdiv@counter:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0x18
   368  000019                     	ds	1
   369  00001A                     ___awdiv@sign:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0x19
   373  00001A                     	ds	1
   374  00001B                     ___awdiv@quotient:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x1A
   378  00001B                     	ds	2
   379  00001D                     LCD_SetSymbol@row:
   380                           	opt callstack 0
   381  00001D                     _GPIO_Init_Nibble$44:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x1C
   385  00001D                     	ds	1
   386  00001E                     LCD_SetSymbol@column:
   387                           	opt callstack 0
   388                           
   389                           ; 1 bytes @ 0x1D
   390  00001E                     	ds	1
   391  00001F                     ??_LCD_SetSymbol:
   392  00001F                     DO_SetState@DO:
   393                           	opt callstack 0
   394  00001F                     DO_Init@port:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x1E
   398  00001F                     	ds	1
   399  000020                     LCD_Init_Custom_Sym@i:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x1F
   403  000020                     	ds	1
   404  000021                     LCD_Update@address:
   405                           	opt callstack 0
   406  000021                     DO_Init@dir:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x20
   410  000021                     	ds	1
   411  000022                     ??_LCD_Init:
   412  000022                     LCD_Update@updated:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x21
   416  000022                     	ds	1
   417  000023                     DO_Init@pinN:
   418                           	opt callstack 0
   419  000023                     LCD_Update@i:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x22
   423  000023                     	ds	1
   424  000024                     DO_Init@state:
   425                           	opt callstack 0
   426  000024                     LCD_SetSymbol@sym:
   427                           	opt callstack 0
   428  000024                     LCD_Update@j:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x23
   432  000024                     	ds	1
   433  000025                     ??_DO_Init:
   434                           
   435                           ; 1 bytes @ 0x24
   436  000025                     	ds	5
   437  00002A                     
   438                           ; 1 bytes @ 0x29
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 86 in file "Microwave.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels required when called:   10
   464 ;; This function calls:
   465 ;;		_DO_SetState
   466 ;;		_LCD_Init
   467 ;;		_LCD_SetSymbol
   468 ;;		_LCD_Update
   469 ;;		_TMR_Init
   470 ;;		_TMR_Start
   471 ;;		_init
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text0
   478  000ECE                     __ptext0:
   479                           	opt callstack 0
   480  000ECE                     _main:
   481                           	opt callstack 21
   482  000ECE                     
   483                           ;Microwave.c: 89:     LCD_Init();
   484  000ECE  EC00  F004         	call	_LCD_Init	;wreg free
   485  000ED2                     
   486                           ;Microwave.c: 90:     init();
   487  000ED2  EC39  F007         	call	_init	;wreg free
   488  000ED6                     
   489                           ;Microwave.c: 91:     DO_SetState(DO_MOTOR,DO_ON);
   490  000ED6  0E01               	movlw	1
   491  000ED8  6E15               	movwf	DO_SetState@state^0,c
   492  000EDA  0E02               	movlw	2
   493  000EDC  ECA4  F006         	call	_DO_SetState
   494  000EE0                     
   495                           ;Microwave.c: 92:     TMR_Init();
   496  000EE0  EC2B  F008         	call	_TMR_Init	;wreg free
   497  000EE4                     
   498                           ;Microwave.c: 93:     TMR_Start();
   499  000EE4  EC22  F008         	call	_TMR_Start	;wreg free
   500  000EE8                     
   501                           ;Microwave.c: 95:     LCD_SetSymbol('b',0,0);
   502  000EE8  0E00               	movlw	0
   503  000EEA  6E1D               	movwf	LCD_SetSymbol@row^0,c
   504  000EEC  0E00               	movlw	0
   505  000EEE  6E1E               	movwf	LCD_SetSymbol@column^0,c
   506  000EF0  0E62               	movlw	98
   507  000EF2  ECF6  F005         	call	_LCD_SetSymbol
   508  000EF6                     
   509                           ;Microwave.c: 96:     LCD_SetSymbol('b',1,0);
   510  000EF6  0E01               	movlw	1
   511  000EF8  6E1D               	movwf	LCD_SetSymbol@row^0,c
   512  000EFA  0E00               	movlw	0
   513  000EFC  6E1E               	movwf	LCD_SetSymbol@column^0,c
   514  000EFE  0E62               	movlw	98
   515  000F00  ECF6  F005         	call	_LCD_SetSymbol
   516  000F04                     
   517                           ;Microwave.c: 97:     LCD_SetSymbol('b',1,5);
   518  000F04  0E01               	movlw	1
   519  000F06  6E1D               	movwf	LCD_SetSymbol@row^0,c
   520  000F08  0E05               	movlw	5
   521  000F0A  6E1E               	movwf	LCD_SetSymbol@column^0,c
   522  000F0C  0E62               	movlw	98
   523  000F0E  ECF6  F005         	call	_LCD_SetSymbol
   524  000F12                     
   525                           ;Microwave.c: 98:     LCD_Update();
   526  000F12  EC64  F002         	call	_LCD_Update	;wreg free
   527  000F16                     
   528                           ;Microwave.c: 99:     LCD_Update();
   529  000F16  EC64  F002         	call	_LCD_Update	;wreg free
   530  000F1A                     l223:
   531  000F1A  EF8D  F007         	goto	l223
   532  000F1E  EF07  F000         	goto	start
   533  000F22                     __end_of_main:
   534                           	opt callstack 0
   535                           
   536 ;; *************** function _init *****************
   537 ;; Defined at:
   538 ;;		line 108 in file "Microwave.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   552 ;;      Params:         0       0       0       0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    7
   559 ;; This function calls:
   560 ;;		_DO_Init
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text1
   567  000E72                     __ptext1:
   568                           	opt callstack 0
   569  000E72                     _init:
   570                           	opt callstack 23
   571  000E72                     
   572                           ;Microwave.c: 113:     DO_Init(DO_LAMP,&(PORTB),&(TRISB),(0),DO_OFF);
   573  000E72  0E81               	movlw	129
   574  000E74  6E1F               	movwf	DO_Init@port^0,c
   575  000E76  0E0F               	movlw	15
   576  000E78  6E20               	movwf	(DO_Init@port+1)^0,c
   577  000E7A  0E93               	movlw	147
   578  000E7C  6E21               	movwf	DO_Init@dir^0,c
   579  000E7E  0E0F               	movlw	15
   580  000E80  6E22               	movwf	(DO_Init@dir+1)^0,c
   581  000E82  0E00               	movlw	0
   582  000E84  6E23               	movwf	DO_Init@pinN^0,c
   583  000E86  0E00               	movlw	0
   584  000E88  6E24               	movwf	DO_Init@state^0,c
   585  000E8A  0E00               	movlw	0
   586  000E8C  EC9F  F005         	call	_DO_Init
   587                           
   588                           ;Microwave.c: 115:     DO_Init(DO_HEATER,&(PORTB),&(TRISB),(1),DO_OFF);
   589  000E90  0E81               	movlw	129
   590  000E92  6E1F               	movwf	DO_Init@port^0,c
   591  000E94  0E0F               	movlw	15
   592  000E96  6E20               	movwf	(DO_Init@port+1)^0,c
   593  000E98  0E93               	movlw	147
   594  000E9A  6E21               	movwf	DO_Init@dir^0,c
   595  000E9C  0E0F               	movlw	15
   596  000E9E  6E22               	movwf	(DO_Init@dir+1)^0,c
   597  000EA0  0E01               	movlw	1
   598  000EA2  6E23               	movwf	DO_Init@pinN^0,c
   599  000EA4  0E00               	movlw	0
   600  000EA6  6E24               	movwf	DO_Init@state^0,c
   601  000EA8  0E01               	movlw	1
   602  000EAA  EC9F  F005         	call	_DO_Init
   603                           
   604                           ;Microwave.c: 117:     DO_Init(DO_MOTOR,&(PORTC),&(TRISC),(2),DO_OFF);
   605  000EAE  0E82               	movlw	130
   606  000EB0  6E1F               	movwf	DO_Init@port^0,c
   607  000EB2  0E0F               	movlw	15
   608  000EB4  6E20               	movwf	(DO_Init@port+1)^0,c
   609  000EB6  0E94               	movlw	148
   610  000EB8  6E21               	movwf	DO_Init@dir^0,c
   611  000EBA  0E0F               	movlw	15
   612  000EBC  6E22               	movwf	(DO_Init@dir+1)^0,c
   613  000EBE  0E02               	movlw	2
   614  000EC0  6E23               	movwf	DO_Init@pinN^0,c
   615  000EC2  0E00               	movlw	0
   616  000EC4  6E24               	movwf	DO_Init@state^0,c
   617  000EC6  0E02               	movlw	2
   618  000EC8  EC9F  F005         	call	_DO_Init
   619  000ECC  0012               	return		;funcret
   620  000ECE                     __end_of_init:
   621                           	opt callstack 0
   622                           
   623 ;; *************** function _DO_Init *****************
   624 ;; Defined at:
   625 ;;		line 24 in file "DO.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  DO              1    wreg     enum E3171
   628 ;;  port            2   30[COMRAM] PTR volatile unsigned ch
   629 ;;		 -> PORTC(1), PORTB(1), 
   630 ;;  dir             2   32[COMRAM] PTR volatile unsigned ch
   631 ;;		 -> TRISC(1), TRISB(1), 
   632 ;;  pinN            1   34[COMRAM] unsigned char 
   633 ;;  state           1   35[COMRAM] enum E3167
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  DO              1    0[BANK0 ] enum E3171
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      unsigned char 
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         6       0       0       0       0       0       0       0       0
   646 ;;      Locals:         0       1       0       0       0       0       0       0       0
   647 ;;      Temps:          5       0       0       0       0       0       0       0       0
   648 ;;      Totals:        11       1       0       0       0       0       0       0       0
   649 ;;Total ram usage:       12 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    6
   652 ;; This function calls:
   653 ;;		_GPIO_Init_Pin
   654 ;; This function is called by:
   655 ;;		_init
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text2
   660  000B3E                     __ptext2:
   661                           	opt callstack 0
   662  000B3E                     _DO_Init:
   663                           	opt callstack 23
   664                           
   665                           ;incstack = 0
   666                           ;DO_Init@DO stored from wreg
   667  000B3E  0100               	movlb	0	; () banked
   668  000B40  6FB4               	movwf	DO_Init@DO& (0+255),b
   669  000B42                     
   670                           ;DO.c: 24: uint8 DO_Init(DO_t DO ,volatile uint8* port ,volatile uint8* dir,uint8 pinN ,
      +                          LEDState_t state);DO.c: 25: {;DO.c: 26:     DOArray[DO].portRegPtr = port;
   671  000B42  0100               	movlb	0	; () banked
   672  000B44  51B4               	movf	DO_Init@DO& (0+255),w,b
   673  000B46  0D05               	mullw	5
   674  000B48  0E2A               	movlw	low _DOArray
   675  000B4A  24F3               	addwf	243,w,c
   676  000B4C  6ED9               	movwf	fsr2l,c
   677  000B4E  0E00               	movlw	high _DOArray
   678  000B50  20F4               	addwfc	prodh,w,c
   679  000B52  6EDA               	movwf	fsr2h,c
   680  000B54  C01F  FFDE         	movff	DO_Init@port,postinc2
   681  000B58  C020  FFDD         	movff	DO_Init@port+1,postdec2
   682                           
   683                           ;DO.c: 27:     DOArray[DO].dirRegPtr = dir;
   684  000B5C  51B4               	movf	DO_Init@DO& (0+255),w,b
   685  000B5E  0D05               	mullw	5
   686  000B60  0E2C               	movlw	low (_DOArray+2)
   687  000B62  24F3               	addwf	243,w,c
   688  000B64  6ED9               	movwf	fsr2l,c
   689  000B66  0E00               	movlw	high (_DOArray+2)
   690  000B68  20F4               	addwfc	prodh,w,c
   691  000B6A  6EDA               	movwf	fsr2h,c
   692  000B6C  C021  FFDE         	movff	DO_Init@dir,postinc2
   693  000B70  C022  FFDD         	movff	DO_Init@dir+1,postdec2
   694                           
   695                           ;DO.c: 28:     DOArray[DO].pin = pinN;
   696  000B74  51B4               	movf	DO_Init@DO& (0+255),w,b
   697  000B76  0D05               	mullw	5
   698  000B78  0E2E               	movlw	low (_DOArray+4)
   699  000B7A  24F3               	addwf	243,w,c
   700  000B7C  6ED9               	movwf	fsr2l,c
   701  000B7E  0E00               	movlw	high (_DOArray+4)
   702  000B80  20F4               	addwfc	prodh,w,c
   703  000B82  6EDA               	movwf	fsr2h,c
   704  000B84  C023  FFDF         	movff	DO_Init@pinN,indf2
   705  000B88                     
   706                           ; BSR set to: 0
   707                           ;DO.c: 30:     GPIO_Init_Pin(dir,pinN,(0));
   708  000B88  C021  F015         	movff	DO_Init@dir,GPIO_Init_Pin@DirRegAddress
   709  000B8C  C022  F016         	movff	DO_Init@dir+1,GPIO_Init_Pin@DirRegAddress+1
   710  000B90  C023  F017         	movff	DO_Init@pinN,GPIO_Init_Pin@pin_number
   711  000B94  0E00               	movlw	0
   712  000B96  6E18               	movwf	GPIO_Init_Pin@dir^0,c
   713  000B98  EC70  F004         	call	_GPIO_Init_Pin	;wreg free
   714  000B9C                     
   715                           ;DO.c: 31:     ((*port)=(*port & ~(1<<pinN))|(state<<pinN));
   716  000B9C  C023  F025         	movff	DO_Init@pinN,??_DO_Init
   717  000BA0  C024  F026         	movff	DO_Init@state,??_DO_Init+1
   718  000BA4  2A25               	incf	??_DO_Init^0,f,c
   719  000BA6  EFD7  F005         	goto	u1564
   720  000BAA                     u1565:
   721  000BAA  90D8               	bcf	status,0,c
   722  000BAC  3626               	rlcf	(??_DO_Init+1)^0,f,c
   723  000BAE                     u1564:
   724  000BAE  2E25               	decfsz	??_DO_Init^0,f,c
   725  000BB0  EFD5  F005         	goto	u1565
   726  000BB4  C01F  FFD9         	movff	DO_Init@port,fsr2l
   727  000BB8  C020  FFDA         	movff	DO_Init@port+1,fsr2h
   728  000BBC  50DF               	movf	indf2,w,c
   729  000BBE  6E27               	movwf	(??_DO_Init+2)^0,c
   730  000BC0  C023  F028         	movff	DO_Init@pinN,??_DO_Init+3
   731  000BC4  0E01               	movlw	1
   732  000BC6  6E29               	movwf	(??_DO_Init+4)^0,c
   733  000BC8  2A28               	incf	(??_DO_Init+3)^0,f,c
   734  000BCA  EFE9  F005         	goto	u1574
   735  000BCE                     u1575:
   736  000BCE  90D8               	bcf	status,0,c
   737  000BD0  3629               	rlcf	(??_DO_Init+4)^0,f,c
   738  000BD2                     u1574:
   739  000BD2  2E28               	decfsz	(??_DO_Init+3)^0,f,c
   740  000BD4  EFE7  F005         	goto	u1575
   741  000BD8  5029               	movf	(??_DO_Init+4)^0,w,c
   742  000BDA  0AFF               	xorlw	255
   743  000BDC  1427               	andwf	(??_DO_Init+2)^0,w,c
   744  000BDE  1026               	iorwf	(??_DO_Init+1)^0,w,c
   745  000BE0  C01F  FFD9         	movff	DO_Init@port,fsr2l
   746  000BE4  C020  FFDA         	movff	DO_Init@port+1,fsr2h
   747  000BE8  6EDF               	movwf	indf2,c
   748  000BEA  0012               	return		;funcret
   749  000BEC                     __end_of_DO_Init:
   750                           	opt callstack 0
   751                           
   752 ;; *************** function _TMR_Start *****************
   753 ;; Defined at:
   754 ;;		line 69 in file "OSTimer.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         0       0       0       0       0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    5
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text3
   783  001044                     __ptext3:
   784                           	opt callstack 0
   785  001044                     _TMR_Start:
   786                           	opt callstack 25
   787  001044                     
   788                           ;OSTimer.c: 72:     ((TMR0IF) = 0);
   789  001044  94F2               	bcf	4082,2,c	;volatile
   790  001046                     
   791                           ;OSTimer.c: 74:     ((TMR0) = 65,536 - ((5000)));
   792  001046  0E00               	movlw	0
   793  001048  6ED7               	movwf	215,c	;volatile
   794  00104A  0E41               	movlw	65
   795  00104C  6ED6               	movwf	214,c	;volatile
   796  00104E                     
   797                           ;OSTimer.c: 76:     (TMR0IE = 1);
   798  00104E  8AF2               	bsf	4082,5,c	;volatile
   799  001050                     
   800                           ;OSTimer.c: 77:     (GIE = 1);
   801  001050  8EF2               	bsf	4082,7,c	;volatile
   802  001052                     
   803                           ;OSTimer.c: 79:     (TMR0ON = 1);
   804  001052  8ED5               	bsf	4053,7,c	;volatile
   805  001054  0012               	return		;funcret
   806  001056                     __end_of_TMR_Start:
   807                           	opt callstack 0
   808                           
   809 ;; *************** function _TMR_Init *****************
   810 ;; Defined at:
   811 ;;		line 21 in file "OSTimer.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		None
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    5
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  001056                     __ptext4:
   841                           	opt callstack 0
   842  001056                     _TMR_Init:
   843                           	opt callstack 25
   844  001056                     
   845                           ;OSTimer.c: 25:     (PSA = 0);
   846  001056  96D5               	bcf	4053,3,c	;volatile
   847                           
   848                           ;OSTimer.c: 26:     T0PS2 = 0; T0PS1 = 0; T0PS0 = 0;
   849  001058  94D5               	bcf	4053,2,c	;volatile
   850  00105A  92D5               	bcf	4053,1,c	;volatile
   851  00105C  90D5               	bcf	4053,0,c	;volatile
   852                           
   853                           ;OSTimer.c: 28:     (T0CS = 0);
   854  00105E  9AD5               	bcf	4053,5,c	;volatile
   855                           
   856                           ;OSTimer.c: 30:     (T08BIT = 1);
   857  001060  8CD5               	bsf	4053,6,c	;volatile
   858                           
   859                           ;OSTimer.c: 32:     (TMR0ON = 0);
   860  001062  9ED5               	bcf	4053,7,c	;volatile
   861  001064  0012               	return		;funcret
   862  001066                     __end_of_TMR_Init:
   863                           	opt callstack 0
   864                           
   865 ;; *************** function _LCD_Update *****************
   866 ;; Defined at:
   867 ;;		line 313 in file "LCD.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  address         1   32[COMRAM] unsigned char 
   872 ;;  j               1   35[COMRAM] unsigned char 
   873 ;;  i               1   34[COMRAM] unsigned char 
   874 ;;  updated         1   33[COMRAM] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         0       0       0       0       0       0       0       0       0
   885 ;;      Locals:         4       0       0       0       0       0       0       0       0
   886 ;;      Temps:          9       0       0       0       0       0       0       0       0
   887 ;;      Totals:        13       0       0       0       0       0       0       0       0
   888 ;;Total ram usage:       13 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    8
   891 ;; This function calls:
   892 ;;		_LCD_SetDDRAM
   893 ;;		_LCD_Write_Symbol
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text5
   900  0004C8                     __ptext5:
   901                           	opt callstack 0
   902  0004C8                     _LCD_Update:
   903                           	opt callstack 22
   904  0004C8                     
   905                           ;LCD.c: 315:     uint8 j,i,updated = 0;
   906  0004C8  0E00               	movlw	0
   907  0004CA  6E22               	movwf	LCD_Update@updated^0,c
   908  0004CC                     
   909                           ;LCD.c: 316:     tick_counter += (5);
   910  0004CC  0E05               	movlw	5
   911  0004CE  263D               	addwf	_tick_counter^0,f,c
   912  0004D0  0E00               	movlw	0
   913  0004D2  223E               	addwfc	(_tick_counter+1)^0,f,c
   914  0004D4                     
   915                           ;LCD.c: 317:     if(tick_counter != (5))return;
   916  0004D4  0E05               	movlw	5
   917  0004D6  183D               	xorwf	_tick_counter^0,w,c
   918  0004D8  103E               	iorwf	(_tick_counter+1)^0,w,c
   919  0004DA  B4D8               	btfsc	status,2,c
   920  0004DC  EF72  F002         	goto	u1201
   921  0004E0  EF74  F002         	goto	u1200
   922  0004E4                     u1201:
   923  0004E4  EF76  F002         	goto	l1867
   924  0004E8                     u1200:
   925  0004E8  EF73  F003         	goto	l111
   926  0004EC                     l1867:
   927                           
   928                           ;LCD.c: 319:     tick_counter = 0;
   929  0004EC  0E00               	movlw	0
   930  0004EE  6E3E               	movwf	(_tick_counter+1)^0,c
   931  0004F0  0E00               	movlw	0
   932  0004F2  6E3D               	movwf	_tick_counter^0,c
   933                           
   934                           ;LCD.c: 321:     for(j = 0;j<(((40)/16)+1);j++)
   935  0004F4  0E00               	movlw	0
   936  0004F6  6E24               	movwf	LCD_Update@j^0,c
   937  0004F8                     l1873:
   938                           
   939                           ;LCD.c: 322:     {;LCD.c: 323:         if(update_flag[line_counter][j]!=0)
   940  0004F8  5024               	movf	LCD_Update@j^0,w,c
   941  0004FA  0D02               	mullw	2
   942  0004FC  CFF3 F018          	movff	prodl,??_LCD_Update
   943  000500  CFF4 F019          	movff	prodh,??_LCD_Update+1
   944  000504  5040               	movf	_line_counter^0,w,c
   945  000506  0D2A               	mullw	42
   946  000508  0E60               	movlw	low _update_flag
   947  00050A  6E1A               	movwf	(??_LCD_Update+2)^0,c
   948  00050C  0E00               	movlw	high _update_flag
   949  00050E  6E1B               	movwf	(??_LCD_Update+3)^0,c
   950  000510  50F3               	movf	243,w,c
   951  000512  261A               	addwf	(??_LCD_Update+2)^0,f,c
   952  000514  50F4               	movf	244,w,c
   953  000516  221B               	addwfc	(??_LCD_Update+3)^0,f,c
   954  000518  5018               	movf	??_LCD_Update^0,w,c
   955  00051A  241A               	addwf	(??_LCD_Update+2)^0,w,c
   956  00051C  6ED9               	movwf	fsr2l,c
   957  00051E  5019               	movf	(??_LCD_Update+1)^0,w,c
   958  000520  201B               	addwfc	(??_LCD_Update+3)^0,w,c
   959  000522  6EDA               	movwf	fsr2h,c
   960  000524  50DE               	movf	postinc2,w,c
   961  000526  10DE               	iorwf	postinc2,w,c
   962  000528  B4D8               	btfsc	status,2,c
   963  00052A  EF99  F002         	goto	u1211
   964  00052E  EF9B  F002         	goto	u1210
   965  000532                     u1211:
   966  000532  EF5E  F003         	goto	l1901
   967  000536                     u1210:
   968  000536                     
   969                           ;LCD.c: 324:         {;LCD.c: 326:             for(i=0;i<16;i++)
   970  000536  0E00               	movlw	0
   971  000538  6E23               	movwf	LCD_Update@i^0,c
   972  00053A                     l1881:
   973                           
   974                           ;LCD.c: 327:             {;LCD.c: 329:                 if((update_flag[line_counter][j])
      +                          &(0x0001<<i))
   975  00053A  5024               	movf	LCD_Update@j^0,w,c
   976  00053C  0D02               	mullw	2
   977  00053E  CFF3 F018          	movff	prodl,??_LCD_Update
   978  000542  CFF4 F019          	movff	prodh,??_LCD_Update+1
   979  000546  5040               	movf	_line_counter^0,w,c
   980  000548  0D2A               	mullw	42
   981  00054A  0E60               	movlw	low _update_flag
   982  00054C  6E1A               	movwf	(??_LCD_Update+2)^0,c
   983  00054E  0E00               	movlw	high _update_flag
   984  000550  6E1B               	movwf	(??_LCD_Update+3)^0,c
   985  000552  50F3               	movf	243,w,c
   986  000554  261A               	addwf	(??_LCD_Update+2)^0,f,c
   987  000556  50F4               	movf	244,w,c
   988  000558  221B               	addwfc	(??_LCD_Update+3)^0,f,c
   989  00055A  5018               	movf	??_LCD_Update^0,w,c
   990  00055C  241A               	addwf	(??_LCD_Update+2)^0,w,c
   991  00055E  6ED9               	movwf	fsr2l,c
   992  000560  5019               	movf	(??_LCD_Update+1)^0,w,c
   993  000562  201B               	addwfc	(??_LCD_Update+3)^0,w,c
   994  000564  6EDA               	movwf	fsr2h,c
   995  000566  CFDE F01C          	movff	postinc2,??_LCD_Update+4
   996  00056A  CFDD F01D          	movff	postdec2,??_LCD_Update+5
   997  00056E  C023  F01E         	movff	LCD_Update@i,??_LCD_Update+6
   998  000572  0E01               	movlw	1
   999  000574  6E1F               	movwf	(??_LCD_Update+7)^0,c
  1000  000576  0E00               	movlw	0
  1001  000578  6E20               	movwf	(??_LCD_Update+8)^0,c
  1002  00057A  2A1E               	incf	(??_LCD_Update+6)^0,f,c
  1003  00057C  EFC3  F002         	goto	u1224
  1004  000580                     u1225:
  1005  000580  90D8               	bcf	status,0,c
  1006  000582  361F               	rlcf	(??_LCD_Update+7)^0,f,c
  1007  000584  3620               	rlcf	(??_LCD_Update+8)^0,f,c
  1008  000586                     u1224:
  1009  000586  2E1E               	decfsz	(??_LCD_Update+6)^0,f,c
  1010  000588  EFC0  F002         	goto	u1225
  1011  00058C  501C               	movf	(??_LCD_Update+4)^0,w,c
  1012  00058E  161F               	andwf	(??_LCD_Update+7)^0,f,c
  1013  000590  501D               	movf	(??_LCD_Update+5)^0,w,c
  1014  000592  1620               	andwf	(??_LCD_Update+8)^0,f,c
  1015  000594  501F               	movf	(??_LCD_Update+7)^0,w,c
  1016  000596  1020               	iorwf	(??_LCD_Update+8)^0,w,c
  1017  000598  B4D8               	btfsc	status,2,c
  1018  00059A  EFD1  F002         	goto	u1231
  1019  00059E  EFD3  F002         	goto	u1230
  1020  0005A2                     u1231:
  1021  0005A2  EF55  F003         	goto	l1897
  1022  0005A6                     u1230:
  1023  0005A6                     
  1024                           ;LCD.c: 330:                 {;LCD.c: 332:                     uint8 address = lines_off
      +                          set_adresses[line_counter] + ((j*16)+i);
  1025  0005A6  0E49               	movlw	low _lines_offset_adresses
  1026  0005A8  2440               	addwf	_line_counter^0,w,c
  1027  0005AA  6ED9               	movwf	fsr2l,c
  1028  0005AC  6ADA               	clrf	fsr2h,c
  1029  0005AE  0E00               	movlw	high _lines_offset_adresses
  1030  0005B0  22DA               	addwfc	fsr2h,f,c
  1031  0005B2  50DF               	movf	indf2,w,c
  1032  0005B4  6E18               	movwf	??_LCD_Update^0,c
  1033  0005B6  5024               	movf	LCD_Update@j^0,w,c
  1034  0005B8  0D10               	mullw	16
  1035  0005BA  50F3               	movf	243,w,c
  1036  0005BC  2418               	addwf	??_LCD_Update^0,w,c
  1037  0005BE  2423               	addwf	LCD_Update@i^0,w,c
  1038  0005C0  6E21               	movwf	LCD_Update@address^0,c
  1039  0005C2                     
  1040                           ;LCD.c: 334:                     LCD_SetDDRAM(address);
  1041  0005C2  5021               	movf	LCD_Update@address^0,w,c
  1042  0005C4  EC3B  F008         	call	_LCD_SetDDRAM
  1043  0005C8                     
  1044                           ;LCD.c: 336:                     LCD_Write_Symbol(LCD_Data_Buffer[line_counter][((j*16)+
      +                          i)]);
  1045  0005C8  5040               	movf	_line_counter^0,w,c
  1046  0005CA  0D28               	mullw	40
  1047  0005CC  0E00               	movlw	low _LCD_Data_Buffer
  1048  0005CE  6E18               	movwf	??_LCD_Update^0,c
  1049  0005D0  0E01               	movlw	high _LCD_Data_Buffer
  1050  0005D2  6E19               	movwf	(??_LCD_Update+1)^0,c
  1051  0005D4  50F3               	movf	243,w,c
  1052  0005D6  2618               	addwf	??_LCD_Update^0,f,c
  1053  0005D8  50F4               	movf	244,w,c
  1054  0005DA  2219               	addwfc	(??_LCD_Update+1)^0,f,c
  1055  0005DC  5024               	movf	LCD_Update@j^0,w,c
  1056  0005DE  0D10               	mullw	16
  1057  0005E0  50F3               	movf	243,w,c
  1058  0005E2  2618               	addwf	??_LCD_Update^0,f,c
  1059  0005E4  50F4               	movf	244,w,c
  1060  0005E6  2219               	addwfc	(??_LCD_Update+1)^0,f,c
  1061  0005E8  5023               	movf	LCD_Update@i^0,w,c
  1062  0005EA  2418               	addwf	??_LCD_Update^0,w,c
  1063  0005EC  6ED9               	movwf	fsr2l,c
  1064  0005EE  0E00               	movlw	0
  1065  0005F0  2019               	addwfc	(??_LCD_Update+1)^0,w,c
  1066  0005F2  6EDA               	movwf	fsr2h,c
  1067  0005F4  50DF               	movf	indf2,w,c
  1068  0005F6  ECE4  F007         	call	_LCD_Write_Symbol
  1069  0005FA                     
  1070                           ;LCD.c: 338:                     update_flag[line_counter][j] &= ~(1<<i);
  1071  0005FA  C023  F018         	movff	LCD_Update@i,??_LCD_Update
  1072  0005FE  0E01               	movlw	1
  1073  000600  6E19               	movwf	(??_LCD_Update+1)^0,c
  1074  000602  0E00               	movlw	0
  1075  000604  6E1A               	movwf	(??_LCD_Update+2)^0,c
  1076  000606  2A18               	incf	??_LCD_Update^0,f,c
  1077  000608  EF09  F003         	goto	u1244
  1078  00060C                     u1245:
  1079  00060C  90D8               	bcf	status,0,c
  1080  00060E  3619               	rlcf	(??_LCD_Update+1)^0,f,c
  1081  000610  361A               	rlcf	(??_LCD_Update+2)^0,f,c
  1082  000612                     u1244:
  1083  000612  2E18               	decfsz	??_LCD_Update^0,f,c
  1084  000614  EF06  F003         	goto	u1245
  1085  000618  1C19               	comf	(??_LCD_Update+1)^0,w,c
  1086  00061A  6E1B               	movwf	(??_LCD_Update+3)^0,c
  1087  00061C  1C1A               	comf	(??_LCD_Update+2)^0,w,c
  1088  00061E  6E1C               	movwf	(??_LCD_Update+4)^0,c
  1089  000620  5024               	movf	LCD_Update@j^0,w,c
  1090  000622  0D02               	mullw	2
  1091  000624  CFF3 F01D          	movff	prodl,??_LCD_Update+5
  1092  000628  CFF4 F01E          	movff	prodh,??_LCD_Update+6
  1093  00062C  5040               	movf	_line_counter^0,w,c
  1094  00062E  0D2A               	mullw	42
  1095  000630  0E60               	movlw	low _update_flag
  1096  000632  6E1F               	movwf	(??_LCD_Update+7)^0,c
  1097  000634  0E00               	movlw	high _update_flag
  1098  000636  6E20               	movwf	(??_LCD_Update+8)^0,c
  1099  000638  50F3               	movf	243,w,c
  1100  00063A  261F               	addwf	(??_LCD_Update+7)^0,f,c
  1101  00063C  50F4               	movf	244,w,c
  1102  00063E  2220               	addwfc	(??_LCD_Update+8)^0,f,c
  1103  000640  501D               	movf	(??_LCD_Update+5)^0,w,c
  1104  000642  241F               	addwf	(??_LCD_Update+7)^0,w,c
  1105  000644  6ED9               	movwf	fsr2l,c
  1106  000646  501E               	movf	(??_LCD_Update+6)^0,w,c
  1107  000648  2020               	addwfc	(??_LCD_Update+8)^0,w,c
  1108  00064A  6EDA               	movwf	fsr2h,c
  1109  00064C  501B               	movf	(??_LCD_Update+3)^0,w,c
  1110  00064E  16DE               	andwf	postinc2,f,c
  1111  000650  501C               	movf	(??_LCD_Update+4)^0,w,c
  1112  000652  16DD               	andwf	postdec2,f,c
  1113  000654                     
  1114                           ;LCD.c: 340:                     updated++;
  1115  000654  2A22               	incf	LCD_Update@updated^0,f,c
  1116  000656                     
  1117                           ;LCD.c: 341:                     if(updated == (5) || update_flag[line_counter][j]==0 )b
      +                          reak;
  1118  000656  0E05               	movlw	5
  1119  000658  1822               	xorwf	LCD_Update@updated^0,w,c
  1120  00065A  B4D8               	btfsc	status,2,c
  1121  00065C  EF32  F003         	goto	u1251
  1122  000660  EF34  F003         	goto	u1250
  1123  000664                     u1251:
  1124  000664  EF5E  F003         	goto	l1901
  1125  000668                     u1250:
  1126  000668  5024               	movf	LCD_Update@j^0,w,c
  1127  00066A  0D02               	mullw	2
  1128  00066C  CFF3 F018          	movff	prodl,??_LCD_Update
  1129  000670  CFF4 F019          	movff	prodh,??_LCD_Update+1
  1130  000674  5040               	movf	_line_counter^0,w,c
  1131  000676  0D2A               	mullw	42
  1132  000678  0E60               	movlw	low _update_flag
  1133  00067A  6E1A               	movwf	(??_LCD_Update+2)^0,c
  1134  00067C  0E00               	movlw	high _update_flag
  1135  00067E  6E1B               	movwf	(??_LCD_Update+3)^0,c
  1136  000680  50F3               	movf	243,w,c
  1137  000682  261A               	addwf	(??_LCD_Update+2)^0,f,c
  1138  000684  50F4               	movf	244,w,c
  1139  000686  221B               	addwfc	(??_LCD_Update+3)^0,f,c
  1140  000688  5018               	movf	??_LCD_Update^0,w,c
  1141  00068A  241A               	addwf	(??_LCD_Update+2)^0,w,c
  1142  00068C  6ED9               	movwf	fsr2l,c
  1143  00068E  5019               	movf	(??_LCD_Update+1)^0,w,c
  1144  000690  201B               	addwfc	(??_LCD_Update+3)^0,w,c
  1145  000692  6EDA               	movwf	fsr2h,c
  1146  000694  50DE               	movf	postinc2,w,c
  1147  000696  10DE               	iorwf	postinc2,w,c
  1148  000698  A4D8               	btfss	status,2,c
  1149  00069A  EF51  F003         	goto	u1261
  1150  00069E  EF53  F003         	goto	u1260
  1151  0006A2                     u1261:
  1152  0006A2  EF55  F003         	goto	l1897
  1153  0006A6                     u1260:
  1154  0006A6  EF5E  F003         	goto	l1901
  1155  0006AA                     l1897:
  1156                           
  1157                           ;LCD.c: 343:             }
  1158  0006AA  2A23               	incf	LCD_Update@i^0,f,c
  1159  0006AC  0E0F               	movlw	15
  1160  0006AE  6423               	cpfsgt	LCD_Update@i^0,c
  1161  0006B0  EF5C  F003         	goto	u1271
  1162  0006B4  EF5E  F003         	goto	u1270
  1163  0006B8                     u1271:
  1164  0006B8  EF9D  F002         	goto	l1881
  1165  0006BC                     u1270:
  1166  0006BC                     l1901:
  1167                           
  1168                           ;LCD.c: 345:     }
  1169  0006BC  2A24               	incf	LCD_Update@j^0,f,c
  1170  0006BE  0E02               	movlw	2
  1171  0006C0  6424               	cpfsgt	LCD_Update@j^0,c
  1172  0006C2  EF65  F003         	goto	u1281
  1173  0006C6  EF67  F003         	goto	u1280
  1174  0006CA                     u1281:
  1175  0006CA  EF7C  F002         	goto	l1873
  1176  0006CE                     u1280:
  1177  0006CE                     
  1178                           ;LCD.c: 346:     line_counter++;
  1179  0006CE  2A40               	incf	_line_counter^0,f,c
  1180  0006D0                     
  1181                           ;LCD.c: 347:     if(line_counter == (2))line_counter = 0;
  1182  0006D0  0E02               	movlw	2
  1183  0006D2  1840               	xorwf	_line_counter^0,w,c
  1184  0006D4  A4D8               	btfss	status,2,c
  1185  0006D6  EF6F  F003         	goto	u1291
  1186  0006DA  EF71  F003         	goto	u1290
  1187  0006DE                     u1291:
  1188  0006DE  EF73  F003         	goto	l111
  1189  0006E2                     u1290:
  1190  0006E2  0E00               	movlw	0
  1191  0006E4  6E40               	movwf	_line_counter^0,c
  1192  0006E6                     l111:
  1193  0006E6  0012               	return		;funcret
  1194  0006E8                     __end_of_LCD_Update:
  1195                           	opt callstack 0
  1196                           
  1197 ;; *************** function _LCD_SetDDRAM *****************
  1198 ;; Defined at:
  1199 ;;		line 299 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  ADDRESS         1    wreg     unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  ADDRESS         1   22[COMRAM] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    7
  1220 ;; This function calls:
  1221 ;;		_LCD_Write_Instruction
  1222 ;; This function is called by:
  1223 ;;		_LCD_Update
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text6
  1228  001076                     __ptext6:
  1229                           	opt callstack 0
  1230  001076                     _LCD_SetDDRAM:
  1231                           	opt callstack 22
  1232                           
  1233                           ;incstack = 0
  1234                           ;LCD_SetDDRAM@ADDRESS stored from wreg
  1235  001076  6E17               	movwf	LCD_SetDDRAM@ADDRESS^0,c
  1236  001078                     
  1237                           ;LCD.c: 299: static void LCD_SetDDRAM(uint8 ADDRESS);LCD.c: 300: {;LCD.c: 301:     ADDRE
      +                          SS &= 0x7f;
  1238  001078  9E17               	bcf	LCD_SetDDRAM@ADDRESS^0,7,c
  1239                           
  1240                           ;LCD.c: 302:     ADDRESS |= 0x80;
  1241  00107A  8E17               	bsf	LCD_SetDDRAM@ADDRESS^0,7,c
  1242  00107C                     
  1243                           ;LCD.c: 303:     LCD_Write_Instruction(ADDRESS);
  1244  00107C  5017               	movf	LCD_SetDDRAM@ADDRESS^0,w,c
  1245  00107E  EC04  F008         	call	_LCD_Write_Instruction
  1246  001082  0012               	return		;funcret
  1247  001084                     __end_of_LCD_SetDDRAM:
  1248                           	opt callstack 0
  1249                           
  1250 ;; *************** function _LCD_SetSymbol *****************
  1251 ;; Defined at:
  1252 ;;		line 265 in file "LCD.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  sym             1    wreg     unsigned char 
  1255 ;;  row             1   28[COMRAM] unsigned char 
  1256 ;;  column          1   29[COMRAM] unsigned char 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  sym             1   35[COMRAM] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1268 ;;      Params:         2       0       0       0       0       0       0       0       0
  1269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1270 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1271 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1272 ;;Total ram usage:        8 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    6
  1275 ;; This function calls:
  1276 ;;		___awdiv
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text7
  1283  000BEC                     __ptext7:
  1284                           	opt callstack 0
  1285  000BEC                     _LCD_SetSymbol:
  1286                           	opt callstack 24
  1287                           
  1288                           ;incstack = 0
  1289                           ;LCD_SetSymbol@sym stored from wreg
  1290  000BEC  6E24               	movwf	LCD_SetSymbol@sym^0,c
  1291  000BEE                     
  1292                           ;LCD.c: 265: void LCD_SetSymbol(uint8 sym,uint8 row,uint8 column);LCD.c: 266: {;LCD.c: 2
      +                          67:     if(row >= (2) && column >= (40))return;
  1293  000BEE  0E01               	movlw	1
  1294  000BF0  641D               	cpfsgt	LCD_SetSymbol@row^0,c
  1295  000BF2  EFFD  F005         	goto	u1171
  1296  000BF6  EFFF  F005         	goto	u1170
  1297  000BFA                     u1171:
  1298  000BFA  EF09  F006         	goto	l1855
  1299  000BFE                     u1170:
  1300  000BFE  0E27               	movlw	39
  1301  000C00  641E               	cpfsgt	LCD_SetSymbol@column^0,c
  1302  000C02  EF05  F006         	goto	u1181
  1303  000C06  EF07  F006         	goto	u1180
  1304  000C0A                     u1181:
  1305  000C0A  EF09  F006         	goto	l1855
  1306  000C0E                     u1180:
  1307  000C0E  EF4C  F006         	goto	l97
  1308  000C12                     l1855:
  1309                           
  1310                           ;LCD.c: 268:     LCD_Data_Buffer[row][column] = sym;
  1311  000C12  501D               	movf	LCD_SetSymbol@row^0,w,c
  1312  000C14  0D28               	mullw	40
  1313  000C16  0E00               	movlw	low _LCD_Data_Buffer
  1314  000C18  6E1F               	movwf	??_LCD_SetSymbol^0,c
  1315  000C1A  0E01               	movlw	high _LCD_Data_Buffer
  1316  000C1C  6E20               	movwf	(??_LCD_SetSymbol+1)^0,c
  1317  000C1E  50F3               	movf	243,w,c
  1318  000C20  261F               	addwf	??_LCD_SetSymbol^0,f,c
  1319  000C22  50F4               	movf	244,w,c
  1320  000C24  2220               	addwfc	(??_LCD_SetSymbol+1)^0,f,c
  1321  000C26  501E               	movf	LCD_SetSymbol@column^0,w,c
  1322  000C28  241F               	addwf	??_LCD_SetSymbol^0,w,c
  1323  000C2A  6ED9               	movwf	fsr2l,c
  1324  000C2C  0E00               	movlw	0
  1325  000C2E  2020               	addwfc	(??_LCD_SetSymbol+1)^0,w,c
  1326  000C30  6EDA               	movwf	fsr2h,c
  1327  000C32  C024  FFDF         	movff	LCD_SetSymbol@sym,indf2
  1328  000C36                     
  1329                           ;LCD.c: 269:     update_flag[row][column/16] |= (0x0001<<(column%16));
  1330  000C36  C01E  F01F         	movff	LCD_SetSymbol@column,??_LCD_SetSymbol
  1331  000C3A  0E0F               	movlw	15
  1332  000C3C  161F               	andwf	??_LCD_SetSymbol^0,f,c
  1333  000C3E  0E01               	movlw	1
  1334  000C40  6E20               	movwf	(??_LCD_SetSymbol+1)^0,c
  1335  000C42  0E00               	movlw	0
  1336  000C44  6E21               	movwf	(??_LCD_SetSymbol+2)^0,c
  1337  000C46  2A1F               	incf	??_LCD_SetSymbol^0,f,c
  1338  000C48  EF29  F006         	goto	u1194
  1339  000C4C                     u1195:
  1340  000C4C  90D8               	bcf	status,0,c
  1341  000C4E  3620               	rlcf	(??_LCD_SetSymbol+1)^0,f,c
  1342  000C50  3621               	rlcf	(??_LCD_SetSymbol+2)^0,f,c
  1343  000C52                     u1194:
  1344  000C52  2E1F               	decfsz	??_LCD_SetSymbol^0,f,c
  1345  000C54  EF26  F006         	goto	u1195
  1346  000C58  C01E  F015         	movff	LCD_SetSymbol@column,___awdiv@dividend
  1347  000C5C  6A16               	clrf	(___awdiv@dividend+1)^0,c
  1348  000C5E  0E00               	movlw	0
  1349  000C60  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1350  000C62  0E10               	movlw	16
  1351  000C64  6E17               	movwf	___awdiv@divisor^0,c
  1352  000C66  ECDB  F004         	call	___awdiv	;wreg free
  1353  000C6A  90D8               	bcf	status,0,c
  1354  000C6C  3615               	rlcf	?___awdiv^0,f,c
  1355  000C6E  3616               	rlcf	(?___awdiv+1)^0,f,c
  1356  000C70  501D               	movf	LCD_SetSymbol@row^0,w,c
  1357  000C72  0D2A               	mullw	42
  1358  000C74  0E60               	movlw	low _update_flag
  1359  000C76  6E22               	movwf	(??_LCD_SetSymbol+3)^0,c
  1360  000C78  0E00               	movlw	high _update_flag
  1361  000C7A  6E23               	movwf	(??_LCD_SetSymbol+4)^0,c
  1362  000C7C  50F3               	movf	243,w,c
  1363  000C7E  2622               	addwf	(??_LCD_SetSymbol+3)^0,f,c
  1364  000C80  50F4               	movf	244,w,c
  1365  000C82  2223               	addwfc	(??_LCD_SetSymbol+4)^0,f,c
  1366  000C84  5015               	movf	?___awdiv^0,w,c
  1367  000C86  2422               	addwf	(??_LCD_SetSymbol+3)^0,w,c
  1368  000C88  6ED9               	movwf	fsr2l,c
  1369  000C8A  5016               	movf	(?___awdiv+1)^0,w,c
  1370  000C8C  2023               	addwfc	(??_LCD_SetSymbol+4)^0,w,c
  1371  000C8E  6EDA               	movwf	fsr2h,c
  1372  000C90  5020               	movf	(??_LCD_SetSymbol+1)^0,w,c
  1373  000C92  12DE               	iorwf	postinc2,f,c
  1374  000C94  5021               	movf	(??_LCD_SetSymbol+2)^0,w,c
  1375  000C96  12DD               	iorwf	postdec2,f,c
  1376  000C98                     l97:
  1377  000C98  0012               	return		;funcret
  1378  000C9A                     __end_of_LCD_SetSymbol:
  1379                           	opt callstack 0
  1380                           
  1381 ;; *************** function ___awdiv *****************
  1382 ;; Defined at:
  1383 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  dividend        2   20[COMRAM] int 
  1386 ;;  divisor         2   22[COMRAM] int 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  quotient        2   26[COMRAM] int 
  1389 ;;  sign            1   25[COMRAM] unsigned char 
  1390 ;;  counter         1   24[COMRAM] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2   20[COMRAM] int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         4       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    5
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_LCD_SetSymbol
  1411 ;;		_LCD_SetString
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text8
  1416  0009B6                     __ptext8:
  1417                           	opt callstack 0
  1418  0009B6                     ___awdiv:
  1419                           	opt callstack 24
  1420  0009B6  0E00               	movlw	0
  1421  0009B8  6E1A               	movwf	___awdiv@sign^0,c
  1422  0009BA  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
  1423  0009BC  EFE4  F004         	goto	u1030
  1424  0009C0  EFE2  F004         	goto	u1031
  1425  0009C4                     u1031:
  1426  0009C4  EFEA  F004         	goto	l1711
  1427  0009C8                     u1030:
  1428  0009C8  6C17               	negf	___awdiv@divisor^0,c
  1429  0009CA  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  1430  0009CC  B0D8               	btfsc	status,0,c
  1431  0009CE  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  1432  0009D0  0E01               	movlw	1
  1433  0009D2  6E1A               	movwf	___awdiv@sign^0,c
  1434  0009D4                     l1711:
  1435  0009D4  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
  1436  0009D6  EFF1  F004         	goto	u1040
  1437  0009DA  EFEF  F004         	goto	u1041
  1438  0009DE                     u1041:
  1439  0009DE  EFF7  F004         	goto	l1717
  1440  0009E2                     u1040:
  1441  0009E2  6C15               	negf	___awdiv@dividend^0,c
  1442  0009E4  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  1443  0009E6  B0D8               	btfsc	status,0,c
  1444  0009E8  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  1445  0009EA  0E01               	movlw	1
  1446  0009EC  1A1A               	xorwf	___awdiv@sign^0,f,c
  1447  0009EE                     l1717:
  1448  0009EE  0E00               	movlw	0
  1449  0009F0  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  1450  0009F2  0E00               	movlw	0
  1451  0009F4  6E1B               	movwf	___awdiv@quotient^0,c
  1452  0009F6  5017               	movf	___awdiv@divisor^0,w,c
  1453  0009F8  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  1454  0009FA  B4D8               	btfsc	status,2,c
  1455  0009FC  EF02  F005         	goto	u1051
  1456  000A00  EF04  F005         	goto	u1050
  1457  000A04                     u1051:
  1458  000A04  EF2C  F005         	goto	l1739
  1459  000A08                     u1050:
  1460  000A08  0E01               	movlw	1
  1461  000A0A  6E19               	movwf	___awdiv@counter^0,c
  1462  000A0C  EF0C  F005         	goto	l1725
  1463  000A10                     l1723:
  1464  000A10  90D8               	bcf	status,0,c
  1465  000A12  3617               	rlcf	___awdiv@divisor^0,f,c
  1466  000A14  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  1467  000A16  2A19               	incf	___awdiv@counter^0,f,c
  1468  000A18                     l1725:
  1469  000A18  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  1470  000A1A  EF11  F005         	goto	u1061
  1471  000A1E  EF13  F005         	goto	u1060
  1472  000A22                     u1061:
  1473  000A22  EF08  F005         	goto	l1723
  1474  000A26                     u1060:
  1475  000A26                     l1727:
  1476  000A26  90D8               	bcf	status,0,c
  1477  000A28  361B               	rlcf	___awdiv@quotient^0,f,c
  1478  000A2A  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1479  000A2C  5017               	movf	___awdiv@divisor^0,w,c
  1480  000A2E  5C15               	subwf	___awdiv@dividend^0,w,c
  1481  000A30  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1482  000A32  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  1483  000A34  A0D8               	btfss	status,0,c
  1484  000A36  EF1F  F005         	goto	u1071
  1485  000A3A  EF21  F005         	goto	u1070
  1486  000A3E                     u1071:
  1487  000A3E  EF26  F005         	goto	l1735
  1488  000A42                     u1070:
  1489  000A42  5017               	movf	___awdiv@divisor^0,w,c
  1490  000A44  5E15               	subwf	___awdiv@dividend^0,f,c
  1491  000A46  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1492  000A48  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  1493  000A4A  801B               	bsf	___awdiv@quotient^0,0,c
  1494  000A4C                     l1735:
  1495  000A4C  90D8               	bcf	status,0,c
  1496  000A4E  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  1497  000A50  3217               	rrcf	___awdiv@divisor^0,f,c
  1498  000A52  2E19               	decfsz	___awdiv@counter^0,f,c
  1499  000A54  EF13  F005         	goto	l1727
  1500  000A58                     l1739:
  1501  000A58  501A               	movf	___awdiv@sign^0,w,c
  1502  000A5A  B4D8               	btfsc	status,2,c
  1503  000A5C  EF32  F005         	goto	u1081
  1504  000A60  EF34  F005         	goto	u1080
  1505  000A64                     u1081:
  1506  000A64  EF38  F005         	goto	l1743
  1507  000A68                     u1080:
  1508  000A68  6C1B               	negf	___awdiv@quotient^0,c
  1509  000A6A  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  1510  000A6C  B0D8               	btfsc	status,0,c
  1511  000A6E  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  1512  000A70                     l1743:
  1513  000A70  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1514  000A74  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1515  000A78  0012               	return		;funcret
  1516  000A7A                     __end_of___awdiv:
  1517                           	opt callstack 0
  1518                           
  1519 ;; *************** function _LCD_Init *****************
  1520 ;; Defined at:
  1521 ;;		line 62 in file "LCD.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1537 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1538 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    9
  1542 ;; This function calls:
  1543 ;;		_GPIO_Init_Nibble
  1544 ;;		_GPIO_Init_Pin
  1545 ;;		_LCD_Data_Out
  1546 ;;		_LCD_Init_Custom_Sym
  1547 ;;		_LCD_Write_Instruction
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text9
  1554  000800                     __ptext9:
  1555                           	opt callstack 0
  1556  000800                     _LCD_Init:
  1557                           	opt callstack 21
  1558  000800                     
  1559                           ;LCD.c: 68:     GPIO_Init_Pin(&(TRISE),(1),(0));
  1560  000800  0E96               	movlw	150
  1561  000802  6E15               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
  1562  000804  0E0F               	movlw	15
  1563  000806  6E16               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
  1564  000808  0E01               	movlw	1
  1565  00080A  6E17               	movwf	GPIO_Init_Pin@pin_number^0,c
  1566  00080C  0E00               	movlw	0
  1567  00080E  6E18               	movwf	GPIO_Init_Pin@dir^0,c
  1568  000810  EC70  F004         	call	_GPIO_Init_Pin	;wreg free
  1569                           
  1570                           ;LCD.c: 70:     GPIO_Init_Pin(&(TRISE),(2),(0));
  1571  000814  0E96               	movlw	150
  1572  000816  6E15               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
  1573  000818  0E0F               	movlw	15
  1574  00081A  6E16               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
  1575  00081C  0E02               	movlw	2
  1576  00081E  6E17               	movwf	GPIO_Init_Pin@pin_number^0,c
  1577  000820  0E00               	movlw	0
  1578  000822  6E18               	movwf	GPIO_Init_Pin@dir^0,c
  1579  000824  EC70  F004         	call	_GPIO_Init_Pin	;wreg free
  1580  000828                     
  1581                           ;LCD.c: 73:     GPIO_Init_Nibble(&(TRISD),(1),(0));
  1582  000828  0E95               	movlw	149
  1583  00082A  6E15               	movwf	GPIO_Init_Nibble@DirRegAddress^0,c
  1584  00082C  0E0F               	movlw	15
  1585  00082E  6E16               	movwf	(GPIO_Init_Nibble@DirRegAddress+1)^0,c
  1586  000830  0E01               	movlw	1
  1587  000832  6E17               	movwf	GPIO_Init_Nibble@nibble_num^0,c
  1588  000834  0E00               	movlw	0
  1589  000836  6E18               	movwf	GPIO_Init_Nibble@dir^0,c
  1590  000838  EC74  F003         	call	_GPIO_Init_Nibble	;wreg free
  1591  00083C                     
  1592                           ;LCD.c: 80:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1593  00083C  0E27               	movlw	39
  1594  00083E  6E22               	movwf	??_LCD_Init^0,c
  1595  000840  0EF5               	movlw	245
  1596  000842                     u1587:
  1597  000842  2EE8               	decfsz	wreg,f,c
  1598  000844  D7FE               	bra	u1587
  1599  000846  2E22               	decfsz	??_LCD_Init^0,f,c
  1600  000848  D7FC               	bra	u1587
  1601  00084A  F000               	nop	
  1602  00084C                     
  1603                           ;LCD.c: 83:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  1604  00084C  5084               	movf	132,w,c	;volatile
  1605  00084E  0BFB               	andlw	251
  1606  000850  6E84               	movwf	132,c	;volatile
  1607  000852                     
  1608                           ;LCD.c: 85:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  1609  000852  5084               	movf	132,w,c	;volatile
  1610  000854  0BFD               	andlw	253
  1611  000856  6E84               	movwf	132,c	;volatile
  1612  000858                     
  1613                           ;LCD.c: 88:     LCD_Data_Out(LCD_FunctionReset);
  1614  000858  0E30               	movlw	48
  1615  00085A  ECB8  F007         	call	_LCD_Data_Out
  1616  00085E                     
  1617                           ;LCD.c: 89:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1618  00085E  0E0D               	movlw	13
  1619  000860  6E22               	movwf	??_LCD_Init^0,c
  1620  000862  0EFC               	movlw	252
  1621  000864                     u1597:
  1622  000864  2EE8               	decfsz	wreg,f,c
  1623  000866  D7FE               	bra	u1597
  1624  000868  2E22               	decfsz	??_LCD_Init^0,f,c
  1625  00086A  D7FC               	bra	u1597
  1626  00086C                     
  1627                           ;LCD.c: 91:     LCD_Data_Out(LCD_FunctionReset);
  1628  00086C  0E30               	movlw	48
  1629  00086E  ECB8  F007         	call	_LCD_Data_Out
  1630  000872                     
  1631                           ;LCD.c: 92:     _delay((unsigned long)((150)*(8000000/4000000.0)));
  1632  000872  0E64               	movlw	100
  1633  000874                     u1607:
  1634  000874  2EE8               	decfsz	wreg,f,c
  1635  000876  D7FE               	bra	u1607
  1636  000878                     
  1637                           ;LCD.c: 94:     LCD_Data_Out(LCD_FunctionReset);
  1638  000878  0E30               	movlw	48
  1639  00087A  ECB8  F007         	call	_LCD_Data_Out
  1640  00087E                     
  1641                           ;LCD.c: 97:     LCD_Data_Out(LCD_FunctionSet4bit);
  1642  00087E  0E28               	movlw	40
  1643  000880  ECB8  F007         	call	_LCD_Data_Out
  1644  000884                     
  1645                           ;LCD.c: 98:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1646  000884  0E21               	movlw	33
  1647  000886                     u1617:
  1648  000886  2EE8               	decfsz	wreg,f,c
  1649  000888  D7FE               	bra	u1617
  1650  00088A  F000               	nop	
  1651  00088C                     
  1652                           ;LCD.c: 101:     LCD_Write_Instruction(LCD_FunctionSet4bit);
  1653  00088C  0E28               	movlw	40
  1654  00088E  EC04  F008         	call	_LCD_Write_Instruction
  1655  000892                     
  1656                           ;LCD.c: 102:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1657  000892  0E21               	movlw	33
  1658  000894                     u1627:
  1659  000894  2EE8               	decfsz	wreg,f,c
  1660  000896  D7FE               	bra	u1627
  1661  000898  F000               	nop	
  1662  00089A                     
  1663                           ;LCD.c: 105:     LCD_Write_Instruction(LCD_DisplayOff);
  1664  00089A  0E08               	movlw	8
  1665  00089C  EC04  F008         	call	_LCD_Write_Instruction
  1666  0008A0                     
  1667                           ;LCD.c: 106:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1668  0008A0  0E21               	movlw	33
  1669  0008A2                     u1637:
  1670  0008A2  2EE8               	decfsz	wreg,f,c
  1671  0008A4  D7FE               	bra	u1637
  1672  0008A6  F000               	nop	
  1673  0008A8                     
  1674                           ;LCD.c: 109:     LCD_Write_Instruction(LCD_Clear);
  1675  0008A8  0E01               	movlw	1
  1676  0008AA  EC04  F008         	call	_LCD_Write_Instruction
  1677  0008AE                     
  1678                           ;LCD.c: 110:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1679  0008AE  0E06               	movlw	6
  1680  0008B0  6E22               	movwf	??_LCD_Init^0,c
  1681  0008B2  0E30               	movlw	48
  1682  0008B4                     u1647:
  1683  0008B4  2EE8               	decfsz	wreg,f,c
  1684  0008B6  D7FE               	bra	u1647
  1685  0008B8  2E22               	decfsz	??_LCD_Init^0,f,c
  1686  0008BA  D7FC               	bra	u1647
  1687  0008BC  D000               	nop2	
  1688  0008BE                     
  1689                           ;LCD.c: 113:     LCD_Write_Instruction(LCD_EntryMode);
  1690  0008BE  0E06               	movlw	6
  1691  0008C0  EC04  F008         	call	_LCD_Write_Instruction
  1692  0008C4                     
  1693                           ;LCD.c: 114:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1694  0008C4  0E21               	movlw	33
  1695  0008C6                     u1657:
  1696  0008C6  2EE8               	decfsz	wreg,f,c
  1697  0008C8  D7FE               	bra	u1657
  1698  0008CA  F000               	nop	
  1699  0008CC                     
  1700                           ;LCD.c: 119:     LCD_Write_Instruction(LCD_DisplayOn);
  1701  0008CC  0E0C               	movlw	12
  1702  0008CE  EC04  F008         	call	_LCD_Write_Instruction
  1703  0008D2                     
  1704                           ;LCD.c: 120:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1705  0008D2  0E21               	movlw	33
  1706  0008D4                     u1667:
  1707  0008D4  2EE8               	decfsz	wreg,f,c
  1708  0008D6  D7FE               	bra	u1667
  1709  0008D8  F000               	nop	
  1710  0008DA                     
  1711                           ;LCD.c: 122:     LCD_Init_Custom_Sym();
  1712  0008DA  EC09  F000         	call	_LCD_Init_Custom_Sym	;wreg free
  1713  0008DE  0012               	return		;funcret
  1714  0008E0                     __end_of_LCD_Init:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _LCD_Init_Custom_Sym *****************
  1718 ;; Defined at:
  1719 ;;		line 351 in file "LCD.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  data            8   23[COMRAM] unsigned char [8]
  1724 ;;  i               2   31[COMRAM] int 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0
  1735 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1737 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1738 ;;Total ram usage:       10 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    8
  1741 ;; This function calls:
  1742 ;;		_LCD_SetCGRAM
  1743 ;;		_LCD_Write_Symbol
  1744 ;; This function is called by:
  1745 ;;		_LCD_Init
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text10
  1750  000012                     __ptext10:
  1751                           	opt callstack 0
  1752  000012                     _LCD_Init_Custom_Sym:
  1753                           	opt callstack 21
  1754  000012                     
  1755                           ;LCD.c: 354:     int i;;LCD.c: 355:     uint8 data[8] = { 0x00,
  1756  000012  EE20  F041         	lfsr	2,LCD_Init_Custom_Sym@F3257
  1757  000016  EE10  F018         	lfsr	1,LCD_Init_Custom_Sym@data
  1758  00001A  0E07               	movlw	7
  1759  00001C                     u951:
  1760  00001C  CFDB FFE3          	movff	plusw2,plusw1
  1761  000020  06E8               	decf	wreg,f,c
  1762  000022  E2FC               	bc	u951
  1763  000024                     
  1764                           ;LCD.c: 363:     LCD_SetCGRAM(LCD_MOTOR1*8);
  1765  000024  0E00               	movlw	0
  1766  000026  EC33  F008         	call	_LCD_SetCGRAM
  1767  00002A                     
  1768                           ;LCD.c: 364:     for(i =0;i<8;i++){
  1769  00002A  0E00               	movlw	0
  1770  00002C  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1771  00002E  0E00               	movlw	0
  1772  000030  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  1773  000032                     l1587:
  1774                           
  1775                           ;LCD.c: 365:         LCD_Write_Symbol(data[i]);
  1776  000032  0E18               	movlw	low LCD_Init_Custom_Sym@data
  1777  000034  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1778  000036  6ED9               	movwf	fsr2l,c
  1779  000038  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1780  00003A  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1781  00003C  6EDA               	movwf	fsr2h,c
  1782  00003E  50DF               	movf	indf2,w,c
  1783  000040  ECE4  F007         	call	_LCD_Write_Symbol
  1784  000044                     
  1785                           ;LCD.c: 366:     }
  1786  000044  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1787  000046  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1788  000048  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1789  00004A  EF30  F000         	goto	u961
  1790  00004E  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1791  000050  E109               	bnz	u960
  1792  000052  0E08               	movlw	8
  1793  000054  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1794  000056  A0D8               	btfss	status,0,c
  1795  000058  EF30  F000         	goto	u961
  1796  00005C  EF32  F000         	goto	u960
  1797  000060                     u961:
  1798  000060  EF19  F000         	goto	l1587
  1799  000064                     u960:
  1800  000064                     
  1801                           ;LCD.c: 368:     data[0] = 0x00;
  1802  000064  0E00               	movlw	0
  1803  000066  6E18               	movwf	LCD_Init_Custom_Sym@data^0,c
  1804                           
  1805                           ;LCD.c: 369:     data[1] = 0xF8;
  1806  000068  0EF8               	movlw	248
  1807  00006A  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1808                           
  1809                           ;LCD.c: 370:     data[2] = 0xF8;
  1810  00006C  0EF8               	movlw	248
  1811  00006E  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1812                           
  1813                           ;LCD.c: 371:     data[3] = 0x00;
  1814  000070  0E00               	movlw	0
  1815  000072  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1816                           
  1817                           ;LCD.c: 372:     data[4] = 0x00;
  1818  000074  0E00               	movlw	0
  1819  000076  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1820                           
  1821                           ;LCD.c: 373:     data[5] = 0x00;
  1822  000078  0E00               	movlw	0
  1823  00007A  6E1D               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1824                           
  1825                           ;LCD.c: 374:     data[6] = 0x00;
  1826  00007C  0E00               	movlw	0
  1827  00007E  6E1E               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1828                           
  1829                           ;LCD.c: 375:     data[7] = 0x00;
  1830  000080  0E00               	movlw	0
  1831  000082  6E1F               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1832  000084                     
  1833                           ;LCD.c: 376:     LCD_SetCGRAM(LCD_MOTOR2*8);
  1834  000084  0E08               	movlw	8
  1835  000086  EC33  F008         	call	_LCD_SetCGRAM
  1836  00008A                     
  1837                           ;LCD.c: 377:     for(i =0;i<8;i++){
  1838  00008A  0E00               	movlw	0
  1839  00008C  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1840  00008E  0E00               	movlw	0
  1841  000090  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  1842  000092                     l1603:
  1843                           
  1844                           ;LCD.c: 378:         LCD_Write_Symbol(data[i]);
  1845  000092  0E18               	movlw	low LCD_Init_Custom_Sym@data
  1846  000094  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1847  000096  6ED9               	movwf	fsr2l,c
  1848  000098  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1849  00009A  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1850  00009C  6EDA               	movwf	fsr2h,c
  1851  00009E  50DF               	movf	indf2,w,c
  1852  0000A0  ECE4  F007         	call	_LCD_Write_Symbol
  1853  0000A4                     
  1854                           ;LCD.c: 379:     }
  1855  0000A4  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1856  0000A6  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1857  0000A8  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1858  0000AA  EF60  F000         	goto	u971
  1859  0000AE  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1860  0000B0  E109               	bnz	u970
  1861  0000B2  0E08               	movlw	8
  1862  0000B4  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1863  0000B6  A0D8               	btfss	status,0,c
  1864  0000B8  EF60  F000         	goto	u971
  1865  0000BC  EF62  F000         	goto	u970
  1866  0000C0                     u971:
  1867  0000C0  EF49  F000         	goto	l1603
  1868  0000C4                     u970:
  1869  0000C4                     
  1870                           ;LCD.c: 381:     data[0] = 0x00;
  1871  0000C4  0E00               	movlw	0
  1872  0000C6  6E18               	movwf	LCD_Init_Custom_Sym@data^0,c
  1873                           
  1874                           ;LCD.c: 382:     data[1] = 0x03;
  1875  0000C8  0E03               	movlw	3
  1876  0000CA  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1877                           
  1878                           ;LCD.c: 383:     data[2] = 0x03;
  1879  0000CC  0E03               	movlw	3
  1880  0000CE  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1881                           
  1882                           ;LCD.c: 384:     data[3] = 0x00;
  1883  0000D0  0E00               	movlw	0
  1884  0000D2  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1885                           
  1886                           ;LCD.c: 385:     data[4] = 0x00;
  1887  0000D4  0E00               	movlw	0
  1888  0000D6  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1889                           
  1890                           ;LCD.c: 386:     data[5] = 0x00;
  1891  0000D8  0E00               	movlw	0
  1892  0000DA  6E1D               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1893                           
  1894                           ;LCD.c: 387:     data[6] = 0x00;
  1895  0000DC  0E00               	movlw	0
  1896  0000DE  6E1E               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1897                           
  1898                           ;LCD.c: 388:     data[7] = 0x00;
  1899  0000E0  0E00               	movlw	0
  1900  0000E2  6E1F               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1901  0000E4                     
  1902                           ;LCD.c: 389:     LCD_SetCGRAM(LCD_MOTOR3*8);
  1903  0000E4  0E10               	movlw	16
  1904  0000E6  EC33  F008         	call	_LCD_SetCGRAM
  1905  0000EA                     
  1906                           ;LCD.c: 390:     for(i =0;i<8;i++){
  1907  0000EA  0E00               	movlw	0
  1908  0000EC  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1909  0000EE  0E00               	movlw	0
  1910  0000F0  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  1911  0000F2                     l1619:
  1912                           
  1913                           ;LCD.c: 391:         LCD_Write_Symbol(data[i]);
  1914  0000F2  0E18               	movlw	low LCD_Init_Custom_Sym@data
  1915  0000F4  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1916  0000F6  6ED9               	movwf	fsr2l,c
  1917  0000F8  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1918  0000FA  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1919  0000FC  6EDA               	movwf	fsr2h,c
  1920  0000FE  50DF               	movf	indf2,w,c
  1921  000100  ECE4  F007         	call	_LCD_Write_Symbol
  1922  000104                     
  1923                           ;LCD.c: 392:     }
  1924  000104  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1925  000106  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1926  000108  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1927  00010A  EF90  F000         	goto	u981
  1928  00010E  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1929  000110  E109               	bnz	u980
  1930  000112  0E08               	movlw	8
  1931  000114  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1932  000116  A0D8               	btfss	status,0,c
  1933  000118  EF90  F000         	goto	u981
  1934  00011C  EF92  F000         	goto	u980
  1935  000120                     u981:
  1936  000120  EF79  F000         	goto	l1619
  1937  000124                     u980:
  1938  000124                     
  1939                           ;LCD.c: 395:     data[0] = 0x00;
  1940  000124  0E00               	movlw	0
  1941  000126  6E18               	movwf	LCD_Init_Custom_Sym@data^0,c
  1942                           
  1943                           ;LCD.c: 396:     data[1] = 0x00;
  1944  000128  0E00               	movlw	0
  1945  00012A  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1946                           
  1947                           ;LCD.c: 397:     data[2] = 0x00;
  1948  00012C  0E00               	movlw	0
  1949  00012E  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1950                           
  1951                           ;LCD.c: 398:     data[3] = 0x00;
  1952  000130  0E00               	movlw	0
  1953  000132  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1954                           
  1955                           ;LCD.c: 399:     data[4] = 0x00;
  1956  000134  0E00               	movlw	0
  1957  000136  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1958                           
  1959                           ;LCD.c: 400:     data[5] = 0x03;
  1960  000138  0E03               	movlw	3
  1961  00013A  6E1D               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1962                           
  1963                           ;LCD.c: 401:     data[6] = 0x03;
  1964  00013C  0E03               	movlw	3
  1965  00013E  6E1E               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1966                           
  1967                           ;LCD.c: 402:     data[7] = 0x00;
  1968  000140  0E00               	movlw	0
  1969  000142  6E1F               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1970  000144                     
  1971                           ;LCD.c: 403:     LCD_SetCGRAM(LCD_MOTOR4*8);
  1972  000144  0E18               	movlw	24
  1973  000146  EC33  F008         	call	_LCD_SetCGRAM
  1974  00014A                     
  1975                           ;LCD.c: 404:     for(i =0;i<8;i++){
  1976  00014A  0E00               	movlw	0
  1977  00014C  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1978  00014E  0E00               	movlw	0
  1979  000150  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  1980  000152                     l1635:
  1981                           
  1982                           ;LCD.c: 405:         LCD_Write_Symbol(data[i]);
  1983  000152  0E18               	movlw	low LCD_Init_Custom_Sym@data
  1984  000154  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1985  000156  6ED9               	movwf	fsr2l,c
  1986  000158  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1987  00015A  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1988  00015C  6EDA               	movwf	fsr2h,c
  1989  00015E  50DF               	movf	indf2,w,c
  1990  000160  ECE4  F007         	call	_LCD_Write_Symbol
  1991  000164                     
  1992                           ;LCD.c: 406:     }
  1993  000164  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1994  000166  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1995  000168  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1996  00016A  EFC0  F000         	goto	u991
  1997  00016E  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1998  000170  E109               	bnz	u990
  1999  000172  0E08               	movlw	8
  2000  000174  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  2001  000176  A0D8               	btfss	status,0,c
  2002  000178  EFC0  F000         	goto	u991
  2003  00017C  EFC2  F000         	goto	u990
  2004  000180                     u991:
  2005  000180  EFA9  F000         	goto	l1635
  2006  000184                     u990:
  2007  000184                     
  2008                           ;LCD.c: 409:     data[0] = 0xFF;
  2009  000184  6818               	setf	LCD_Init_Custom_Sym@data^0,c
  2010  000186                     
  2011                           ;LCD.c: 410:     data[1] = 0x11;
  2012  000186  0E11               	movlw	17
  2013  000188  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  2014                           
  2015                           ;LCD.c: 411:     data[2] = 0x15;
  2016  00018A  0E15               	movlw	21
  2017  00018C  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  2018                           
  2019                           ;LCD.c: 412:     data[3] = 0x15;
  2020  00018E  0E15               	movlw	21
  2021  000190  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  2022                           
  2023                           ;LCD.c: 413:     data[4] = 0x15;
  2024  000192  0E15               	movlw	21
  2025  000194  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  2026  000196                     
  2027                           ;LCD.c: 414:     data[5] = 0xFF;
  2028  000196  681D               	setf	(LCD_Init_Custom_Sym@data+5)^0,c
  2029  000198                     
  2030                           ;LCD.c: 415:     data[6] = 0xFF;
  2031  000198  681E               	setf	(LCD_Init_Custom_Sym@data+6)^0,c
  2032                           
  2033                           ;LCD.c: 416:     data[7] = 0x04;
  2034  00019A  0E04               	movlw	4
  2035  00019C  6E1F               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  2036  00019E                     
  2037                           ;LCD.c: 417:     LCD_SetCGRAM(LCD_LAMP*8);
  2038  00019E  0E20               	movlw	32
  2039  0001A0  EC33  F008         	call	_LCD_SetCGRAM
  2040  0001A4                     
  2041                           ;LCD.c: 418:     for(i =0;i<8;i++){
  2042  0001A4  0E00               	movlw	0
  2043  0001A6  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  2044  0001A8  0E00               	movlw	0
  2045  0001AA  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  2046  0001AC                     l1655:
  2047                           
  2048                           ;LCD.c: 419:         LCD_Write_Symbol(data[i]);
  2049  0001AC  0E18               	movlw	low LCD_Init_Custom_Sym@data
  2050  0001AE  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  2051  0001B0  6ED9               	movwf	fsr2l,c
  2052  0001B2  0E00               	movlw	high LCD_Init_Custom_Sym@data
  2053  0001B4  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2054  0001B6  6EDA               	movwf	fsr2h,c
  2055  0001B8  50DF               	movf	indf2,w,c
  2056  0001BA  ECE4  F007         	call	_LCD_Write_Symbol
  2057  0001BE                     
  2058                           ;LCD.c: 420:     }
  2059  0001BE  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  2060  0001C0  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  2061  0001C2  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  2062  0001C4  EFED  F000         	goto	u1001
  2063  0001C8  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2064  0001CA  E109               	bnz	u1000
  2065  0001CC  0E08               	movlw	8
  2066  0001CE  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  2067  0001D0  A0D8               	btfss	status,0,c
  2068  0001D2  EFED  F000         	goto	u1001
  2069  0001D6  EFEF  F000         	goto	u1000
  2070  0001DA                     u1001:
  2071  0001DA  EFD6  F000         	goto	l1655
  2072  0001DE                     u1000:
  2073  0001DE                     
  2074                           ;LCD.c: 426:     data[0] = 0xE9;
  2075  0001DE  0EE9               	movlw	233
  2076  0001E0  6E18               	movwf	LCD_Init_Custom_Sym@data^0,c
  2077                           
  2078                           ;LCD.c: 427:     data[1] = 0xF2;
  2079  0001E2  0EF2               	movlw	242
  2080  0001E4  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  2081                           
  2082                           ;LCD.c: 428:     data[2] = 0xE9;
  2083  0001E6  0EE9               	movlw	233
  2084  0001E8  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  2085                           
  2086                           ;LCD.c: 429:     data[3] = 0xF2;
  2087  0001EA  0EF2               	movlw	242
  2088  0001EC  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  2089                           
  2090                           ;LCD.c: 430:     data[4] = 0x00;
  2091  0001EE  0E00               	movlw	0
  2092  0001F0  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  2093  0001F2                     
  2094                           ;LCD.c: 431:     data[5] = 0xFF;
  2095  0001F2  681D               	setf	(LCD_Init_Custom_Sym@data+5)^0,c
  2096  0001F4                     
  2097                           ;LCD.c: 432:     data[6] = 0xFF;
  2098  0001F4  681E               	setf	(LCD_Init_Custom_Sym@data+6)^0,c
  2099                           
  2100                           ;LCD.c: 433:     data[7] = 0x0E;
  2101  0001F6  0E0E               	movlw	14
  2102  0001F8  6E1F               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  2103  0001FA                     
  2104                           ;LCD.c: 434:     LCD_SetCGRAM(LCD_HEATER*8);
  2105  0001FA  0E28               	movlw	40
  2106  0001FC  EC33  F008         	call	_LCD_SetCGRAM
  2107  000200                     
  2108                           ;LCD.c: 435:     for(i =0;i<8;i++){
  2109  000200  0E00               	movlw	0
  2110  000202  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  2111  000204  0E00               	movlw	0
  2112  000206  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  2113  000208                     l1675:
  2114                           
  2115                           ;LCD.c: 436:         LCD_Write_Symbol(data[i]);
  2116  000208  0E18               	movlw	low LCD_Init_Custom_Sym@data
  2117  00020A  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  2118  00020C  6ED9               	movwf	fsr2l,c
  2119  00020E  0E00               	movlw	high LCD_Init_Custom_Sym@data
  2120  000210  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2121  000212  6EDA               	movwf	fsr2h,c
  2122  000214  50DF               	movf	indf2,w,c
  2123  000216  ECE4  F007         	call	_LCD_Write_Symbol
  2124  00021A                     
  2125                           ;LCD.c: 437:     }
  2126  00021A  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  2127  00021C  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  2128  00021E  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  2129  000220  EF1B  F001         	goto	u1011
  2130  000224  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2131  000226  E109               	bnz	u1010
  2132  000228  0E08               	movlw	8
  2133  00022A  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  2134  00022C  A0D8               	btfss	status,0,c
  2135  00022E  EF1B  F001         	goto	u1011
  2136  000232  EF1D  F001         	goto	u1010
  2137  000236                     u1011:
  2138  000236  EF04  F001         	goto	l1675
  2139  00023A                     u1010:
  2140  00023A                     
  2141                           ;LCD.c: 441:     data[0] = 0xFF;
  2142  00023A  6818               	setf	LCD_Init_Custom_Sym@data^0,c
  2143  00023C                     
  2144                           ;LCD.c: 442:     data[1] = 0x11;
  2145  00023C  0E11               	movlw	17
  2146  00023E  6E19               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  2147                           
  2148                           ;LCD.c: 443:     data[2] = 0x11;
  2149  000240  0E11               	movlw	17
  2150  000242  6E1A               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  2151                           
  2152                           ;LCD.c: 444:     data[3] = 0x11;
  2153  000244  0E11               	movlw	17
  2154  000246  6E1B               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  2155                           
  2156                           ;LCD.c: 445:     data[4] = 0x19;
  2157  000248  0E19               	movlw	25
  2158  00024A  6E1C               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  2159                           
  2160                           ;LCD.c: 446:     data[5] = 0x11;
  2161  00024C  0E11               	movlw	17
  2162  00024E  6E1D               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  2163                           
  2164                           ;LCD.c: 447:     data[6] = 0x11;
  2165  000250  0E11               	movlw	17
  2166  000252  6E1E               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  2167  000254                     
  2168                           ;LCD.c: 448:     data[7] = 0xFF;
  2169  000254  681F               	setf	(LCD_Init_Custom_Sym@data+7)^0,c
  2170  000256                     
  2171                           ;LCD.c: 449:     LCD_SetCGRAM(LCD_DOOR*8);
  2172  000256  0E30               	movlw	48
  2173  000258  EC33  F008         	call	_LCD_SetCGRAM
  2174  00025C                     
  2175                           ;LCD.c: 450:     for(i =0;i<8;i++){
  2176  00025C  0E00               	movlw	0
  2177  00025E  6E21               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  2178  000260  0E00               	movlw	0
  2179  000262  6E20               	movwf	LCD_Init_Custom_Sym@i^0,c
  2180  000264                     l1693:
  2181                           
  2182                           ;LCD.c: 451:         LCD_Write_Symbol(data[i]);
  2183  000264  0E18               	movlw	low LCD_Init_Custom_Sym@data
  2184  000266  2420               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  2185  000268  6ED9               	movwf	fsr2l,c
  2186  00026A  0E00               	movlw	high LCD_Init_Custom_Sym@data
  2187  00026C  2021               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2188  00026E  6EDA               	movwf	fsr2h,c
  2189  000270  50DF               	movf	indf2,w,c
  2190  000272  ECE4  F007         	call	_LCD_Write_Symbol
  2191  000276                     
  2192                           ;LCD.c: 452:     }
  2193  000276  4A20               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  2194  000278  2A21               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  2195  00027A  BE21               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  2196  00027C  EF49  F001         	goto	u1021
  2197  000280  5021               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  2198  000282  E109               	bnz	u1020
  2199  000284  0E08               	movlw	8
  2200  000286  5C20               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  2201  000288  A0D8               	btfss	status,0,c
  2202  00028A  EF49  F001         	goto	u1021
  2203  00028E  EF4B  F001         	goto	u1020
  2204  000292                     u1021:
  2205  000292  EF32  F001         	goto	l1693
  2206  000296                     u1020:
  2207  000296  0012               	return		;funcret
  2208  000298                     __end_of_LCD_Init_Custom_Sym:
  2209                           	opt callstack 0
  2210                           
  2211 ;; *************** function _LCD_Write_Symbol *****************
  2212 ;; Defined at:
  2213 ;;		line 170 in file "LCD.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  sym             1    wreg     unsigned char 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  sym             1   21[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2230 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        1 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    6
  2234 ;; This function calls:
  2235 ;;		_LCD_Data_Out
  2236 ;; This function is called by:
  2237 ;;		_LCD_Update
  2238 ;;		_LCD_Init_Custom_Sym
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text11
  2243  000FC8                     __ptext11:
  2244                           	opt callstack 0
  2245  000FC8                     _LCD_Write_Symbol:
  2246                           	opt callstack 23
  2247                           
  2248                           ;incstack = 0
  2249                           ;LCD_Write_Symbol@sym stored from wreg
  2250  000FC8  6E16               	movwf	LCD_Write_Symbol@sym^0,c
  2251  000FCA                     
  2252                           ;LCD.c: 170: static void LCD_Write_Symbol(uint8 sym);LCD.c: 171: {;LCD.c: 173:     (((PO
      +                          RTE))=((PORTE) & ~(1<<(2)))|(1<<(2)));
  2253  000FCA  5084               	movf	132,w,c	;volatile
  2254  000FCC  0BFB               	andlw	251
  2255  000FCE  0904               	iorlw	4
  2256  000FD0  6E84               	movwf	132,c	;volatile
  2257                           
  2258                           ;LCD.c: 175:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2259  000FD2  5084               	movf	132,w,c	;volatile
  2260  000FD4  0BFD               	andlw	253
  2261  000FD6  6E84               	movwf	132,c	;volatile
  2262  000FD8                     
  2263                           ;LCD.c: 179:     LCD_Data_Out((sym>>4));
  2264  000FD8  3816               	swapf	LCD_Write_Symbol@sym^0,w,c
  2265  000FDA  0B0F               	andlw	15
  2266  000FDC  ECB8  F007         	call	_LCD_Data_Out
  2267  000FE0                     
  2268                           ;LCD.c: 181:     LCD_Data_Out(sym);
  2269  000FE0  5016               	movf	LCD_Write_Symbol@sym^0,w,c
  2270  000FE2  ECB8  F007         	call	_LCD_Data_Out
  2271  000FE6  0012               	return		;funcret
  2272  000FE8                     __end_of_LCD_Write_Symbol:
  2273                           	opt callstack 0
  2274                           
  2275 ;; *************** function _LCD_SetCGRAM *****************
  2276 ;; Defined at:
  2277 ;;		line 454 in file "LCD.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  ADDRESS         1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  ADDRESS         1   22[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2294 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2295 ;;Total ram usage:        1 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    7
  2298 ;; This function calls:
  2299 ;;		_LCD_Write_Instruction
  2300 ;; This function is called by:
  2301 ;;		_LCD_Init_Custom_Sym
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text12
  2306  001066                     __ptext12:
  2307                           	opt callstack 0
  2308  001066                     _LCD_SetCGRAM:
  2309                           	opt callstack 21
  2310                           
  2311                           ;incstack = 0
  2312                           ;LCD_SetCGRAM@ADDRESS stored from wreg
  2313  001066  6E17               	movwf	LCD_SetCGRAM@ADDRESS^0,c
  2314  001068                     
  2315                           ;LCD.c: 454: static void LCD_SetCGRAM(uint8 ADDRESS);LCD.c: 455: {;LCD.c: 456:     ADDRE
      +                          SS &= 0x3f;
  2316  001068  0E3F               	movlw	63
  2317  00106A  1617               	andwf	LCD_SetCGRAM@ADDRESS^0,f,c
  2318  00106C                     
  2319                           ;LCD.c: 457:     ADDRESS |= 0x40;
  2320  00106C  8C17               	bsf	LCD_SetCGRAM@ADDRESS^0,6,c
  2321  00106E                     
  2322                           ;LCD.c: 458:     LCD_Write_Instruction(ADDRESS);
  2323  00106E  5017               	movf	LCD_SetCGRAM@ADDRESS^0,w,c
  2324  001070  EC04  F008         	call	_LCD_Write_Instruction
  2325  001074  0012               	return		;funcret
  2326  001076                     __end_of_LCD_SetCGRAM:
  2327                           	opt callstack 0
  2328                           
  2329 ;; *************** function _LCD_Write_Instruction *****************
  2330 ;; Defined at:
  2331 ;;		line 208 in file "LCD.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  inst            1    wreg     enum E3182
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  inst            1   21[COMRAM] enum E3182
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    6
  2352 ;; This function calls:
  2353 ;;		_LCD_Data_Out
  2354 ;; This function is called by:
  2355 ;;		_LCD_Init
  2356 ;;		_LCD_SetDDRAM
  2357 ;;		_LCD_SetCGRAM
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text13
  2362  001008                     __ptext13:
  2363                           	opt callstack 0
  2364  001008                     _LCD_Write_Instruction:
  2365                           	opt callstack 22
  2366                           
  2367                           ;incstack = 0
  2368                           ;LCD_Write_Instruction@inst stored from wreg
  2369  001008  6E16               	movwf	LCD_Write_Instruction@inst^0,c
  2370  00100A                     
  2371                           ;LCD.c: 208: static void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 209: {;LCD
      +                          .c: 211:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  2372  00100A  5084               	movf	132,w,c	;volatile
  2373  00100C  0BFB               	andlw	251
  2374  00100E  6E84               	movwf	132,c	;volatile
  2375                           
  2376                           ;LCD.c: 213:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2377  001010  5084               	movf	132,w,c	;volatile
  2378  001012  0BFD               	andlw	253
  2379  001014  6E84               	movwf	132,c	;volatile
  2380  001016                     
  2381                           ;LCD.c: 215:     LCD_Data_Out((inst>>4));
  2382  001016  3816               	swapf	LCD_Write_Instruction@inst^0,w,c
  2383  001018  0B0F               	andlw	15
  2384  00101A  ECB8  F007         	call	_LCD_Data_Out
  2385  00101E                     
  2386                           ;LCD.c: 216:     LCD_Data_Out(inst);
  2387  00101E  5016               	movf	LCD_Write_Instruction@inst^0,w,c
  2388  001020  ECB8  F007         	call	_LCD_Data_Out
  2389  001024  0012               	return		;funcret
  2390  001026                     __end_of_LCD_Write_Instruction:
  2391                           	opt callstack 0
  2392                           
  2393 ;; *************** function _LCD_Data_Out *****************
  2394 ;; Defined at:
  2395 ;;		line 230 in file "LCD.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  byte            1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  byte            1   20[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2412 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    5
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_LCD_Init
  2420 ;;		_LCD_Write_Symbol
  2421 ;;		_LCD_Write_Instruction
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text14
  2426  000F70                     __ptext14:
  2427                           	opt callstack 0
  2428  000F70                     _LCD_Data_Out:
  2429                           	opt callstack 23
  2430                           
  2431                           ;incstack = 0
  2432                           ;LCD_Data_Out@byte stored from wreg
  2433  000F70  6E15               	movwf	LCD_Data_Out@byte^0,c
  2434  000F72                     
  2435                           ;LCD.c: 230: static void LCD_Data_Out(uint8 byte);LCD.c: 231: {;LCD.c: 234:        (((PO
      +                          RTD))=(((PORTD))&~(0xF<<((1)*4)))); (((PORTD))=(((PORTD))|((byte<<((1)*4))&(0xF<<((1)*4)
      +                          ))));
  2436  000F72  5083               	movf	131,w,c	;volatile
  2437  000F74  0B0F               	andlw	15
  2438  000F76  6E83               	movwf	131,c	;volatile
  2439  000F78  3815               	swapf	LCD_Data_Out@byte^0,w,c
  2440  000F7A  0BF0               	andlw	240
  2441  000F7C  0BF0               	andlw	240
  2442  000F7E  1083               	iorwf	131,w,c	;volatile
  2443  000F80  6E83               	movwf	131,c	;volatile
  2444                           
  2445                           ;LCD.c: 237:        (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
  2446  000F82  5084               	movf	132,w,c	;volatile
  2447  000F84  0BFD               	andlw	253
  2448  000F86  0902               	iorlw	2
  2449  000F88  6E84               	movwf	132,c	;volatile
  2450  000F8A                     
  2451                           ;LCD.c: 239:        _delay((unsigned long)((100)*(8000000/4000000.0)));
  2452  000F8A  0E42               	movlw	66
  2453  000F8C                     u1677:
  2454  000F8C  2EE8               	decfsz	wreg,f,c
  2455  000F8E  D7FE               	bra	u1677
  2456  000F90  D000               	nop2	
  2457  000F92                     
  2458                           ;LCD.c: 241:        (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2459  000F92  5084               	movf	132,w,c	;volatile
  2460  000F94  0BFD               	andlw	253
  2461  000F96  6E84               	movwf	132,c	;volatile
  2462  000F98                     
  2463                           ;LCD.c: 243:        _delay((unsigned long)((1)*(8000000/4000000.0)));
  2464  000F98  D000               	nop2		;2 cycle nop
  2465  000F9A  0012               	return		;funcret
  2466  000F9C                     __end_of_LCD_Data_Out:
  2467                           	opt callstack 0
  2468                           
  2469 ;; *************** function _GPIO_Init_Pin *****************
  2470 ;; Defined at:
  2471 ;;		line 30 in file "GPIO.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  DirRegAddres    2   20[COMRAM] PTR volatile unsigned ch
  2474 ;;		 -> TRISE(1), TRISC(1), TRISB(1), 
  2475 ;;  pin_number      1   22[COMRAM] unsigned char 
  2476 ;;  dir             1   23[COMRAM] unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  ret             1    0        unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      unsigned char 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2488 ;;      Params:         4       0       0       0       0       0       0       0       0
  2489 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2490 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2491 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:       10 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    5
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_DO_Init
  2499 ;;		_LCD_Init
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text15
  2504  0008E0                     __ptext15:
  2505                           	opt callstack 0
  2506  0008E0                     _GPIO_Init_Pin:
  2507                           	opt callstack 23
  2508  0008E0                     
  2509                           ;GPIO.c: 34:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2510  0008E0  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2511  0008E4  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2512  0008E8  5092               	movf	146,w,c	;volatile
  2513  0008EA  18DE               	xorwf	postinc2,w,c
  2514  0008EC  B4D8               	btfsc	status,2,c
  2515  0008EE  EF7B  F004         	goto	u1491
  2516  0008F2  EF7D  F004         	goto	u1490
  2517  0008F6                     u1491:
  2518  0008F6  EFB3  F004         	goto	l2045
  2519  0008FA                     u1490:
  2520  0008FA  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2521  0008FE  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2522  000902  5093               	movf	147,w,c	;volatile
  2523  000904  18DE               	xorwf	postinc2,w,c
  2524  000906  B4D8               	btfsc	status,2,c
  2525  000908  EF88  F004         	goto	u1501
  2526  00090C  EF8A  F004         	goto	u1500
  2527  000910                     u1501:
  2528  000910  EFB3  F004         	goto	l2045
  2529  000914                     u1500:
  2530  000914  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2531  000918  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2532  00091C  5094               	movf	148,w,c	;volatile
  2533  00091E  18DE               	xorwf	postinc2,w,c
  2534  000920  B4D8               	btfsc	status,2,c
  2535  000922  EF95  F004         	goto	u1511
  2536  000926  EF97  F004         	goto	u1510
  2537  00092A                     u1511:
  2538  00092A  EFB3  F004         	goto	l2045
  2539  00092E                     u1510:
  2540  00092E  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2541  000932  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2542  000936  5095               	movf	149,w,c	;volatile
  2543  000938  18DE               	xorwf	postinc2,w,c
  2544  00093A  B4D8               	btfsc	status,2,c
  2545  00093C  EFA2  F004         	goto	u1521
  2546  000940  EFA4  F004         	goto	u1520
  2547  000944                     u1521:
  2548  000944  EFB3  F004         	goto	l2045
  2549  000948                     u1520:
  2550  000948  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2551  00094C  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2552  000950  5096               	movf	150,w,c	;volatile
  2553  000952  18DE               	xorwf	postinc2,w,c
  2554  000954  B4D8               	btfsc	status,2,c
  2555  000956  EFAF  F004         	goto	u1531
  2556  00095A  EFB1  F004         	goto	u1530
  2557  00095E                     u1531:
  2558  00095E  EFB3  F004         	goto	l2045
  2559  000962                     u1530:
  2560  000962                     
  2561                           ;GPIO.c: 40:     }
  2562  000962  EFDA  F004         	goto	l24
  2563  000966                     l2045:
  2564                           
  2565                           ;GPIO.c: 42:     {;GPIO.c: 43:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  2566  000966  C017  F019         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin
  2567  00096A  C018  F01A         	movff	GPIO_Init_Pin@dir,??_GPIO_Init_Pin+1
  2568  00096E  2A19               	incf	??_GPIO_Init_Pin^0,f,c
  2569  000970  EFBC  F004         	goto	u1544
  2570  000974                     u1545:
  2571  000974  90D8               	bcf	status,0,c
  2572  000976  361A               	rlcf	(??_GPIO_Init_Pin+1)^0,f,c
  2573  000978                     u1544:
  2574  000978  2E19               	decfsz	??_GPIO_Init_Pin^0,f,c
  2575  00097A  EFBA  F004         	goto	u1545
  2576  00097E  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2577  000982  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2578  000986  50DF               	movf	indf2,w,c
  2579  000988  6E1B               	movwf	(??_GPIO_Init_Pin+2)^0,c
  2580  00098A  C017  F01C         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin+3
  2581  00098E  0E01               	movlw	1
  2582  000990  6E1D               	movwf	(??_GPIO_Init_Pin+4)^0,c
  2583  000992  2A1C               	incf	(??_GPIO_Init_Pin+3)^0,f,c
  2584  000994  EFCE  F004         	goto	u1554
  2585  000998                     u1555:
  2586  000998  90D8               	bcf	status,0,c
  2587  00099A  361D               	rlcf	(??_GPIO_Init_Pin+4)^0,f,c
  2588  00099C                     u1554:
  2589  00099C  2E1C               	decfsz	(??_GPIO_Init_Pin+3)^0,f,c
  2590  00099E  EFCC  F004         	goto	u1555
  2591  0009A2  501D               	movf	(??_GPIO_Init_Pin+4)^0,w,c
  2592  0009A4  0AFF               	xorlw	255
  2593  0009A6  141B               	andwf	(??_GPIO_Init_Pin+2)^0,w,c
  2594  0009A8  101A               	iorwf	(??_GPIO_Init_Pin+1)^0,w,c
  2595  0009AA  C015  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2596  0009AE  C016  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2597  0009B2  6EDF               	movwf	indf2,c
  2598  0009B4                     l24:
  2599  0009B4  0012               	return		;funcret
  2600  0009B6                     __end_of_GPIO_Init_Pin:
  2601                           	opt callstack 0
  2602                           
  2603 ;; *************** function _GPIO_Init_Nibble *****************
  2604 ;; Defined at:
  2605 ;;		line 49 in file "GPIO.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  DirRegAddres    2   20[COMRAM] PTR volatile unsigned ch
  2608 ;;		 -> TRISD(1), 
  2609 ;;  nibble_num      1   22[COMRAM] unsigned char 
  2610 ;;  dir             1   23[COMRAM] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  ret             1    0        unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         4       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2625 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:       10 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    5
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_LCD_Init
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text16
  2637  0006E8                     __ptext16:
  2638                           	opt callstack 0
  2639  0006E8                     _GPIO_Init_Nibble:
  2640                           	opt callstack 24
  2641  0006E8                     
  2642                           ;GPIO.c: 53:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2643  0006E8  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2644  0006EC  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2645  0006F0  5092               	movf	146,w,c	;volatile
  2646  0006F2  18DE               	xorwf	postinc2,w,c
  2647  0006F4  B4D8               	btfsc	status,2,c
  2648  0006F6  EF7F  F003         	goto	u851
  2649  0006FA  EF81  F003         	goto	u850
  2650  0006FE                     u851:
  2651  0006FE  EFB7  F003         	goto	l1561
  2652  000702                     u850:
  2653  000702  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2654  000706  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2655  00070A  5093               	movf	147,w,c	;volatile
  2656  00070C  18DE               	xorwf	postinc2,w,c
  2657  00070E  B4D8               	btfsc	status,2,c
  2658  000710  EF8C  F003         	goto	u861
  2659  000714  EF8E  F003         	goto	u860
  2660  000718                     u861:
  2661  000718  EFB7  F003         	goto	l1561
  2662  00071C                     u860:
  2663  00071C  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2664  000720  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2665  000724  5094               	movf	148,w,c	;volatile
  2666  000726  18DE               	xorwf	postinc2,w,c
  2667  000728  B4D8               	btfsc	status,2,c
  2668  00072A  EF99  F003         	goto	u871
  2669  00072E  EF9B  F003         	goto	u870
  2670  000732                     u871:
  2671  000732  EFB7  F003         	goto	l1561
  2672  000736                     u870:
  2673  000736  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2674  00073A  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2675  00073E  5095               	movf	149,w,c	;volatile
  2676  000740  18DE               	xorwf	postinc2,w,c
  2677  000742  B4D8               	btfsc	status,2,c
  2678  000744  EFA6  F003         	goto	u881
  2679  000748  EFA8  F003         	goto	u880
  2680  00074C                     u881:
  2681  00074C  EFB7  F003         	goto	l1561
  2682  000750                     u880:
  2683  000750  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2684  000754  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2685  000758  5096               	movf	150,w,c	;volatile
  2686  00075A  18DE               	xorwf	postinc2,w,c
  2687  00075C  B4D8               	btfsc	status,2,c
  2688  00075E  EFB3  F003         	goto	u891
  2689  000762  EFB5  F003         	goto	u890
  2690  000766                     u891:
  2691  000766  EFB7  F003         	goto	l1561
  2692  00076A                     u890:
  2693  00076A                     
  2694                           ;GPIO.c: 59:     }
  2695  00076A  EFFF  F003         	goto	l33
  2696  00076E                     l1561:
  2697                           
  2698                           ;GPIO.c: 61:     {;GPIO.c: 62:         ((*DirRegAddress)= ((*DirRegAddress)& ~(0xF<<(nib
      +                          ble_num*4)))); ((*DirRegAddress)=((*DirRegAddress)|(((dir)?(~0):(0))&(0xF<<(nibble_num*4
      +                          )))));
  2699  00076E  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2700  000772  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2701  000776  50DF               	movf	indf2,w,c
  2702  000778  6E19               	movwf	??_GPIO_Init_Nibble^0,c
  2703  00077A  5017               	movf	GPIO_Init_Nibble@nibble_num^0,w,c
  2704  00077C  0D04               	mullw	4
  2705  00077E  CFF3 F01A          	movff	prodl,??_GPIO_Init_Nibble+1
  2706  000782  0E0F               	movlw	15
  2707  000784  6E1B               	movwf	(??_GPIO_Init_Nibble+2)^0,c
  2708  000786  2A1A               	incf	(??_GPIO_Init_Nibble+1)^0,f,c
  2709  000788  EFC8  F003         	goto	u904
  2710  00078C                     u905:
  2711  00078C  90D8               	bcf	status,0,c
  2712  00078E  361B               	rlcf	(??_GPIO_Init_Nibble+2)^0,f,c
  2713  000790                     u904:
  2714  000790  2E1A               	decfsz	(??_GPIO_Init_Nibble+1)^0,f,c
  2715  000792  EFC6  F003         	goto	u905
  2716  000796  501B               	movf	(??_GPIO_Init_Nibble+2)^0,w,c
  2717  000798  0AFF               	xorlw	255
  2718  00079A  1419               	andwf	??_GPIO_Init_Nibble^0,w,c
  2719  00079C  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2720  0007A0  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2721  0007A4  6EDF               	movwf	indf2,c
  2722  0007A6  5018               	movf	GPIO_Init_Nibble@dir^0,w,c
  2723  0007A8  A4D8               	btfss	status,2,c
  2724  0007AA  EFD9  F003         	goto	u911
  2725  0007AE  EFDB  F003         	goto	u910
  2726  0007B2                     u911:
  2727  0007B2  EFE1  F003         	goto	l30
  2728  0007B6                     u910:
  2729  0007B6  0E00               	movlw	0
  2730  0007B8  6E1E               	movwf	(_GPIO_Init_Nibble$44+1)^0,c
  2731  0007BA  0E00               	movlw	0
  2732  0007BC  6E1D               	movwf	_GPIO_Init_Nibble$44^0,c
  2733  0007BE  EFE3  F003         	goto	l1567
  2734  0007C2                     l30:
  2735  0007C2  681D               	setf	_GPIO_Init_Nibble$44^0,c
  2736  0007C4  681E               	setf	(_GPIO_Init_Nibble$44+1)^0,c
  2737  0007C6                     l1567:
  2738  0007C6  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2739  0007CA  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2740  0007CE  50DF               	movf	indf2,w,c
  2741  0007D0  6E19               	movwf	??_GPIO_Init_Nibble^0,c
  2742  0007D2  5017               	movf	GPIO_Init_Nibble@nibble_num^0,w,c
  2743  0007D4  0D04               	mullw	4
  2744  0007D6  CFF3 F01A          	movff	prodl,??_GPIO_Init_Nibble+1
  2745  0007DA  0E0F               	movlw	15
  2746  0007DC  6E1B               	movwf	(??_GPIO_Init_Nibble+2)^0,c
  2747  0007DE  2A1A               	incf	(??_GPIO_Init_Nibble+1)^0,f,c
  2748  0007E0  EFF4  F003         	goto	u924
  2749  0007E4                     u925:
  2750  0007E4  90D8               	bcf	status,0,c
  2751  0007E6  361B               	rlcf	(??_GPIO_Init_Nibble+2)^0,f,c
  2752  0007E8                     u924:
  2753  0007E8  2E1A               	decfsz	(??_GPIO_Init_Nibble+1)^0,f,c
  2754  0007EA  EFF2  F003         	goto	u925
  2755  0007EE  501B               	movf	(??_GPIO_Init_Nibble+2)^0,w,c
  2756  0007F0  141D               	andwf	_GPIO_Init_Nibble$44^0,w,c
  2757  0007F2  1019               	iorwf	??_GPIO_Init_Nibble^0,w,c
  2758  0007F4  C015  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2759  0007F8  C016  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2760  0007FC  6EDF               	movwf	indf2,c
  2761  0007FE                     l33:
  2762  0007FE  0012               	return		;funcret
  2763  000800                     __end_of_GPIO_Init_Nibble:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function _DO_SetState *****************
  2767 ;; Defined at:
  2768 ;;		line 37 in file "DO.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  DO              1    wreg     enum E3171
  2771 ;;  state           1   20[COMRAM] enum E3167
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  DO              1   30[COMRAM] enum E3171
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2783 ;;      Params:         1       0       0       0       0       0       0       0       0
  2784 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2785 ;;      Temps:          9       0       0       0       0       0       0       0       0
  2786 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2787 ;;Total ram usage:       11 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    5
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text17
  2798  000D48                     __ptext17:
  2799                           	opt callstack 0
  2800  000D48                     _DO_SetState:
  2801                           	opt callstack 25
  2802                           
  2803                           ;incstack = 0
  2804                           ;DO_SetState@DO stored from wreg
  2805  000D48  6E1F               	movwf	DO_SetState@DO^0,c
  2806  000D4A                     
  2807                           ;DO.c: 37: void DO_SetState(DO_t DO,LEDState_t state);DO.c: 38: {;DO.c: 39:     ((*(DOAr
      +                          ray[DO].portRegPtr))=(*(DOArray[DO].portRegPtr) & ~(1<<DOArray[DO].pin))|(state<<DOArray
      +                          [DO].pin));
  2808  000D4A  501F               	movf	DO_SetState@DO^0,w,c
  2809  000D4C  0D05               	mullw	5
  2810  000D4E  0E2A               	movlw	low _DOArray
  2811  000D50  24F3               	addwf	243,w,c
  2812  000D52  6ED9               	movwf	fsr2l,c
  2813  000D54  0E00               	movlw	high _DOArray
  2814  000D56  20F4               	addwfc	prodh,w,c
  2815  000D58  6EDA               	movwf	fsr2h,c
  2816  000D5A  CFDE F016          	movff	postinc2,??_DO_SetState
  2817  000D5E  CFDD F017          	movff	postdec2,??_DO_SetState+1
  2818  000D62  C016  FFD9         	movff	??_DO_SetState,fsr2l
  2819  000D66  C017  FFDA         	movff	??_DO_SetState+1,fsr2h
  2820  000D6A  501F               	movf	DO_SetState@DO^0,w,c
  2821  000D6C  0D05               	mullw	5
  2822  000D6E  0E2E               	movlw	low (_DOArray+4)
  2823  000D70  24F3               	addwf	243,w,c
  2824  000D72  6EE1               	movwf	fsr1l,c
  2825  000D74  0E00               	movlw	high (_DOArray+4)
  2826  000D76  20F4               	addwfc	prodh,w,c
  2827  000D78  6EE2               	movwf	fsr1h,c
  2828  000D7A  50E7               	movf	indf1,w,c
  2829  000D7C  6E18               	movwf	(??_DO_SetState+2)^0,c
  2830  000D7E  C015  F019         	movff	DO_SetState@state,??_DO_SetState+3
  2831  000D82  2A18               	incf	(??_DO_SetState+2)^0,f,c
  2832  000D84  EFC6  F006         	goto	u1154
  2833  000D88                     u1155:
  2834  000D88  90D8               	bcf	status,0,c
  2835  000D8A  3619               	rlcf	(??_DO_SetState+3)^0,f,c
  2836  000D8C                     u1154:
  2837  000D8C  2E18               	decfsz	(??_DO_SetState+2)^0,f,c
  2838  000D8E  EFC4  F006         	goto	u1155
  2839  000D92  501F               	movf	DO_SetState@DO^0,w,c
  2840  000D94  0D05               	mullw	5
  2841  000D96  0E2A               	movlw	low _DOArray
  2842  000D98  24F3               	addwf	243,w,c
  2843  000D9A  6EE1               	movwf	fsr1l,c
  2844  000D9C  0E00               	movlw	high _DOArray
  2845  000D9E  20F4               	addwfc	prodh,w,c
  2846  000DA0  6EE2               	movwf	fsr1h,c
  2847  000DA2  CFE6 F01A          	movff	postinc1,??_DO_SetState+4
  2848  000DA6  CFE5 F01B          	movff	postdec1,??_DO_SetState+5
  2849  000DAA  C01A  FFE1         	movff	??_DO_SetState+4,fsr1l
  2850  000DAE  C01B  FFE2         	movff	??_DO_SetState+5,fsr1h
  2851  000DB2  50E7               	movf	indf1,w,c
  2852  000DB4  6E1C               	movwf	(??_DO_SetState+6)^0,c
  2853  000DB6  501F               	movf	DO_SetState@DO^0,w,c
  2854  000DB8  0D05               	mullw	5
  2855  000DBA  0E2E               	movlw	low (_DOArray+4)
  2856  000DBC  24F3               	addwf	243,w,c
  2857  000DBE  6EE1               	movwf	fsr1l,c
  2858  000DC0  0E00               	movlw	high (_DOArray+4)
  2859  000DC2  20F4               	addwfc	prodh,w,c
  2860  000DC4  6EE2               	movwf	fsr1h,c
  2861  000DC6  50E7               	movf	indf1,w,c
  2862  000DC8  6E1D               	movwf	(??_DO_SetState+7)^0,c
  2863  000DCA  0E01               	movlw	1
  2864  000DCC  6E1E               	movwf	(??_DO_SetState+8)^0,c
  2865  000DCE  2A1D               	incf	(??_DO_SetState+7)^0,f,c
  2866  000DD0  EFEC  F006         	goto	u1164
  2867  000DD4                     u1165:
  2868  000DD4  90D8               	bcf	status,0,c
  2869  000DD6  361E               	rlcf	(??_DO_SetState+8)^0,f,c
  2870  000DD8                     u1164:
  2871  000DD8  2E1D               	decfsz	(??_DO_SetState+7)^0,f,c
  2872  000DDA  EFEA  F006         	goto	u1165
  2873  000DDE  501E               	movf	(??_DO_SetState+8)^0,w,c
  2874  000DE0  0AFF               	xorlw	255
  2875  000DE2  141C               	andwf	(??_DO_SetState+6)^0,w,c
  2876  000DE4  1019               	iorwf	(??_DO_SetState+3)^0,w,c
  2877  000DE6  6EDF               	movwf	indf2,c
  2878  000DE8  0012               	return		;funcret
  2879  000DEA                     __end_of_DO_SetState:
  2880                           	opt callstack 0
  2881                           
  2882 ;; *************** function _TMR0_ISR *****************
  2883 ;; Defined at:
  2884 ;;		line 38 in file "OSTimer.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2900 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2901 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2902 ;;Total ram usage:        4 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    4
  2905 ;; This function calls:
  2906 ;;		i2_LCD_SetSymbol
  2907 ;;		i2_LCD_Update
  2908 ;; This function is called by:
  2909 ;;		Interrupt level 2
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	intcode
  2914  000008                     __pintcode:
  2915                           	opt callstack 0
  2916  000008                     _TMR0_ISR:
  2917                           	opt callstack 21
  2918                           
  2919                           ;incstack = 0
  2920  000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2921  00000A  EDF5  F006         	call	int_func,f	;refresh shadow registers
  2922                           
  2923                           	psect	intcode_body
  2924  000DEA                     __pintcode_body:
  2925                           	opt callstack 21
  2926  000DEA                     int_func:
  2927                           	opt callstack 21
  2928  000DEA  0006               	pop		; remove dummy address from shadow register refresh
  2929  000DEC  CFD9 F011          	movff	fsr2l,??_TMR0_ISR
  2930  000DF0  CFDA F012          	movff	fsr2h,??_TMR0_ISR+1
  2931  000DF4  CFF3 F013          	movff	prodl,??_TMR0_ISR+2
  2932  000DF8  CFF4 F014          	movff	prodh,??_TMR0_ISR+3
  2933  000DFC                     
  2934                           ;OSTimer.c: 40:     static uint8 index = 0;;OSTimer.c: 42:     static uint16 counter = 0
      +                          ;;OSTimer.c: 45:     tempCounter+=(5);
  2935  000DFC  0E05               	movlw	5
  2936  000DFE  263B               	addwf	_tempCounter^0,f,c
  2937  000E00  0E00               	movlw	0
  2938  000E02  223C               	addwfc	(_tempCounter+1)^0,f,c
  2939                           
  2940                           ;OSTimer.c: 50:     if(tempCounter >= 1000){
  2941  000E04  0EE8               	movlw	232
  2942  000E06  5C3B               	subwf	_tempCounter^0,w,c
  2943  000E08  0E03               	movlw	3
  2944  000E0A  583C               	subwfb	(_tempCounter+1)^0,w,c
  2945  000E0C  A0D8               	btfss	status,0,c
  2946  000E0E  EF0B  F007         	goto	i2u147_41
  2947  000E12  EF0D  F007         	goto	i2u147_40
  2948  000E16                     i2u147_41:
  2949  000E16  EF28  F007         	goto	i2l2005
  2950  000E1A                     i2u147_40:
  2951  000E1A                     
  2952                           ;OSTimer.c: 51:         tempCounter = 0;
  2953  000E1A  0E00               	movlw	0
  2954  000E1C  6E3C               	movwf	(_tempCounter+1)^0,c
  2955  000E1E  0E00               	movlw	0
  2956  000E20  6E3B               	movwf	_tempCounter^0,c
  2957  000E22                     
  2958                           ;OSTimer.c: 53:         LCD_SetSymbol(LCD_DOOR,index,counter);
  2959  000E22  C03F  F009         	movff	TMR0_ISR@index,i2LCD_SetSymbol@row
  2960  000E26  C039  F00A         	movff	TMR0_ISR@counter,i2LCD_SetSymbol@column
  2961  000E2A  0E06               	movlw	6
  2962  000E2C  EC4D  F006         	call	i2_LCD_SetSymbol
  2963  000E30                     
  2964                           ;OSTimer.c: 54:         counter++;
  2965  000E30  4A39               	infsnz	TMR0_ISR@counter^0,f,c
  2966  000E32  2A3A               	incf	(TMR0_ISR@counter+1)^0,f,c
  2967  000E34                     
  2968                           ;OSTimer.c: 55:         if(counter == 16)
  2969  000E34  0E10               	movlw	16
  2970  000E36  1839               	xorwf	TMR0_ISR@counter^0,w,c
  2971  000E38  103A               	iorwf	(TMR0_ISR@counter+1)^0,w,c
  2972  000E3A  A4D8               	btfss	status,2,c
  2973  000E3C  EF22  F007         	goto	i2u148_41
  2974  000E40  EF24  F007         	goto	i2u148_40
  2975  000E44                     i2u148_41:
  2976  000E44  EF28  F007         	goto	i2l2005
  2977  000E48                     i2u148_40:
  2978  000E48                     
  2979                           ;OSTimer.c: 56:         {counter=-1;index = 1; }
  2980  000E48  6839               	setf	TMR0_ISR@counter^0,c
  2981  000E4A  683A               	setf	(TMR0_ISR@counter+1)^0,c
  2982  000E4C  0E01               	movlw	1
  2983  000E4E  6E3F               	movwf	TMR0_ISR@index^0,c
  2984  000E50                     i2l2005:
  2985                           
  2986                           ;OSTimer.c: 62:     LCD_Update();
  2987  000E50  EC4C  F001         	call	i2_LCD_Update	;wreg free
  2988  000E54                     
  2989                           ;OSTimer.c: 64:     ((TMR0IF) = 0);
  2990  000E54  94F2               	bcf	4082,2,c	;volatile
  2991  000E56                     
  2992                           ;OSTimer.c: 66:     ((TMR0) = 65,536 - ((5000)));
  2993  000E56  0E00               	movlw	0
  2994  000E58  6ED7               	movwf	215,c	;volatile
  2995  000E5A  0E41               	movlw	65
  2996  000E5C  6ED6               	movwf	214,c	;volatile
  2997  000E5E  C014  FFF4         	movff	??_TMR0_ISR+3,prodh
  2998  000E62  C013  FFF3         	movff	??_TMR0_ISR+2,prodl
  2999  000E66  C012  FFDA         	movff	??_TMR0_ISR+1,fsr2h
  3000  000E6A  C011  FFD9         	movff	??_TMR0_ISR,fsr2l
  3001  000E6E  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3002  000E70  0011               	retfie		f
  3003  000E72                     __end_of_TMR0_ISR:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function i2_LCD_Update *****************
  3007 ;; Defined at:
  3008 ;;		line 313 in file "LCD.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  LCD_Update      1   15[COMRAM] unsigned char 
  3013 ;;  LCD_Update      1   14[COMRAM] unsigned char 
  3014 ;;  LCD_Update      1   13[COMRAM] unsigned char 
  3015 ;;  LCD_Update      1   12[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0
  3026 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3027 ;;      Temps:          9       0       0       0       0       0       0       0       0
  3028 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3029 ;;Total ram usage:       13 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    3
  3032 ;; This function calls:
  3033 ;;		i2_LCD_SetDDRAM
  3034 ;;		i2_LCD_Write_Symbol
  3035 ;; This function is called by:
  3036 ;;		_TMR0_ISR
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text19
  3041  000298                     __ptext19:
  3042                           	opt callstack 0
  3043  000298                     i2_LCD_Update:
  3044                           	opt callstack 21
  3045  000298                     
  3046                           ;LCD.c: 315:     uint8 j,i,updated = 0;
  3047  000298  0E00               	movlw	0
  3048  00029A  6E0E               	movwf	i2LCD_Update@updated^0,c
  3049  00029C                     
  3050                           ;LCD.c: 316:     tick_counter += (5);
  3051  00029C  0E05               	movlw	5
  3052  00029E  263D               	addwf	_tick_counter^0,f,c
  3053  0002A0  0E00               	movlw	0
  3054  0002A2  223E               	addwfc	(_tick_counter+1)^0,f,c
  3055  0002A4                     
  3056                           ;LCD.c: 317:     if(tick_counter != (5))return;
  3057  0002A4  0E05               	movlw	5
  3058  0002A6  183D               	xorwf	_tick_counter^0,w,c
  3059  0002A8  103E               	iorwf	(_tick_counter+1)^0,w,c
  3060  0002AA  B4D8               	btfsc	status,2,c
  3061  0002AC  EF5A  F001         	goto	i2u133_41
  3062  0002B0  EF5C  F001         	goto	i2u133_40
  3063  0002B4                     i2u133_41:
  3064  0002B4  EF5E  F001         	goto	i2l1931
  3065  0002B8                     i2u133_40:
  3066  0002B8  EF63  F002         	goto	i2l111
  3067  0002BC                     i2l1931:
  3068                           
  3069                           ;LCD.c: 319:     tick_counter = 0;
  3070  0002BC  0E00               	movlw	0
  3071  0002BE  6E3E               	movwf	(_tick_counter+1)^0,c
  3072  0002C0  0E00               	movlw	0
  3073  0002C2  6E3D               	movwf	_tick_counter^0,c
  3074                           
  3075                           ;LCD.c: 321:     for(j = 0;j<(((40)/16)+1);j++)
  3076  0002C4  0E00               	movlw	0
  3077  0002C6  6E10               	movwf	i2LCD_Update@j^0,c
  3078  0002C8                     i2l1933:
  3079  0002C8  0E02               	movlw	2
  3080  0002CA  6410               	cpfsgt	i2LCD_Update@j^0,c
  3081  0002CC  EF6A  F001         	goto	i2u134_41
  3082  0002D0  EF6C  F001         	goto	i2u134_40
  3083  0002D4                     i2u134_41:
  3084  0002D4  EF6E  F001         	goto	i2l1937
  3085  0002D8                     i2u134_40:
  3086  0002D8  EF57  F002         	goto	i2l1969
  3087  0002DC                     i2l1937:
  3088                           
  3089                           ;LCD.c: 322:     {;LCD.c: 323:         if(update_flag[line_counter][j]!=0)
  3090  0002DC  5010               	movf	i2LCD_Update@j^0,w,c
  3091  0002DE  0D02               	mullw	2
  3092  0002E0  CFF3 F004          	movff	prodl,??i2_LCD_Update
  3093  0002E4  CFF4 F005          	movff	prodh,??i2_LCD_Update+1
  3094  0002E8  5040               	movf	_line_counter^0,w,c
  3095  0002EA  0D2A               	mullw	42
  3096  0002EC  0E60               	movlw	low _update_flag
  3097  0002EE  6E06               	movwf	(??i2_LCD_Update+2)^0,c
  3098  0002F0  0E00               	movlw	high _update_flag
  3099  0002F2  6E07               	movwf	(??i2_LCD_Update+3)^0,c
  3100  0002F4  50F3               	movf	243,w,c
  3101  0002F6  2606               	addwf	(??i2_LCD_Update+2)^0,f,c
  3102  0002F8  50F4               	movf	244,w,c
  3103  0002FA  2207               	addwfc	(??i2_LCD_Update+3)^0,f,c
  3104  0002FC  5004               	movf	??i2_LCD_Update^0,w,c
  3105  0002FE  2406               	addwf	(??i2_LCD_Update+2)^0,w,c
  3106  000300  6ED9               	movwf	fsr2l,c
  3107  000302  5005               	movf	(??i2_LCD_Update+1)^0,w,c
  3108  000304  2007               	addwfc	(??i2_LCD_Update+3)^0,w,c
  3109  000306  6EDA               	movwf	fsr2h,c
  3110  000308  50DE               	movf	postinc2,w,c
  3111  00030A  10DE               	iorwf	postinc2,w,c
  3112  00030C  B4D8               	btfsc	status,2,c
  3113  00030E  EF8B  F001         	goto	i2u135_41
  3114  000312  EF8D  F001         	goto	i2u135_40
  3115  000316                     i2u135_41:
  3116  000316  EF54  F002         	goto	i2l1965
  3117  00031A                     i2u135_40:
  3118  00031A                     
  3119                           ;LCD.c: 324:         {;LCD.c: 326:             for(i=0;i<16;i++)
  3120  00031A  0E00               	movlw	0
  3121  00031C  6E0F               	movwf	i2LCD_Update@i^0,c
  3122  00031E                     i2l1941:
  3123  00031E  0E0F               	movlw	15
  3124  000320  640F               	cpfsgt	i2LCD_Update@i^0,c
  3125  000322  EF95  F001         	goto	i2u136_41
  3126  000326  EF97  F001         	goto	i2u136_40
  3127  00032A                     i2u136_41:
  3128  00032A  EF99  F001         	goto	i2l1945
  3129  00032E                     i2u136_40:
  3130  00032E  EF54  F002         	goto	i2l1965
  3131  000332                     i2l1945:
  3132                           
  3133                           ;LCD.c: 327:             {;LCD.c: 329:                 if((update_flag[line_counter][j])
      +                          &(0x0001<<i))
  3134  000332  5010               	movf	i2LCD_Update@j^0,w,c
  3135  000334  0D02               	mullw	2
  3136  000336  CFF3 F004          	movff	prodl,??i2_LCD_Update
  3137  00033A  CFF4 F005          	movff	prodh,??i2_LCD_Update+1
  3138  00033E  5040               	movf	_line_counter^0,w,c
  3139  000340  0D2A               	mullw	42
  3140  000342  0E60               	movlw	low _update_flag
  3141  000344  6E06               	movwf	(??i2_LCD_Update+2)^0,c
  3142  000346  0E00               	movlw	high _update_flag
  3143  000348  6E07               	movwf	(??i2_LCD_Update+3)^0,c
  3144  00034A  50F3               	movf	243,w,c
  3145  00034C  2606               	addwf	(??i2_LCD_Update+2)^0,f,c
  3146  00034E  50F4               	movf	244,w,c
  3147  000350  2207               	addwfc	(??i2_LCD_Update+3)^0,f,c
  3148  000352  5004               	movf	??i2_LCD_Update^0,w,c
  3149  000354  2406               	addwf	(??i2_LCD_Update+2)^0,w,c
  3150  000356  6ED9               	movwf	fsr2l,c
  3151  000358  5005               	movf	(??i2_LCD_Update+1)^0,w,c
  3152  00035A  2007               	addwfc	(??i2_LCD_Update+3)^0,w,c
  3153  00035C  6EDA               	movwf	fsr2h,c
  3154  00035E  CFDE F008          	movff	postinc2,??i2_LCD_Update+4
  3155  000362  CFDD F009          	movff	postdec2,??i2_LCD_Update+5
  3156  000366  C00F  F00A         	movff	i2LCD_Update@i,??i2_LCD_Update+6
  3157  00036A  0E01               	movlw	1
  3158  00036C  6E0B               	movwf	(??i2_LCD_Update+7)^0,c
  3159  00036E  0E00               	movlw	0
  3160  000370  6E0C               	movwf	(??i2_LCD_Update+8)^0,c
  3161  000372  2A0A               	incf	(??i2_LCD_Update+6)^0,f,c
  3162  000374  EFBF  F001         	goto	i2u137_44
  3163  000378                     i2u137_45:
  3164  000378  90D8               	bcf	status,0,c
  3165  00037A  360B               	rlcf	(??i2_LCD_Update+7)^0,f,c
  3166  00037C  360C               	rlcf	(??i2_LCD_Update+8)^0,f,c
  3167  00037E                     i2u137_44:
  3168  00037E  2E0A               	decfsz	(??i2_LCD_Update+6)^0,f,c
  3169  000380  EFBC  F001         	goto	i2u137_45
  3170  000384  5008               	movf	(??i2_LCD_Update+4)^0,w,c
  3171  000386  160B               	andwf	(??i2_LCD_Update+7)^0,f,c
  3172  000388  5009               	movf	(??i2_LCD_Update+5)^0,w,c
  3173  00038A  160C               	andwf	(??i2_LCD_Update+8)^0,f,c
  3174  00038C  500B               	movf	(??i2_LCD_Update+7)^0,w,c
  3175  00038E  100C               	iorwf	(??i2_LCD_Update+8)^0,w,c
  3176  000390  B4D8               	btfsc	status,2,c
  3177  000392  EFCD  F001         	goto	i2u138_41
  3178  000396  EFCF  F001         	goto	i2u138_40
  3179  00039A                     i2u138_41:
  3180  00039A  EF51  F002         	goto	i2l1961
  3181  00039E                     i2u138_40:
  3182  00039E                     
  3183                           ;LCD.c: 330:                 {;LCD.c: 332:                     uint8 address = lines_off
      +                          set_adresses[line_counter] + ((j*16)+i);
  3184  00039E  0E49               	movlw	low _lines_offset_adresses
  3185  0003A0  2440               	addwf	_line_counter^0,w,c
  3186  0003A2  6ED9               	movwf	fsr2l,c
  3187  0003A4  6ADA               	clrf	fsr2h,c
  3188  0003A6  0E00               	movlw	high _lines_offset_adresses
  3189  0003A8  22DA               	addwfc	fsr2h,f,c
  3190  0003AA  50DF               	movf	indf2,w,c
  3191  0003AC  6E04               	movwf	??i2_LCD_Update^0,c
  3192  0003AE  5010               	movf	i2LCD_Update@j^0,w,c
  3193  0003B0  0D10               	mullw	16
  3194  0003B2  50F3               	movf	243,w,c
  3195  0003B4  2404               	addwf	??i2_LCD_Update^0,w,c
  3196  0003B6  240F               	addwf	i2LCD_Update@i^0,w,c
  3197  0003B8  6E0D               	movwf	i2LCD_Update@address^0,c
  3198  0003BA                     
  3199                           ;LCD.c: 334:                     LCD_SetDDRAM(address);
  3200  0003BA  500D               	movf	i2LCD_Update@address^0,w,c
  3201  0003BC  EC42  F008         	call	i2_LCD_SetDDRAM
  3202  0003C0                     
  3203                           ;LCD.c: 336:                     LCD_Write_Symbol(LCD_Data_Buffer[line_counter][((j*16)+
      +                          i)]);
  3204  0003C0  5040               	movf	_line_counter^0,w,c
  3205  0003C2  0D28               	mullw	40
  3206  0003C4  0E00               	movlw	low _LCD_Data_Buffer
  3207  0003C6  6E04               	movwf	??i2_LCD_Update^0,c
  3208  0003C8  0E01               	movlw	high _LCD_Data_Buffer
  3209  0003CA  6E05               	movwf	(??i2_LCD_Update+1)^0,c
  3210  0003CC  50F3               	movf	243,w,c
  3211  0003CE  2604               	addwf	??i2_LCD_Update^0,f,c
  3212  0003D0  50F4               	movf	244,w,c
  3213  0003D2  2205               	addwfc	(??i2_LCD_Update+1)^0,f,c
  3214  0003D4  5010               	movf	i2LCD_Update@j^0,w,c
  3215  0003D6  0D10               	mullw	16
  3216  0003D8  50F3               	movf	243,w,c
  3217  0003DA  2604               	addwf	??i2_LCD_Update^0,f,c
  3218  0003DC  50F4               	movf	244,w,c
  3219  0003DE  2205               	addwfc	(??i2_LCD_Update+1)^0,f,c
  3220  0003E0  500F               	movf	i2LCD_Update@i^0,w,c
  3221  0003E2  2404               	addwf	??i2_LCD_Update^0,w,c
  3222  0003E4  6ED9               	movwf	fsr2l,c
  3223  0003E6  0E00               	movlw	0
  3224  0003E8  2005               	addwfc	(??i2_LCD_Update+1)^0,w,c
  3225  0003EA  6EDA               	movwf	fsr2h,c
  3226  0003EC  50DF               	movf	indf2,w,c
  3227  0003EE  ECF4  F007         	call	i2_LCD_Write_Symbol
  3228  0003F2                     
  3229                           ;LCD.c: 338:                     update_flag[line_counter][j] &= ~(1<<i);
  3230  0003F2  C00F  F004         	movff	i2LCD_Update@i,??i2_LCD_Update
  3231  0003F6  0E01               	movlw	1
  3232  0003F8  6E05               	movwf	(??i2_LCD_Update+1)^0,c
  3233  0003FA  0E00               	movlw	0
  3234  0003FC  6E06               	movwf	(??i2_LCD_Update+2)^0,c
  3235  0003FE  2A04               	incf	??i2_LCD_Update^0,f,c
  3236  000400  EF05  F002         	goto	i2u139_44
  3237  000404                     i2u139_45:
  3238  000404  90D8               	bcf	status,0,c
  3239  000406  3605               	rlcf	(??i2_LCD_Update+1)^0,f,c
  3240  000408  3606               	rlcf	(??i2_LCD_Update+2)^0,f,c
  3241  00040A                     i2u139_44:
  3242  00040A  2E04               	decfsz	??i2_LCD_Update^0,f,c
  3243  00040C  EF02  F002         	goto	i2u139_45
  3244  000410  1C05               	comf	(??i2_LCD_Update+1)^0,w,c
  3245  000412  6E07               	movwf	(??i2_LCD_Update+3)^0,c
  3246  000414  1C06               	comf	(??i2_LCD_Update+2)^0,w,c
  3247  000416  6E08               	movwf	(??i2_LCD_Update+4)^0,c
  3248  000418  5010               	movf	i2LCD_Update@j^0,w,c
  3249  00041A  0D02               	mullw	2
  3250  00041C  CFF3 F009          	movff	prodl,??i2_LCD_Update+5
  3251  000420  CFF4 F00A          	movff	prodh,??i2_LCD_Update+6
  3252  000424  5040               	movf	_line_counter^0,w,c
  3253  000426  0D2A               	mullw	42
  3254  000428  0E60               	movlw	low _update_flag
  3255  00042A  6E0B               	movwf	(??i2_LCD_Update+7)^0,c
  3256  00042C  0E00               	movlw	high _update_flag
  3257  00042E  6E0C               	movwf	(??i2_LCD_Update+8)^0,c
  3258  000430  50F3               	movf	243,w,c
  3259  000432  260B               	addwf	(??i2_LCD_Update+7)^0,f,c
  3260  000434  50F4               	movf	244,w,c
  3261  000436  220C               	addwfc	(??i2_LCD_Update+8)^0,f,c
  3262  000438  5009               	movf	(??i2_LCD_Update+5)^0,w,c
  3263  00043A  240B               	addwf	(??i2_LCD_Update+7)^0,w,c
  3264  00043C  6ED9               	movwf	fsr2l,c
  3265  00043E  500A               	movf	(??i2_LCD_Update+6)^0,w,c
  3266  000440  200C               	addwfc	(??i2_LCD_Update+8)^0,w,c
  3267  000442  6EDA               	movwf	fsr2h,c
  3268  000444  5007               	movf	(??i2_LCD_Update+3)^0,w,c
  3269  000446  16DE               	andwf	postinc2,f,c
  3270  000448  5008               	movf	(??i2_LCD_Update+4)^0,w,c
  3271  00044A  16DD               	andwf	postdec2,f,c
  3272  00044C                     
  3273                           ;LCD.c: 340:                     updated++;
  3274  00044C  2A0E               	incf	i2LCD_Update@updated^0,f,c
  3275  00044E                     
  3276                           ;LCD.c: 341:                     if(updated == (5) || update_flag[line_counter][j]==0 )b
      +                          reak;
  3277  00044E  0E05               	movlw	5
  3278  000450  180E               	xorwf	i2LCD_Update@updated^0,w,c
  3279  000452  B4D8               	btfsc	status,2,c
  3280  000454  EF2E  F002         	goto	i2u140_41
  3281  000458  EF30  F002         	goto	i2u140_40
  3282  00045C                     i2u140_41:
  3283  00045C  EF54  F002         	goto	i2l1965
  3284  000460                     i2u140_40:
  3285  000460  5010               	movf	i2LCD_Update@j^0,w,c
  3286  000462  0D02               	mullw	2
  3287  000464  CFF3 F004          	movff	prodl,??i2_LCD_Update
  3288  000468  CFF4 F005          	movff	prodh,??i2_LCD_Update+1
  3289  00046C  5040               	movf	_line_counter^0,w,c
  3290  00046E  0D2A               	mullw	42
  3291  000470  0E60               	movlw	low _update_flag
  3292  000472  6E06               	movwf	(??i2_LCD_Update+2)^0,c
  3293  000474  0E00               	movlw	high _update_flag
  3294  000476  6E07               	movwf	(??i2_LCD_Update+3)^0,c
  3295  000478  50F3               	movf	243,w,c
  3296  00047A  2606               	addwf	(??i2_LCD_Update+2)^0,f,c
  3297  00047C  50F4               	movf	244,w,c
  3298  00047E  2207               	addwfc	(??i2_LCD_Update+3)^0,f,c
  3299  000480  5004               	movf	??i2_LCD_Update^0,w,c
  3300  000482  2406               	addwf	(??i2_LCD_Update+2)^0,w,c
  3301  000484  6ED9               	movwf	fsr2l,c
  3302  000486  5005               	movf	(??i2_LCD_Update+1)^0,w,c
  3303  000488  2007               	addwfc	(??i2_LCD_Update+3)^0,w,c
  3304  00048A  6EDA               	movwf	fsr2h,c
  3305  00048C  50DE               	movf	postinc2,w,c
  3306  00048E  10DE               	iorwf	postinc2,w,c
  3307  000490  A4D8               	btfss	status,2,c
  3308  000492  EF4D  F002         	goto	i2u141_41
  3309  000496  EF4F  F002         	goto	i2u141_40
  3310  00049A                     i2u141_41:
  3311  00049A  EF51  F002         	goto	i2l1961
  3312  00049E                     i2u141_40:
  3313  00049E  EF54  F002         	goto	i2l1965
  3314  0004A2                     i2l1961:
  3315                           
  3316                           ;LCD.c: 343:             }
  3317  0004A2  2A0F               	incf	i2LCD_Update@i^0,f,c
  3318  0004A4  EF8F  F001         	goto	i2l1941
  3319  0004A8                     i2l1965:
  3320                           
  3321                           ;LCD.c: 345:     }
  3322  0004A8  2A10               	incf	i2LCD_Update@j^0,f,c
  3323  0004AA  EF64  F001         	goto	i2l1933
  3324  0004AE                     i2l1969:
  3325                           
  3326                           ;LCD.c: 346:     line_counter++;
  3327  0004AE  2A40               	incf	_line_counter^0,f,c
  3328  0004B0                     
  3329                           ;LCD.c: 347:     if(line_counter == (2))line_counter = 0;
  3330  0004B0  0E02               	movlw	2
  3331  0004B2  1840               	xorwf	_line_counter^0,w,c
  3332  0004B4  A4D8               	btfss	status,2,c
  3333  0004B6  EF5F  F002         	goto	i2u142_41
  3334  0004BA  EF61  F002         	goto	i2u142_40
  3335  0004BE                     i2u142_41:
  3336  0004BE  EF63  F002         	goto	i2l111
  3337  0004C2                     i2u142_40:
  3338  0004C2  0E00               	movlw	0
  3339  0004C4  6E40               	movwf	_line_counter^0,c
  3340  0004C6                     i2l111:
  3341  0004C6  0012               	return		;funcret
  3342  0004C8                     __end_ofi2_LCD_Update:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function i2_LCD_Write_Symbol *****************
  3346 ;; Defined at:
  3347 ;;		line 170 in file "LCD.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  sym             1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  sym             1    1[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3364 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    1
  3368 ;; This function calls:
  3369 ;;		i2_LCD_Data_Out
  3370 ;; This function is called by:
  3371 ;;		i2_LCD_Update
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text20
  3376  000FE8                     __ptext20:
  3377                           	opt callstack 0
  3378  000FE8                     i2_LCD_Write_Symbol:
  3379                           	opt callstack 22
  3380                           
  3381                           ;incstack = 0
  3382                           ;i2LCD_Write_Symbol@sym stored from wreg
  3383  000FE8  6E02               	movwf	i2LCD_Write_Symbol@sym^0,c
  3384  000FEA                     
  3385                           ;LCD.c: 170: static void LCD_Write_Symbol(uint8 sym);LCD.c: 171: {;LCD.c: 173:     (((PO
      +                          RTE))=((PORTE) & ~(1<<(2)))|(1<<(2)));
  3386  000FEA  5084               	movf	132,w,c	;volatile
  3387  000FEC  0BFB               	andlw	251
  3388  000FEE  0904               	iorlw	4
  3389  000FF0  6E84               	movwf	132,c	;volatile
  3390                           
  3391                           ;LCD.c: 175:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  3392  000FF2  5084               	movf	132,w,c	;volatile
  3393  000FF4  0BFD               	andlw	253
  3394  000FF6  6E84               	movwf	132,c	;volatile
  3395  000FF8                     
  3396                           ;LCD.c: 179:     LCD_Data_Out((sym>>4));
  3397  000FF8  3802               	swapf	i2LCD_Write_Symbol@sym^0,w,c
  3398  000FFA  0B0F               	andlw	15
  3399  000FFC  ECCE  F007         	call	i2_LCD_Data_Out
  3400  001000                     
  3401                           ;LCD.c: 181:     LCD_Data_Out(sym);
  3402  001000  5002               	movf	i2LCD_Write_Symbol@sym^0,w,c
  3403  001002  ECCE  F007         	call	i2_LCD_Data_Out
  3404  001006  0012               	return		;funcret
  3405  001008                     __end_ofi2_LCD_Write_Symbol:
  3406                           	opt callstack 0
  3407                           
  3408 ;; *************** function i2_LCD_SetDDRAM *****************
  3409 ;; Defined at:
  3410 ;;		line 299 in file "LCD.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  ADDRESS         1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  ADDRESS         1    2[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0
  3425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    2
  3431 ;; This function calls:
  3432 ;;		i2_LCD_Write_Instruction
  3433 ;; This function is called by:
  3434 ;;		i2_LCD_Update
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text21
  3439  001084                     __ptext21:
  3440                           	opt callstack 0
  3441  001084                     i2_LCD_SetDDRAM:
  3442                           	opt callstack 21
  3443                           
  3444                           ;incstack = 0
  3445                           ;i2LCD_SetDDRAM@ADDRESS stored from wreg
  3446  001084  6E03               	movwf	i2LCD_SetDDRAM@ADDRESS^0,c
  3447  001086                     
  3448                           ;LCD.c: 299: static void LCD_SetDDRAM(uint8 ADDRESS);LCD.c: 300: {;LCD.c: 301:     ADDRE
      +                          SS &= 0x7f;
  3449  001086  9E03               	bcf	i2LCD_SetDDRAM@ADDRESS^0,7,c
  3450                           
  3451                           ;LCD.c: 302:     ADDRESS |= 0x80;
  3452  001088  8E03               	bsf	i2LCD_SetDDRAM@ADDRESS^0,7,c
  3453  00108A                     
  3454                           ;LCD.c: 303:     LCD_Write_Instruction(ADDRESS);
  3455  00108A  5003               	movf	i2LCD_SetDDRAM@ADDRESS^0,w,c
  3456  00108C  EC13  F008         	call	i2_LCD_Write_Instruction
  3457  001090  0012               	return		;funcret
  3458  001092                     __end_ofi2_LCD_SetDDRAM:
  3459                           	opt callstack 0
  3460                           
  3461 ;; *************** function i2_LCD_Write_Instruction *****************
  3462 ;; Defined at:
  3463 ;;		line 208 in file "LCD.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  inst            1    wreg     enum E3182
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  inst            1    1[COMRAM] enum E3182
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0
  3478 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3480 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    1
  3484 ;; This function calls:
  3485 ;;		i2_LCD_Data_Out
  3486 ;; This function is called by:
  3487 ;;		i2_LCD_SetDDRAM
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text22
  3492  001026                     __ptext22:
  3493                           	opt callstack 0
  3494  001026                     i2_LCD_Write_Instruction:
  3495                           	opt callstack 21
  3496                           
  3497                           ;incstack = 0
  3498                           ;i2LCD_Write_Instruction@inst stored from wreg
  3499  001026  6E02               	movwf	i2LCD_Write_Instruction@inst^0,c
  3500  001028                     
  3501                           ;LCD.c: 208: static void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 209: {;LCD
      +                          .c: 211:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  3502  001028  5084               	movf	132,w,c	;volatile
  3503  00102A  0BFB               	andlw	251
  3504  00102C  6E84               	movwf	132,c	;volatile
  3505                           
  3506                           ;LCD.c: 213:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  3507  00102E  5084               	movf	132,w,c	;volatile
  3508  001030  0BFD               	andlw	253
  3509  001032  6E84               	movwf	132,c	;volatile
  3510  001034                     
  3511                           ;LCD.c: 215:     LCD_Data_Out((inst>>4));
  3512  001034  3802               	swapf	i2LCD_Write_Instruction@inst^0,w,c
  3513  001036  0B0F               	andlw	15
  3514  001038  ECCE  F007         	call	i2_LCD_Data_Out
  3515  00103C                     
  3516                           ;LCD.c: 216:     LCD_Data_Out(inst);
  3517  00103C  5002               	movf	i2LCD_Write_Instruction@inst^0,w,c
  3518  00103E  ECCE  F007         	call	i2_LCD_Data_Out
  3519  001042  0012               	return		;funcret
  3520  001044                     __end_ofi2_LCD_Write_Instruction:
  3521                           	opt callstack 0
  3522                           
  3523 ;; *************** function i2_LCD_Data_Out *****************
  3524 ;; Defined at:
  3525 ;;		line 230 in file "LCD.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  byte            1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  byte            1    0[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0
  3540 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3542 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3543 ;;Total ram usage:        1 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		i2_LCD_Write_Symbol
  3549 ;;		i2_LCD_Write_Instruction
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text23
  3554  000F9C                     __ptext23:
  3555                           	opt callstack 0
  3556  000F9C                     i2_LCD_Data_Out:
  3557                           	opt callstack 22
  3558                           
  3559                           ;incstack = 0
  3560                           ;i2LCD_Data_Out@byte stored from wreg
  3561  000F9C  6E01               	movwf	i2LCD_Data_Out@byte^0,c
  3562  000F9E                     
  3563                           ;LCD.c: 230: static void LCD_Data_Out(uint8 byte);LCD.c: 231: {;LCD.c: 234:        (((PO
      +                          RTD))=(((PORTD))&~(0xF<<((1)*4)))); (((PORTD))=(((PORTD))|((byte<<((1)*4))&(0xF<<((1)*4)
      +                          ))));
  3564  000F9E  5083               	movf	131,w,c	;volatile
  3565  000FA0  0B0F               	andlw	15
  3566  000FA2  6E83               	movwf	131,c	;volatile
  3567  000FA4  3801               	swapf	i2LCD_Data_Out@byte^0,w,c
  3568  000FA6  0BF0               	andlw	240
  3569  000FA8  0BF0               	andlw	240
  3570  000FAA  1083               	iorwf	131,w,c	;volatile
  3571  000FAC  6E83               	movwf	131,c	;volatile
  3572                           
  3573                           ;LCD.c: 237:        (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
  3574  000FAE  5084               	movf	132,w,c	;volatile
  3575  000FB0  0BFD               	andlw	253
  3576  000FB2  0902               	iorlw	2
  3577  000FB4  6E84               	movwf	132,c	;volatile
  3578  000FB6                     
  3579                           ;LCD.c: 239:        _delay((unsigned long)((100)*(8000000/4000000.0)));
  3580  000FB6  0E42               	movlw	66
  3581  000FB8                     i2u168_47:
  3582  000FB8  2EE8               	decfsz	wreg,f,c
  3583  000FBA  D7FE               	bra	i2u168_47
  3584  000FBC  D000               	nop2	
  3585  000FBE                     
  3586                           ;LCD.c: 241:        (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  3587  000FBE  5084               	movf	132,w,c	;volatile
  3588  000FC0  0BFD               	andlw	253
  3589  000FC2  6E84               	movwf	132,c	;volatile
  3590  000FC4                     
  3591                           ;LCD.c: 243:        _delay((unsigned long)((1)*(8000000/4000000.0)));
  3592  000FC4  D000               	nop2		;2 cycle nop
  3593  000FC6  0012               	return		;funcret
  3594  000FC8                     __end_ofi2_LCD_Data_Out:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function i2_LCD_SetSymbol *****************
  3598 ;; Defined at:
  3599 ;;		line 265 in file "LCD.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  sym             1    wreg     unsigned char 
  3602 ;;  row             1    8[COMRAM] unsigned char 
  3603 ;;  column          1    9[COMRAM] unsigned char 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  sym             1   15[COMRAM] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3618 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:        8 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    1
  3622 ;; This function calls:
  3623 ;;		i2___awdiv
  3624 ;; This function is called by:
  3625 ;;		_TMR0_ISR
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text24
  3630  000C9A                     __ptext24:
  3631                           	opt callstack 0
  3632  000C9A                     i2_LCD_SetSymbol:
  3633                           	opt callstack 23
  3634                           
  3635                           ;incstack = 0
  3636                           ;i2LCD_SetSymbol@sym stored from wreg
  3637  000C9A  6E10               	movwf	i2LCD_SetSymbol@sym^0,c
  3638  000C9C                     
  3639                           ;LCD.c: 265: void LCD_SetSymbol(uint8 sym,uint8 row,uint8 column);LCD.c: 266: {;LCD.c: 2
      +                          67:     if(row >= (2) && column >= (40))return;
  3640  000C9C  0E01               	movlw	1
  3641  000C9E  6409               	cpfsgt	i2LCD_SetSymbol@row^0,c
  3642  000CA0  EF54  F006         	goto	i2u130_41
  3643  000CA4  EF56  F006         	goto	i2u130_40
  3644  000CA8                     i2u130_41:
  3645  000CA8  EF60  F006         	goto	i2l1919
  3646  000CAC                     i2u130_40:
  3647  000CAC  0E27               	movlw	39
  3648  000CAE  640A               	cpfsgt	i2LCD_SetSymbol@column^0,c
  3649  000CB0  EF5C  F006         	goto	i2u131_41
  3650  000CB4  EF5E  F006         	goto	i2u131_40
  3651  000CB8                     i2u131_41:
  3652  000CB8  EF60  F006         	goto	i2l1919
  3653  000CBC                     i2u131_40:
  3654  000CBC  EFA3  F006         	goto	i2l97
  3655  000CC0                     i2l1919:
  3656                           
  3657                           ;LCD.c: 268:     LCD_Data_Buffer[row][column] = sym;
  3658  000CC0  5009               	movf	i2LCD_SetSymbol@row^0,w,c
  3659  000CC2  0D28               	mullw	40
  3660  000CC4  0E00               	movlw	low _LCD_Data_Buffer
  3661  000CC6  6E0B               	movwf	??i2_LCD_SetSymbol^0,c
  3662  000CC8  0E01               	movlw	high _LCD_Data_Buffer
  3663  000CCA  6E0C               	movwf	(??i2_LCD_SetSymbol+1)^0,c
  3664  000CCC  50F3               	movf	243,w,c
  3665  000CCE  260B               	addwf	??i2_LCD_SetSymbol^0,f,c
  3666  000CD0  50F4               	movf	244,w,c
  3667  000CD2  220C               	addwfc	(??i2_LCD_SetSymbol+1)^0,f,c
  3668  000CD4  500A               	movf	i2LCD_SetSymbol@column^0,w,c
  3669  000CD6  240B               	addwf	??i2_LCD_SetSymbol^0,w,c
  3670  000CD8  6ED9               	movwf	fsr2l,c
  3671  000CDA  0E00               	movlw	0
  3672  000CDC  200C               	addwfc	(??i2_LCD_SetSymbol+1)^0,w,c
  3673  000CDE  6EDA               	movwf	fsr2h,c
  3674  000CE0  C010  FFDF         	movff	i2LCD_SetSymbol@sym,indf2
  3675  000CE4                     
  3676                           ;LCD.c: 269:     update_flag[row][column/16] |= (0x0001<<(column%16));
  3677  000CE4  C00A  F00B         	movff	i2LCD_SetSymbol@column,??i2_LCD_SetSymbol
  3678  000CE8  0E0F               	movlw	15
  3679  000CEA  160B               	andwf	??i2_LCD_SetSymbol^0,f,c
  3680  000CEC  0E01               	movlw	1
  3681  000CEE  6E0C               	movwf	(??i2_LCD_SetSymbol+1)^0,c
  3682  000CF0  0E00               	movlw	0
  3683  000CF2  6E0D               	movwf	(??i2_LCD_SetSymbol+2)^0,c
  3684  000CF4  2A0B               	incf	??i2_LCD_SetSymbol^0,f,c
  3685  000CF6  EF80  F006         	goto	i2u132_44
  3686  000CFA                     i2u132_45:
  3687  000CFA  90D8               	bcf	status,0,c
  3688  000CFC  360C               	rlcf	(??i2_LCD_SetSymbol+1)^0,f,c
  3689  000CFE  360D               	rlcf	(??i2_LCD_SetSymbol+2)^0,f,c
  3690  000D00                     i2u132_44:
  3691  000D00  2E0B               	decfsz	??i2_LCD_SetSymbol^0,f,c
  3692  000D02  EF7D  F006         	goto	i2u132_45
  3693  000D06  C00A  F001         	movff	i2LCD_SetSymbol@column,i2___awdiv@dividend
  3694  000D0A  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3695  000D0C  0E00               	movlw	0
  3696  000D0E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3697  000D10  0E10               	movlw	16
  3698  000D12  6E03               	movwf	i2___awdiv@divisor^0,c
  3699  000D14  EC3D  F005         	call	i2___awdiv	;wreg free
  3700  000D18  90D8               	bcf	status,0,c
  3701  000D1A  3601               	rlcf	?i2___awdiv^0,f,c
  3702  000D1C  3602               	rlcf	(?i2___awdiv+1)^0,f,c
  3703  000D1E  5009               	movf	i2LCD_SetSymbol@row^0,w,c
  3704  000D20  0D2A               	mullw	42
  3705  000D22  0E60               	movlw	low _update_flag
  3706  000D24  6E0E               	movwf	(??i2_LCD_SetSymbol+3)^0,c
  3707  000D26  0E00               	movlw	high _update_flag
  3708  000D28  6E0F               	movwf	(??i2_LCD_SetSymbol+4)^0,c
  3709  000D2A  50F3               	movf	243,w,c
  3710  000D2C  260E               	addwf	(??i2_LCD_SetSymbol+3)^0,f,c
  3711  000D2E  50F4               	movf	244,w,c
  3712  000D30  220F               	addwfc	(??i2_LCD_SetSymbol+4)^0,f,c
  3713  000D32  5001               	movf	?i2___awdiv^0,w,c
  3714  000D34  240E               	addwf	(??i2_LCD_SetSymbol+3)^0,w,c
  3715  000D36  6ED9               	movwf	fsr2l,c
  3716  000D38  5002               	movf	(?i2___awdiv+1)^0,w,c
  3717  000D3A  200F               	addwfc	(??i2_LCD_SetSymbol+4)^0,w,c
  3718  000D3C  6EDA               	movwf	fsr2h,c
  3719  000D3E  500C               	movf	(??i2_LCD_SetSymbol+1)^0,w,c
  3720  000D40  12DE               	iorwf	postinc2,f,c
  3721  000D42  500D               	movf	(??i2_LCD_SetSymbol+2)^0,w,c
  3722  000D44  12DD               	iorwf	postdec2,f,c
  3723  000D46                     i2l97:
  3724  000D46  0012               	return		;funcret
  3725  000D48                     __end_ofi2_LCD_SetSymbol:
  3726                           	opt callstack 0
  3727                           
  3728 ;; *************** function i2___awdiv *****************
  3729 ;; Defined at:
  3730 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  dividend        2    0[COMRAM] int 
  3733 ;;  divisor         2    2[COMRAM] int 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  __awdiv         2    6[COMRAM] int 
  3736 ;;  __awdiv         1    5[COMRAM] unsigned char 
  3737 ;;  __awdiv         1    4[COMRAM] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    0[COMRAM] int 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3747 ;;      Params:         4       0       0       0       0       0       0       0       0
  3748 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3750 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3751 ;;Total ram usage:        8 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		i2_LCD_SetSymbol
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text25
  3761  000A7A                     __ptext25:
  3762                           	opt callstack 0
  3763  000A7A                     i2___awdiv:
  3764                           	opt callstack 23
  3765  000A7A  0E00               	movlw	0
  3766  000A7C  6E06               	movwf	i2___awdiv@sign^0,c
  3767  000A7E  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  3768  000A80  EF46  F005         	goto	i2u109_40
  3769  000A84  EF44  F005         	goto	i2u109_41
  3770  000A88                     i2u109_41:
  3771  000A88  EF4C  F005         	goto	i2l1765
  3772  000A8C                     i2u109_40:
  3773  000A8C  6C03               	negf	i2___awdiv@divisor^0,c
  3774  000A8E  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  3775  000A90  B0D8               	btfsc	status,0,c
  3776  000A92  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  3777  000A94  0E01               	movlw	1
  3778  000A96  6E06               	movwf	i2___awdiv@sign^0,c
  3779  000A98                     i2l1765:
  3780  000A98  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  3781  000A9A  EF53  F005         	goto	i2u110_40
  3782  000A9E  EF51  F005         	goto	i2u110_41
  3783  000AA2                     i2u110_41:
  3784  000AA2  EF59  F005         	goto	i2l1771
  3785  000AA6                     i2u110_40:
  3786  000AA6  6C01               	negf	i2___awdiv@dividend^0,c
  3787  000AA8  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  3788  000AAA  B0D8               	btfsc	status,0,c
  3789  000AAC  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  3790  000AAE  0E01               	movlw	1
  3791  000AB0  1A06               	xorwf	i2___awdiv@sign^0,f,c
  3792  000AB2                     i2l1771:
  3793  000AB2  0E00               	movlw	0
  3794  000AB4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  3795  000AB6  0E00               	movlw	0
  3796  000AB8  6E07               	movwf	i2___awdiv@quotient^0,c
  3797  000ABA  5003               	movf	i2___awdiv@divisor^0,w,c
  3798  000ABC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  3799  000ABE  B4D8               	btfsc	status,2,c
  3800  000AC0  EF64  F005         	goto	i2u111_41
  3801  000AC4  EF66  F005         	goto	i2u111_40
  3802  000AC8                     i2u111_41:
  3803  000AC8  EF8E  F005         	goto	i2l1793
  3804  000ACC                     i2u111_40:
  3805  000ACC  0E01               	movlw	1
  3806  000ACE  6E05               	movwf	i2___awdiv@counter^0,c
  3807  000AD0  EF6E  F005         	goto	i2l1779
  3808  000AD4                     i2l1777:
  3809  000AD4  90D8               	bcf	status,0,c
  3810  000AD6  3603               	rlcf	i2___awdiv@divisor^0,f,c
  3811  000AD8  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  3812  000ADA  2A05               	incf	i2___awdiv@counter^0,f,c
  3813  000ADC                     i2l1779:
  3814  000ADC  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  3815  000ADE  EF73  F005         	goto	i2u112_41
  3816  000AE2  EF75  F005         	goto	i2u112_40
  3817  000AE6                     i2u112_41:
  3818  000AE6  EF6A  F005         	goto	i2l1777
  3819  000AEA                     i2u112_40:
  3820  000AEA                     i2l1781:
  3821  000AEA  90D8               	bcf	status,0,c
  3822  000AEC  3607               	rlcf	i2___awdiv@quotient^0,f,c
  3823  000AEE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  3824  000AF0  5003               	movf	i2___awdiv@divisor^0,w,c
  3825  000AF2  5C01               	subwf	i2___awdiv@dividend^0,w,c
  3826  000AF4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3827  000AF6  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  3828  000AF8  A0D8               	btfss	status,0,c
  3829  000AFA  EF81  F005         	goto	i2u113_41
  3830  000AFE  EF83  F005         	goto	i2u113_40
  3831  000B02                     i2u113_41:
  3832  000B02  EF88  F005         	goto	i2l1789
  3833  000B06                     i2u113_40:
  3834  000B06  5003               	movf	i2___awdiv@divisor^0,w,c
  3835  000B08  5E01               	subwf	i2___awdiv@dividend^0,f,c
  3836  000B0A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3837  000B0C  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  3838  000B0E  8007               	bsf	i2___awdiv@quotient^0,0,c
  3839  000B10                     i2l1789:
  3840  000B10  90D8               	bcf	status,0,c
  3841  000B12  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  3842  000B14  3203               	rrcf	i2___awdiv@divisor^0,f,c
  3843  000B16  2E05               	decfsz	i2___awdiv@counter^0,f,c
  3844  000B18  EF75  F005         	goto	i2l1781
  3845  000B1C                     i2l1793:
  3846  000B1C  5006               	movf	i2___awdiv@sign^0,w,c
  3847  000B1E  B4D8               	btfsc	status,2,c
  3848  000B20  EF94  F005         	goto	i2u114_41
  3849  000B24  EF96  F005         	goto	i2u114_40
  3850  000B28                     i2u114_41:
  3851  000B28  EF9A  F005         	goto	i2l1797
  3852  000B2C                     i2u114_40:
  3853  000B2C  6C07               	negf	i2___awdiv@quotient^0,c
  3854  000B2E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  3855  000B30  B0D8               	btfsc	status,0,c
  3856  000B32  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  3857  000B34                     i2l1797:
  3858  000B34  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3859  000B38  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3860  000B3C  0012               	return		;funcret
  3861  000B3E                     __end_ofi2___awdiv:
  3862                           	opt callstack 0
  3863  0000                     
  3864                           	psect	rparam
  3865  0000                     
  3866                           	psect	temp
  3867  00004B                     btemp:
  3868                           	opt callstack 0
  3869  00004B                     	ds	1
  3870  0000                     int$flags	set	btemp
  3871  0000                     wtemp8	set	btemp+1
  3872  0000                     ttemp5	set	btemp+1
  3873  0000                     ttemp6	set	btemp+4
  3874  0000                     ttemp7	set	btemp+8
  3875                           tosu	equ	0xFFF
  3876                           tosh	equ	0xFFE
  3877                           tosl	equ	0xFFD
  3878                           stkptr	equ	0xFFC
  3879                           pclatu	equ	0xFFB
  3880                           pclath	equ	0xFFA
  3881                           pcl	equ	0xFF9
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           indf0	equ	0xFEF
  3889                           postinc0	equ	0xFEE
  3890                           postdec0	equ	0xFED
  3891                           preinc0	equ	0xFEC
  3892                           plusw0	equ	0xFEB
  3893                           fsr0h	equ	0xFEA
  3894                           fsr0l	equ	0xFE9
  3895                           wreg	equ	0xFE8
  3896                           indf1	equ	0xFE7
  3897                           postinc1	equ	0xFE6
  3898                           postdec1	equ	0xFE5
  3899                           preinc1	equ	0xFE4
  3900                           plusw1	equ	0xFE3
  3901                           fsr1h	equ	0xFE2
  3902                           fsr1l	equ	0xFE1
  3903                           bsr	equ	0xFE0
  3904                           indf2	equ	0xFDF
  3905                           postinc2	equ	0xFDE
  3906                           postdec2	equ	0xFDD
  3907                           preinc2	equ	0xFDC
  3908                           plusw2	equ	0xFDB
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         187
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      74
    BANK0           160      1      85
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DO_Init@dir	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S45$dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S45$portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DOArray.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DO_Init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    GPIO_Init_Nibble@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), 

    GPIO_Init_Pin@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 


Critical Paths under _main in COMRAM

    _init->_DO_Init
    _DO_Init->_GPIO_Init_Pin
    _LCD_Update->_LCD_SetDDRAM
    _LCD_SetDDRAM->_LCD_Write_Instruction
    _LCD_SetSymbol->___awdiv
    _LCD_Init->_LCD_Init_Custom_Sym
    _LCD_Init_Custom_Sym->_LCD_SetCGRAM
    _LCD_Write_Symbol->_LCD_Data_Out
    _LCD_SetCGRAM->_LCD_Write_Instruction
    _LCD_Write_Instruction->_LCD_Data_Out

Critical Paths under _TMR0_ISR in COMRAM

    _TMR0_ISR->i2_LCD_SetSymbol
    _TMR0_ISR->i2_LCD_Update
    i2_LCD_Update->i2_LCD_SetDDRAM
    i2_LCD_Write_Symbol->i2_LCD_Data_Out
    i2_LCD_SetDDRAM->i2_LCD_Write_Instruction
    i2_LCD_Write_Instruction->i2_LCD_Data_Out
    i2_LCD_SetSymbol->i2___awdiv

Critical Paths under _main in BANK0

    _init->_DO_Init

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8206
                        _DO_SetState
                           _LCD_Init
                      _LCD_SetSymbol
                         _LCD_Update
                           _TMR_Init
                          _TMR_Start
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    2616
                            _DO_Init
 ---------------------------------------------------------------------------------
 (2) _DO_Init                                             12     6      6    2616
                                             30 COMRAM    11     5      6
                                              0 BANK0      1     1      0
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _TMR_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Update                                          13    13      0     515
                                             23 COMRAM    13    13      0
                       _LCD_SetDDRAM
                   _LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (2) _LCD_SetDDRAM                                         1     1      0      90
                                             22 COMRAM     1     1      0
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (1) _LCD_SetSymbol                                        8     6      2    1336
                                             28 COMRAM     8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    3553
                                             33 COMRAM     1     1      0
                   _GPIO_Init_Nibble
                      _GPIO_Init_Pin
                       _LCD_Data_Out
                _LCD_Init_Custom_Sym
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (2) _LCD_Init_Custom_Sym                                 10    10      0    1808
                                             23 COMRAM    10    10      0
                       _LCD_SetCGRAM
                   _LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Symbol                                     1     1      0      66
                                             21 COMRAM     1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_SetCGRAM                                         1     1      0      90
                                             22 COMRAM     1     1      0
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Instruction                                1     1      0      66
                                             21 COMRAM     1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Out                                         1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _GPIO_Init_Pin                                       10     6      4    1133
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Nibble                                    10     6      4     524
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _DO_SetState                                         11    10      1     186
                                             20 COMRAM    11    10      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             4     4      0    1095
                                             16 COMRAM     4     4      0
                    i2_LCD_SetSymbol
                       i2_LCD_Update
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Update                                        13    13      0     515
                                              3 COMRAM    13    13      0
                     i2_LCD_SetDDRAM
                 i2_LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Write_Symbol                                   1     1      0      66
                                              1 COMRAM     1     1      0
                     i2_LCD_Data_Out
 ---------------------------------------------------------------------------------
 (8) i2_LCD_SetDDRAM                                       1     1      0      90
                                              2 COMRAM     1     1      0
            i2_LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Write_Instruction                              1     1      0      66
                                              1 COMRAM     1     1      0
                     i2_LCD_Data_Out
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Data_Out                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_LCD_SetSymbol                                      8     6      2     580
                                              8 COMRAM     8     6      2
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_SetState
   _LCD_Init
     _GPIO_Init_Nibble
     _GPIO_Init_Pin
     _LCD_Data_Out
     _LCD_Init_Custom_Sym
       _LCD_SetCGRAM
         _LCD_Write_Instruction
           _LCD_Data_Out
       _LCD_Write_Symbol
         _LCD_Data_Out
     _LCD_Write_Instruction
       _LCD_Data_Out
   _LCD_SetSymbol
     ___awdiv
   _LCD_Update
     _LCD_SetDDRAM
       _LCD_Write_Instruction
         _LCD_Data_Out
     _LCD_Write_Symbol
       _LCD_Data_Out
   _TMR_Init
   _TMR_Start
   _init
     _DO_Init
       _GPIO_Init_Pin

 _TMR0_ISR (ROOT)
   i2_LCD_SetSymbol
     i2___awdiv
   i2_LCD_Update
     i2_LCD_SetDDRAM
       i2_LCD_Write_Instruction
         i2_LCD_Data_Out
     i2_LCD_Write_Symbol
       i2_LCD_Data_Out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF      20        0.0%
DATA                 0      0      EF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 09:20:49 2020

                   ?_LCD_Data_Out 0001                                l30 07C2  
                              l24 09B4                                l40 0BEA  
                              l33 07FE                                l46 0DE8  
                              l90 1024                                l84 08DE  
                              l93 0F9A                                l87 0FE6  
                              l97 0C98                      ___awdiv@sign 001A  
                     __CFG_BOR$ON 000000                       ?_LCD_Update 0001  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                       __CFG_LVP$ON 000000  
                             l111 06E6                               l107 1082  
                             l140 0296                               l133 0184  
                             l143 1074                               l223 0F1A  
                             l224 0F1A                               l137 023A  
                             l229 0ECC                               l174 1064  
                             l188 1054                               l463 0A78  
                             _GIE 007F97                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               u910 07B6  
                             u911 07B2                               _PSA 007EAB  
                             u904 0790                               u905 078C  
                             u850 0702                               u851 06FE  
                             u924 07E8                               u860 071C  
                             u925 07E4                               u861 0718  
                             u870 0736                               u871 0732  
                             u951 001C                               u880 0750  
                             u960 0064                               u881 074C  
                             u961 0060                               u890 076A  
                             u970 00C4                               u891 0766  
                             u971 00C0                               u980 0124  
                             u981 0120                               u990 0184  
                             u991 0180                     _LCD_SetSymbol 0BEC  
                             prod 000FF3                               wreg 000FE8  
                   ?_LCD_SetDDRAM 0001                     ?_LCD_SetCGRAM 0001  
                    __CFG_FOSC$HS 000000                      __CFG_WDT$OFF 000000  
                            l2101 0E72                              l2031 08E0  
                            l2111 0EE4                              l2103 0ECE  
                            l2041 0948                              l2033 08E0  
                            l2121 0F16                              l2113 0EE8  
                            l2105 0ED2                              l2043 0962  
                            l2035 08FA                              l1331 1046  
                            l2051 0B88                              l2115 0EF6  
                            l2107 0ED6                              l2037 0914  
                            l2045 0966                              l1501 101E  
                            l2061 084C                              l1333 104E  
                            l2053 0B9C                              l2117 0F04  
                            l2109 0EE0                              l2039 092E  
                            l2071 0872                              l2063 0852  
                            l2055 0800                              l1327 1056  
                            l1335 1050                              l2119 0F12  
                            l2081 0892                              l2073 0878  
                            l2065 0858                              l2057 0828  
                            l1337 1052                              l1329 1044  
                            l2049 0B42                              l1531 0FD8  
                            l1611 00E4                              l1603 0092  
                            l2091 08BE                              l2083 089A  
                            l2075 087E                              l2067 085E  
                            l2059 083C                              l1533 0FE0  
                            l1621 0104                              l1613 00EA  
                            l1605 00A4                              l2093 08C4  
                            l2085 08A0                              l2077 0884  
                            l2069 086C                              l1701 107C  
                            l1551 0702                              l1535 1068  
                            l1623 0108                              l1607 00A8  
                            l2095 08CC                              l2087 08A8  
                            l2079 088C                              l1711 09D4  
                            l1703 09B6                              l1801 0D4A  
                            l1553 071C                              l1561 076E  
                            l1537 106C                              l1529 0FCA  
                            l1641 0186                              l1625 0124  
                            l1609 00C4                              l2097 08D2  
                            l2089 08AE                              l1721 0A08  
                            l1713 09E2                              l1705 09BA  
                            l1563 07A6                              l1555 0736  
                            l1547 06E8                              l1491 0F8A  
                            l1539 106E                              l1643 0196  
                            l1635 0152                              l1627 0144  
                            l1619 00F2                              l2099 08DA  
                            l1731 0A42                              l1723 0A10  
                            l1715 09EA                              l1707 09C8  
                            l1565 07B6                              l1557 0750  
                            l1549 06E8                              l1493 0F92  
                            l1661 01DE                              l1645 0198  
                            l1637 0164                              l1629 014A  
                            l1581 002A                              l1741 0A68  
                            l1733 0A4A                              l1725 0A18  
                            l1717 09EE                              l1709 09D0  
                            l1901 06BC                              l1567 07C6  
                            l1559 076A                              l1495 0F98  
                            l1663 01F2                              l1655 01AC  
                            l1647 019E                              l1639 0168  
                            l1591 0048                              l1743 0A70  
                            l1735 0A4C                              l1727 0A26  
                            l1719 09F6                              l1903 06BE  
                            l1489 0F72                              l1497 100A  
                            l1681 023C                              l1665 01F4  
                            l1657 01BE                              l1649 01A4  
                            l1593 0064                              l1577 0012  
                            l1737 0A52                              l1729 0A2C  
                            l1905 06CE                              l1499 1016  
                            l1683 0254                              l1675 0208  
                            l1667 01FA                              l1659 01C2  
                            l1595 0084                              l1587 0032  
                            l1579 0024                              l1739 0A58  
                            l1851 0BFE                              l1907 06D0  
                            l1693 0264                              l1685 0256  
                            l1677 021A                              l1669 0200  
                            l1597 008A                              l1589 0044  
                            l1909 06E2                              l1861 04CC  
                            l1695 0276                              l1687 025C  
                            l1679 021E                              l1855 0C12  
                            l1863 04D4                              l1697 027A  
                            l1857 0C36                              l1849 0BEE  
                            l1881 053A                              l1873 04F8  
                            l1699 1078                              l1891 0654  
                            l1883 05A6                              l1875 0536  
                            l1867 04EC                              l1859 04C8  
                            l1893 0656                              l1885 05C2  
                            l1895 0668                              l1887 05C8  
                            l1889 05FA                              l1897 06AA  
                            l1899 06AC                   __end_of_DO_Init 0BEC  
                            u1000 01DE                              u1001 01DA  
                            _T0CS 007EAD                              u1010 023A  
                            u1011 0236                              u1020 0296  
                            u1021 0292                              u1030 09C8  
                            u1031 09C4                              u1040 09E2  
                            u1200 04E8                              u1041 09DE  
                            u1201 04E4                              u1050 0A08  
                            u1210 0536                              u1051 0A04  
                            u1211 0532                              u1060 0A26  
                            u1061 0A22                              u1070 0A42  
                            u1230 05A6                              u1071 0A3E  
                            u1231 05A2                              u1080 0A68  
                            u1224 0586                              u1081 0A64  
                            u1225 0580                              u1154 0D8C  
                            u1170 0BFE                              u1250 0668  
                            u1155 0D88                              u1171 0BFA  
                            u1251 0664                              u1164 0DD8  
                            u1500 0914                              u1180 0C0E  
                            u1260 06A6                              u1244 0612  
                            u1165 0DD4                              u1501 0910  
                            u1181 0C0A                              u1261 06A2  
                            u1245 060C                              u1510 092E  
                            u1270 06BC                              u1511 092A  
                            u1271 06B8                              u1520 0948  
                            u1280 06CE                              u1521 0944  
                            u1281 06CA                              u1530 0962  
                            u1194 0C52                              u1290 06E2  
                            u1531 095E                              u1195 0C4C  
                            u1291 06DE                              u1607 0874  
                            u1544 0978                              u1545 0974  
                            u1617 0886                              u1554 099C  
                            u1490 08FA                              u1555 0998  
                            u1491 08F6                              u1627 0894  
                            u1564 0BAE                              u1637 08A2  
                            u1565 0BAA                              u1574 0BD2  
                            u1647 08B4                              u1575 0BCE  
                            u1657 08C6                              u1667 08D4  
                            u1587 0842                              u1677 0F8C  
                            u1597 0864                              i2l90 1042  
                            i2l93 0FC6                              i2l87 1006  
                            i2l97 0D46                              _TMR0 000FD6  
             LCD_Write_Symbol@sym 0016          ?i2_LCD_Write_Instruction 0001  
        __size_ofi2_LCD_SetSymbol 00AE                 ?_LCD_Write_Symbol 0001  
                            _main 0ECE                              _init 0E72  
               ?_GPIO_Init_Nibble 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 004B  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                ??_LCD_Write_Symbol 0016  
                   __CFG_IESO$OFF 000000                ??_GPIO_Init_Nibble 0019  
                ??i2_LCD_Data_Out 0001                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                     _GPIO_Init_Pin 08E0  
                  ??_LCD_Data_Out 0015                  __end_of_LCD_Init 08E0  
             GPIO_Init_Nibble@dir 0018                     __CFG_PLLDIV$1 000000  
                  __CFG_CCP2MX$ON 000000                  ??i2_LCD_SetDDRAM 0003  
                           ?_main 0001                             ?_init 0001  
                 __end_of___awdiv 0A7A                   ___awdiv@divisor 0017  
                  ?_LCD_SetSymbol 001D                       LCD_Update@i 0023  
                     LCD_Update@j 0024                             _T0PS0 007EA8  
                           _T0PS1 007EA9                             _T0PS2 007EAA  
                           i2l111 04C6                             i2l107 1090  
                           i2l185 0E5E                             i2l463 0B3C  
                 ___awdiv@counter 0019                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTD 000F83  
                           _PORTE 000F84                    ??_LCD_SetDDRAM 0017  
                  ??_LCD_SetCGRAM 0017                     __CFG_USBDIV$1 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                    ?_DO_SetState 0015                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                __end_of_TMR0_ISR 0E72                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             tablat 000FF5  
                __end_of_TMR_Init 1066                             plusw1 000FE3  
                           plusw2 000FDB               __size_of_LCD_Update 0220  
                           ttemp5 004C                             ttemp6 004F  
                           ttemp7 0053                             status 000FD8  
                           wtemp8 004C                    __CFG_ICPRT$OFF 000000  
              __size_ofi2___awdiv 00C4                    __CFG_PBADEN$ON 000000  
              __size_of_TMR_Start 0012                    ?_GPIO_Init_Pin 0015  
                 __initialization 0F22                      __end_of_main 0F22  
                    __end_of_init 0ECE                            ??_main 002A  
                          ??_init 002A                     __activetblptr 000000  
                       ??_DO_Init 0025   __end_ofi2_LCD_Write_Instruction 1044  
      GPIO_Init_Pin@DirRegAddress 0015                            _T08BIT 007EAE  
                ___awdiv@dividend 0015                            i2l2001 0E48  
                          i2l2003 0E4C                            i2l2005 0E50  
                          i2l2007 0E54                            i2l2009 0E56  
                          i2l1503 0F9E                            i2l1505 0FB6  
                          i2l1507 0FBE                            i2l1509 0FC4  
                          i2l1541 1028                            i2l1543 1034  
                          i2l1545 103C                            i2l1751 1000  
                          i2l1761 0A8C                            i2l1921 0CE4  
                          i2l1913 0C9C                            i2l1753 1086  
                          i2l1771 0AB2                            i2l1763 0A94  
                          i2l1915 0CAC                            i2l1755 108A  
                          i2l1747 0FEA                            i2l1931 02BC  
                          i2l1923 0298                            i2l1781 0AEA  
                          i2l1773 0ABA                            i2l1765 0A98  
                          i2l1757 0A7A                            i2l1749 0FF8  
                          i2l1941 031E                            i2l1933 02C8  
                          i2l1925 029C                            i2l1791 0B16  
                          i2l1783 0AF0                            i2l1775 0ACC  
                          i2l1767 0AA6                            i2l1759 0A7E  
                          i2l1919 0CC0                            i2l1951 03C0  
                          i2l1927 02A4                            i2l1785 0B06  
                          i2l1777 0AD4                            i2l1793 0B1C  
                          i2l1769 0AAE                            i2l1953 03F2  
                          i2l1961 04A2                            i2l1945 0332  
                          i2l1937 02DC                            i2l1795 0B2C  
                          i2l1787 0B0E                            i2l1779 0ADC  
                          i2l1971 04B0                            i2l1955 044C  
                          i2l1947 039E                            i2l1939 031A  
                          i2l1797 0B34                            i2l1789 0B10  
                          i2l1973 04C2                            i2l1957 044E  
                          i2l1949 03BA                            i2l1965 04A8  
                          i2l1959 0460                            i2l1991 0DFC  
                          i2l1969 04AE                            i2l1993 0E1A  
                          i2l1995 0E22                            i2l1997 0E30  
                          i2l1999 0E34                            _TMR0IE 007F95  
                          _TMR0IF 007F92                            _TMR0ON 007EAF  
                  __CFG_XINST$OFF 000000                 ??i2_LCD_SetSymbol 000B  
                     DO_Init@pinN 0023                       DO_Init@port 001F  
                       ??___awdiv 0019                    __CFG_STVREN$ON 000000  
                   ?i2_LCD_Update 0001                            clear_0 0F48  
                          clear_1 0F54                            clear_2 0F60  
                 ??_LCD_SetSymbol 001F                  ___awdiv@quotient 001B  
                  i2___awdiv@sign 0006                      __pdataCOMRAM 0041  
               __end_ofi2___awdiv 0B3E                 __end_of_TMR_Start 1056  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_LCD_Data_Out 0F9C  
                      __accesstop 0060           __end_of__initialization 0F66  
                       ?_LCD_Init 0001                   ??_GPIO_Init_Pin 0019  
                   ___rparam_used 000001                  GPIO_Init_Pin@dir 0018  
            __end_of_LCD_SetDDRAM 1084              __end_of_LCD_SetCGRAM 1076  
     __end_of_LCD_Init_Custom_Sym 0298                    __pcstackCOMRAM 0001  
                       ?_TMR0_ISR 0001             _lines_offset_adresses 0049  
                  ??i2_LCD_Update 0004                      ??_LCD_Update 0018  
     __size_ofi2_LCD_Write_Symbol 0020       i2LCD_Write_Instruction@inst 0002  
                       ?_TMR_Init 0001                         DO_Init@DO 00B4  
            __size_of_DO_SetState 00A2                        __pbssBANK0 0060  
                      __pbssBANK1 0100                        ??_LCD_Init 0022  
              __end_of_LCD_Update 06E8                        ??_TMR0_ISR 0011  
__size_ofi2_LCD_Write_Instruction 001E             _LCD_Write_Instruction 1008  
       __size_of_LCD_Write_Symbol 0020         __size_of_GPIO_Init_Nibble 0118  
                      ??_TMR_Init 0015                           _DOArray 002A  
                         _DO_Init 0B3E     GPIO_Init_Nibble@DirRegAddress 0015  
      GPIO_Init_Nibble@nibble_num 0017             i2LCD_SetSymbol@column 000A  
                 __CFG_VREGEN$OFF 000000                  LCD_Data_Out@byte 0015  
             _GPIO_Init_Nibble$44 001D                           __Hparam 0000  
                         __Lparam 0000               i2LCD_Update@address 000D  
                         ___awdiv 09B6                      DO_Init@state 0024  
                         __pcinit 0F22                           __ramtop 0800  
                         __ptext0 0ECE                           __ptext1 0E72  
                         __ptext2 0B3E                           __ptext3 1044  
                         __ptext4 1056                           __ptext5 04C8  
                         __ptext6 1076                           __ptext7 0BEC  
                         __ptext8 09B6                           __ptext9 0800  
             i2LCD_Update@updated 000E             __size_of_LCD_Data_Out 002C  
                DO_SetState@state 0015                    __pintcode_body 0DEA  
            end_of_initialization 0F66                   i2_LCD_SetSymbol 0C9A  
            __end_ofi2_LCD_Update 04C8             __size_of_LCD_SetDDRAM 000E  
           __size_of_LCD_SetCGRAM 0010                           int_func 0DEA  
          ?_LCD_Write_Instruction 0001                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                    _LCD_Data_Out 0F70           __size_ofi2_LCD_Data_Out 002C  
                    _LCD_SetDDRAM 1076                      _LCD_SetCGRAM 1066  
                       i2___awdiv 0A7A           __size_ofi2_LCD_SetDDRAM 000E  
                       _TMR_Start 1044           GPIO_Init_Pin@pin_number 0017  
              i2___awdiv@dividend 0001                 __size_of_LCD_Init 00E0  
         i2_LCD_Write_Instruction 1026                  _LCD_Write_Symbol 0FC8  
                   __pidataCOMRAM 1092                 __size_of_TMR0_ISR 0E6A  
                _GPIO_Init_Nibble 06E8             __end_of_LCD_SetSymbol 0C9A  
           i2LCD_SetDDRAM@ADDRESS 0003           __end_ofi2_LCD_SetSymbol 0D48  
             start_initialization 0F22                 __size_of_TMR_Init 0010  
              i2___awdiv@quotient 0007                   TMR0_ISR@counter 0039  
                LCD_SetSymbol@row 001D                  LCD_SetSymbol@sym 0024  
                      ?i2___awdiv 0001               LCD_SetSymbol@column 001E  
                      ?_TMR_Start 0001             __end_of_GPIO_Init_Pin 09B6  
                      DO_Init@dir 0021        __end_ofi2_LCD_Write_Symbol 1008  
                __CFG_LPT1OSC$OFF 000000      __size_of_LCD_Init_Custom_Sym 0286  
                     __pbssCOMRAM 002A                     ??_DO_SetState 0016  
                        ?_DO_Init 001F                     __pcstackBANK0 00B4  
           __size_ofi2_LCD_Update 0230                     TMR0_ISR@index 003F  
                    _line_counter 0040         ??i2_LCD_Write_Instruction 0002  
                       __pintcode 0008                          ?___awdiv 0015  
                    i2_LCD_Update 0298                    i2_LCD_Data_Out 0F9C  
                   i2LCD_Update@i 000F                     i2LCD_Update@j 0010  
                ?i2_LCD_SetSymbol 0009                 LCD_Update@address 0021  
                     ??i2___awdiv 0005                    i2_LCD_SetDDRAM 1084  
                     ??_TMR_Start 0015               __end_of_DO_SetState 0DEA  
                        _LCD_Init 0800                 LCD_Update@updated 0022  
         ??_LCD_Write_Instruction 0016                          i2u110_40 0AA6  
                        i2u110_41 0AA2                          i2u111_40 0ACC  
                        i2u111_41 0AC8                          i2u112_40 0AEA  
                        i2u112_41 0AE6                          i2u113_40 0B06  
                        i2u113_41 0B02                          i2u114_40 0B2C  
                        i2u130_40 0CAC                          i2u114_41 0B28  
                        i2u130_41 0CA8                          i2u131_40 0CBC  
                        i2u131_41 0CB8                          i2u140_40 0460  
                        i2u140_41 045C                          i2u132_44 0D00  
                        i2u132_45 0CFA                          i2u109_40 0A8C  
                        i2u141_40 049E                          i2u133_40 02B8  
                        i2u109_41 0A88                          i2u141_41 049A  
                        i2u133_41 02B4                          i2u142_40 04C2  
                        i2u134_40 02D8                          i2u142_41 04BE  
                        i2u134_41 02D4                          i2u135_40 031A  
                        i2u135_41 0316                          i2u136_40 032E  
                        i2u136_41 032A                          i2u137_44 037E  
                        i2u137_45 0378                          i2u138_40 039E  
                        i2u138_41 039A                          i2u147_40 0E1A  
                        i2u147_41 0E16                          i2u139_44 040A  
                        i2u139_45 0404                          i2u148_40 0E48  
                        i2u148_41 0E44                          i2u168_47 0FB8  
              i2LCD_Data_Out@byte 0001          LCD_Init_Custom_Sym@F3257 0041  
                __CFG_WDTPS$32768 000000                          _TMR0_ISR 0008  
          __end_ofi2_LCD_Data_Out 0FC8                          _TMR_Init 1056  
             LCD_SetDDRAM@ADDRESS 0017                 i2___awdiv@divisor 0003  
               i2___awdiv@counter 0005            __end_ofi2_LCD_SetDDRAM 1092  
                __size_of_DO_Init 00AE                         copy_data0 0F36  
        __end_of_LCD_Write_Symbol 0FE8          __end_of_GPIO_Init_Nibble 0800  
             LCD_SetCGRAM@ADDRESS 0017                          __Hrparam 0000  
                 _LCD_Data_Buffer 0100                          __Lrparam 0000  
                 ?i2_LCD_Data_Out 0001                  __size_of___awdiv 00C4  
       LCD_Write_Instruction@inst 0016                       _DO_SetState 0D48  
                 ?i2_LCD_SetDDRAM 0001                          __ptext10 0012  
                        __ptext11 0FC8                          __ptext20 0FE8  
                        __ptext12 1066                          __ptext21 1084  
                        __ptext13 1008                          __ptext22 1026  
                        __ptext14 0F70                          __ptext23 0F9C  
                        __ptext15 08E0                          __ptext24 0C9A  
                        __ptext16 06E8                          __ptext25 0A7A  
                        __ptext17 0D48                          __ptext19 0298  
           i2LCD_Write_Symbol@sym 0002                      _tick_counter 003D  
                   __size_of_main 0054               _LCD_Init_Custom_Sym 0012  
                   __size_of_init 005C                          int$flags 004B  
         LCD_Init_Custom_Sym@data 0018                        _LCD_Update 04C8  
            ?_LCD_Init_Custom_Sym 0001             __CFG_CPUDIV$OSC1_PLL2 000000  
              i2_LCD_Write_Symbol 0FE8                          intlevel2 0000  
             ?i2_LCD_Write_Symbol 0001                       _tempCounter 003B  
              i2LCD_SetSymbol@row 0009                i2LCD_SetSymbol@sym 0010  
          __size_of_LCD_SetSymbol 00AE                     DO_SetState@DO 001F  
            ??i2_LCD_Write_Symbol 0002             ??_LCD_Init_Custom_Sym 0018  
          __size_of_GPIO_Init_Pin 00D6              LCD_Init_Custom_Sym@i 0020  
  __size_of_LCD_Write_Instruction 001E     __end_of_LCD_Write_Instruction 1026  
                     _update_flag 0060  
