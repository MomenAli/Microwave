

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 28 17:43:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTD	set	3971
    53  0000                     _PORTE	set	3972
    54  0000                     _TRISA	set	3986
    55  0000                     _PORTC	set	3970
    56  0000                     _PORTB	set	3969
    57  0000                     _TRISE	set	3990
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISC	set	3988
    60  0000                     _TRISB	set	3987
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007D4C                     __pcinit:
    66                           	opt callstack 0
    67  007D4C                     start_initialization:
    68                           	opt callstack 0
    69  007D4C                     __initialization:
    70                           	opt callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (15 bytes)
    73  007D4C  EE00  F001         	lfsr	0,__pbssCOMRAM
    74  007D50  0E0F               	movlw	15
    75  007D52                     clear_0:
    76  007D52  6AEE               	clrf	postinc0,c
    77  007D54  06E8               	decf	wreg,f,c
    78  007D56  E1FD               	bnz	clear_0
    79  007D58                     end_of_initialization:
    80                           	opt callstack 0
    81  007D58                     __end_of__initialization:
    82                           	opt callstack 0
    83  007D58  0100               	movlb	0
    84  007D5A  EF9D  F03E         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	bssCOMRAM
    87  000001                     __pbssCOMRAM:
    88                           	opt callstack 0
    89  000001                     _DOArray:
    90                           	opt callstack 0
    91  000001                     	ds	15
    92                           
    93                           	psect	cstackCOMRAM
    94  000010                     __pcstackCOMRAM:
    95                           	opt callstack 0
    96  000010                     LCD_Write_Byte@byte:
    97                           	opt callstack 0
    98  000010                     GPIO_Init_Port@DirRegAddress:
    99                           	opt callstack 0
   100  000010                     GPIO_Init_Pin@DirRegAddress:
   101                           	opt callstack 0
   102                           
   103                           ; 2 bytes @ 0x0
   104  000010                     	ds	1
   105  000011                     LCD_Write_Char@ch:
   106                           	opt callstack 0
   107  000011                     LCD_Write_Instruction@inst:
   108                           	opt callstack 0
   109                           
   110                           ; 1 bytes @ 0x1
   111  000011                     	ds	1
   112  000012                     GPIO_Init_Port@dir:
   113                           	opt callstack 0
   114  000012                     GPIO_Init_Pin@pin_number:
   115                           	opt callstack 0
   116                           
   117                           ; 1 bytes @ 0x2
   118  000012                     	ds	1
   119  000013                     GPIO_Init_Pin@dir:
   120                           	opt callstack 0
   121                           
   122                           ; 1 bytes @ 0x3
   123  000013                     	ds	1
   124  000014                     ??_GPIO_Init_Pin:
   125                           
   126                           ; 1 bytes @ 0x4
   127  000014                     	ds	1
   128  000015                     _GPIO_Init_Port$33:
   129                           	opt callstack 0
   130                           
   131                           ; 2 bytes @ 0x5
   132  000015                     	ds	5
   133  00001A                     ??_LCD_Init:
   134                           
   135                           ; 1 bytes @ 0xA
   136  00001A                     	ds	1
   137  00001B                     
   138                           ; 1 bytes @ 0xB
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 85 in file "Microwave.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   153 ;; Tracked objects:
   154 ;;		On entry : 0/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   158 ;;      Params:         0       0       0       0       0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0       0       0       0       0
   160 ;;      Temps:          0       0       0       0       0       0       0       0       0
   161 ;;      Totals:         0       0       0       0       0       0       0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels required when called:    3
   164 ;; This function calls:
   165 ;;		_LCD_Init
   166 ;;		_LCD_Write_Char
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173  007D3A                     __ptext0:
   174                           	opt callstack 0
   175  007D3A                     _main:
   176                           	opt callstack 28
   177  007D3A                     
   178                           ;Microwave.c: 88:     LCD_Init();
   179  007D3A  EC30  F03F         	call	_LCD_Init	;wreg free
   180  007D3E                     
   181                           ;Microwave.c: 89:     LCD_Write_Char('a');
   182  007D3E  0E61               	movlw	97
   183  007D40  ECBA  F03E         	call	_LCD_Write_Char
   184  007D44                     l101:
   185  007D44  EFA2  F03E         	goto	l101
   186  007D48  EF00  F000         	goto	start
   187  007D4C                     __end_of_main:
   188                           	opt callstack 0
   189                           
   190 ;; *************** function _LCD_Write_Char *****************
   191 ;; Defined at:
   192 ;;		line 89 in file "LCD.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;  ch              1    wreg     unsigned char 
   195 ;; Auto vars:     Size  Location     Type
   196 ;;  ch              1    1[COMRAM] unsigned char 
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   206 ;;      Params:         0       0       0       0       0       0       0       0       0
   207 ;;      Locals:         1       0       0       0       0       0       0       0       0
   208 ;;      Temps:          0       0       0       0       0       0       0       0       0
   209 ;;      Totals:         1       0       0       0       0       0       0       0       0
   210 ;;Total ram usage:        1 bytes
   211 ;; Hardware stack levels used:    1
   212 ;; Hardware stack levels required when called:    1
   213 ;; This function calls:
   214 ;;		_LCD_Write_Byte
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221  007D74                     __ptext1:
   222                           	opt callstack 0
   223  007D74                     _LCD_Write_Char:
   224                           	opt callstack 29
   225                           
   226                           ;incstack = 0
   227                           ;LCD_Write_Char@ch stored from wreg
   228  007D74  6E11               	movwf	LCD_Write_Char@ch^0,c
   229  007D76                     
   230                           ;LCD.c: 89: void LCD_Write_Char(uint8 ch);LCD.c: 90: {;LCD.c: 92:     (((PORTE))=((PORTE
      +                          ) & ~(1<<(2)))|(1<<(2)));
   231  007D76  5084               	movf	132,w,c	;volatile
   232  007D78  0BFB               	andlw	251
   233  007D7A  0904               	iorlw	4
   234  007D7C  6E84               	movwf	132,c	;volatile
   235                           
   236                           ;LCD.c: 94:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
   237  007D7E  5084               	movf	132,w,c	;volatile
   238  007D80  0BFD               	andlw	253
   239  007D82  6E84               	movwf	132,c	;volatile
   240  007D84                     
   241                           ;LCD.c: 96:     LCD_Write_Byte(ch);
   242  007D84  5011               	movf	LCD_Write_Char@ch^0,w,c
   243  007D86  ECC6  F03E         	call	_LCD_Write_Byte
   244  007D8A  0012               	return		;funcret
   245  007D8C                     __end_of_LCD_Write_Char:
   246                           	opt callstack 0
   247                           
   248 ;; *************** function _LCD_Init *****************
   249 ;; Defined at:
   250 ;;		line 25 in file "LCD.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;		None
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   264 ;;      Params:         0       0       0       0       0       0       0       0       0
   265 ;;      Locals:         0       0       0       0       0       0       0       0       0
   266 ;;      Temps:          1       0       0       0       0       0       0       0       0
   267 ;;      Totals:         1       0       0       0       0       0       0       0       0
   268 ;;Total ram usage:        1 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; Hardware stack levels required when called:    2
   271 ;; This function calls:
   272 ;;		_GPIO_Init_Pin
   273 ;;		_GPIO_Init_Port
   274 ;;		_LCD_Write_Instruction
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text2
   281  007E60                     __ptext2:
   282                           	opt callstack 0
   283  007E60                     _LCD_Init:
   284                           	opt callstack 28
   285  007E60                     
   286                           ;LCD.c: 31:     GPIO_Init_Pin(&(TRISE),(1),(0));
   287  007E60  0E96               	movlw	150
   288  007E62  6E10               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
   289  007E64  0E0F               	movlw	15
   290  007E66  6E11               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
   291  007E68  0E01               	movlw	1
   292  007E6A  6E12               	movwf	GPIO_Init_Pin@pin_number^0,c
   293  007E6C  0E00               	movlw	0
   294  007E6E  6E13               	movwf	GPIO_Init_Pin@dir^0,c
   295  007E70  EC95  F03F         	call	_GPIO_Init_Pin	;wreg free
   296                           
   297                           ;LCD.c: 33:     GPIO_Init_Pin(&(TRISE),(2),(0));
   298  007E74  0E96               	movlw	150
   299  007E76  6E10               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
   300  007E78  0E0F               	movlw	15
   301  007E7A  6E11               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
   302  007E7C  0E02               	movlw	2
   303  007E7E  6E12               	movwf	GPIO_Init_Pin@pin_number^0,c
   304  007E80  0E00               	movlw	0
   305  007E82  6E13               	movwf	GPIO_Init_Pin@dir^0,c
   306  007E84  EC95  F03F         	call	_GPIO_Init_Pin	;wreg free
   307                           
   308                           ;LCD.c: 38:     GPIO_Init_Port(&(TRISD),(0));
   309  007E88  0E95               	movlw	149
   310  007E8A  6E10               	movwf	GPIO_Init_Port@DirRegAddress^0,c
   311  007E8C  0E0F               	movlw	15
   312  007E8E  6E11               	movwf	(GPIO_Init_Port@DirRegAddress+1)^0,c
   313  007E90  0E00               	movlw	0
   314  007E92  6E12               	movwf	GPIO_Init_Port@dir^0,c
   315  007E94  ECD6  F03E         	call	_GPIO_Init_Port	;wreg free
   316  007E98                     
   317                           ;LCD.c: 48:     _delay((unsigned long)((35)*(8000000/4000.0)));
   318  007E98  0E5B               	movlw	91
   319  007E9A  6E1A               	movwf	??_LCD_Init^0,c
   320  007E9C  0EE8               	movlw	232
   321  007E9E                     u417:
   322  007E9E  2EE8               	decfsz	wreg,f,c
   323  007EA0  D7FE               	bra	u417
   324  007EA2  2E1A               	decfsz	??_LCD_Init^0,f,c
   325  007EA4  D7FC               	bra	u417
   326  007EA6                     
   327                           ;LCD.c: 50:     LCD_Write_Instruction(LCD_FunctionReset);
   328  007EA6  0E30               	movlw	48
   329  007EA8  ECAF  F03E         	call	_LCD_Write_Instruction
   330  007EAC                     
   331                           ;LCD.c: 51:     _delay((unsigned long)((10)*(8000000/4000.0)));
   332  007EAC  0E1A               	movlw	26
   333  007EAE  6E1A               	movwf	??_LCD_Init^0,c
   334  007EB0  0EF8               	movlw	248
   335  007EB2                     u427:
   336  007EB2  2EE8               	decfsz	wreg,f,c
   337  007EB4  D7FE               	bra	u427
   338  007EB6  2E1A               	decfsz	??_LCD_Init^0,f,c
   339  007EB8  D7FC               	bra	u427
   340  007EBA  D000               	nop2	
   341  007EBC                     
   342                           ;LCD.c: 53:     LCD_Write_Instruction(LCD_FunctionReset);
   343  007EBC  0E30               	movlw	48
   344  007EBE  ECAF  F03E         	call	_LCD_Write_Instruction
   345  007EC2                     
   346                           ;LCD.c: 54:     _delay((unsigned long)((150)*(8000000/4000000.0)));
   347  007EC2  0E64               	movlw	100
   348  007EC4                     u437:
   349  007EC4  2EE8               	decfsz	wreg,f,c
   350  007EC6  D7FE               	bra	u437
   351  007EC8                     
   352                           ;LCD.c: 56:     LCD_Write_Instruction(LCD_FunctionReset);
   353  007EC8  0E30               	movlw	48
   354  007ECA  ECAF  F03E         	call	_LCD_Write_Instruction
   355  007ECE                     
   356                           ;LCD.c: 59:     LCD_Write_Instruction(LCD_FunctionSet8bit);
   357  007ECE  0E38               	movlw	56
   358  007ED0  ECAF  F03E         	call	_LCD_Write_Instruction
   359  007ED4                     
   360                           ;LCD.c: 60:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   361  007ED4  0E21               	movlw	33
   362  007ED6                     u447:
   363  007ED6  2EE8               	decfsz	wreg,f,c
   364  007ED8  D7FE               	bra	u447
   365  007EDA  F000               	nop	
   366  007EDC                     
   367                           ;LCD.c: 63:     LCD_Write_Instruction(LCD_DisplayOff);
   368  007EDC  0E08               	movlw	8
   369  007EDE  ECAF  F03E         	call	_LCD_Write_Instruction
   370  007EE2                     
   371                           ;LCD.c: 64:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   372  007EE2  0E21               	movlw	33
   373  007EE4                     u457:
   374  007EE4  2EE8               	decfsz	wreg,f,c
   375  007EE6  D7FE               	bra	u457
   376  007EE8  F000               	nop	
   377  007EEA                     
   378                           ;LCD.c: 67:     LCD_Write_Instruction(LCD_Clear);
   379  007EEA  0E01               	movlw	1
   380  007EEC  ECAF  F03E         	call	_LCD_Write_Instruction
   381  007EF0                     
   382                           ;LCD.c: 68:     _delay((unsigned long)((2)*(8000000/4000.0)));
   383  007EF0  0E06               	movlw	6
   384  007EF2  6E1A               	movwf	??_LCD_Init^0,c
   385  007EF4  0E30               	movlw	48
   386  007EF6                     u467:
   387  007EF6  2EE8               	decfsz	wreg,f,c
   388  007EF8  D7FE               	bra	u467
   389  007EFA  2E1A               	decfsz	??_LCD_Init^0,f,c
   390  007EFC  D7FC               	bra	u467
   391  007EFE  D000               	nop2	
   392  007F00                     
   393                           ;LCD.c: 71:     LCD_Write_Instruction(LCD_EntryMode);
   394  007F00  0E06               	movlw	6
   395  007F02  ECAF  F03E         	call	_LCD_Write_Instruction
   396  007F06                     
   397                           ;LCD.c: 72:     _delay((unsigned long)((50)*(8000000/4000.0)));
   398  007F06  0E82               	movlw	130
   399  007F08  6E1A               	movwf	??_LCD_Init^0,c
   400  007F0A  0EDE               	movlw	222
   401  007F0C                     u477:
   402  007F0C  2EE8               	decfsz	wreg,f,c
   403  007F0E  D7FE               	bra	u477
   404  007F10  2E1A               	decfsz	??_LCD_Init^0,f,c
   405  007F12  D7FC               	bra	u477
   406  007F14                     
   407                           ;LCD.c: 77:     LCD_Write_Instruction(LCD_DisplayOn);
   408  007F14  0E0C               	movlw	12
   409  007F16  ECAF  F03E         	call	_LCD_Write_Instruction
   410  007F1A                     
   411                           ;LCD.c: 78:     _delay((unsigned long)((50)*(8000000/4000.0)));
   412  007F1A  0E82               	movlw	130
   413  007F1C  6E1A               	movwf	??_LCD_Init^0,c
   414  007F1E  0EDE               	movlw	222
   415  007F20                     u487:
   416  007F20  2EE8               	decfsz	wreg,f,c
   417  007F22  D7FE               	bra	u487
   418  007F24  2E1A               	decfsz	??_LCD_Init^0,f,c
   419  007F26  D7FC               	bra	u487
   420  007F28  0012               	return		;funcret
   421  007F2A                     __end_of_LCD_Init:
   422                           	opt callstack 0
   423                           
   424 ;; *************** function _LCD_Write_Instruction *****************
   425 ;; Defined at:
   426 ;;		line 119 in file "LCD.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;  inst            1    wreg     enum E3173
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  inst            1    1[COMRAM] enum E3173
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         1       0       0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0
   443 ;;      Totals:         1       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        1 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		_LCD_Write_Byte
   449 ;; This function is called by:
   450 ;;		_LCD_Init
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text3
   455  007D5E                     __ptext3:
   456                           	opt callstack 0
   457  007D5E                     _LCD_Write_Instruction:
   458                           	opt callstack 28
   459                           
   460                           ;incstack = 0
   461                           ;LCD_Write_Instruction@inst stored from wreg
   462  007D5E  6E11               	movwf	LCD_Write_Instruction@inst^0,c
   463  007D60                     
   464                           ;LCD.c: 119: void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 120: {;LCD.c: 122
      +                          :     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
   465  007D60  5084               	movf	132,w,c	;volatile
   466  007D62  0BFB               	andlw	251
   467  007D64  6E84               	movwf	132,c	;volatile
   468                           
   469                           ;LCD.c: 124:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
   470  007D66  5084               	movf	132,w,c	;volatile
   471  007D68  0BFD               	andlw	253
   472  007D6A  6E84               	movwf	132,c	;volatile
   473  007D6C                     
   474                           ;LCD.c: 126:     LCD_Write_Byte(inst);
   475  007D6C  5011               	movf	LCD_Write_Instruction@inst^0,w,c
   476  007D6E  ECC6  F03E         	call	_LCD_Write_Byte
   477  007D72  0012               	return		;funcret
   478  007D74                     __end_of_LCD_Write_Instruction:
   479                           	opt callstack 0
   480                           
   481 ;; *************** function _LCD_Write_Byte *****************
   482 ;; Defined at:
   483 ;;		line 136 in file "LCD.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  byte            1    wreg     unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  byte            1    0[COMRAM] unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   497 ;;      Params:         0       0       0       0       0       0       0       0       0
   498 ;;      Locals:         1       0       0       0       0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0
   500 ;;      Totals:         1       0       0       0       0       0       0       0       0
   501 ;;Total ram usage:        1 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_LCD_Write_Char
   507 ;;		_LCD_Write_Instruction
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text4
   512  007D8C                     __ptext4:
   513                           	opt callstack 0
   514  007D8C                     _LCD_Write_Byte:
   515                           	opt callstack 29
   516                           
   517                           ;incstack = 0
   518                           ;LCD_Write_Byte@byte stored from wreg
   519  007D8C  6E10               	movwf	LCD_Write_Byte@byte^0,c
   520  007D8E                     
   521                           ;LCD.c: 136: void LCD_Write_Byte(uint8 byte);LCD.c: 137: {;LCD.c: 142:     (((PORTD))=(b
      +                          yte));
   522  007D8E  C010  FF83         	movff	LCD_Write_Byte@byte,3971	;volatile
   523  007D92                     
   524                           ;LCD.c: 145:     (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
   525  007D92  5084               	movf	132,w,c	;volatile
   526  007D94  0BFD               	andlw	253
   527  007D96  0902               	iorlw	2
   528  007D98  6E84               	movwf	132,c	;volatile
   529  007D9A                     
   530                           ;LCD.c: 147:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   531  007D9A  0E42               	movlw	66
   532  007D9C                     u497:
   533  007D9C  2EE8               	decfsz	wreg,f,c
   534  007D9E  D7FE               	bra	u497
   535  007DA0  D000               	nop2	
   536                           
   537                           ;LCD.c: 149:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
   538  007DA2  5084               	movf	132,w,c	;volatile
   539  007DA4  0BFD               	andlw	253
   540  007DA6  6E84               	movwf	132,c	;volatile
   541  007DA8                     
   542                           ;LCD.c: 151:     _delay((unsigned long)((1)*(8000000/4000000.0)));
   543  007DA8  D000               	nop2		;2 cycle nop
   544  007DAA  0012               	return		;funcret
   545  007DAC                     __end_of_LCD_Write_Byte:
   546                           	opt callstack 0
   547                           
   548 ;; *************** function _GPIO_Init_Port *****************
   549 ;; Defined at:
   550 ;;		line 10 in file "GPIO.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  DirRegAddres    2    0[COMRAM] PTR volatile unsigned ch
   553 ;;		 -> TRISD(1), 
   554 ;;  dir             1    2[COMRAM] unsigned char 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  ret             1    0        unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      unsigned char 
   559 ;; Registers used:
   560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         3       0       0       0       0       0       0       0       0
   567 ;;      Locals:         3       0       0       0       0       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0       0       0       0       0
   569 ;;      Totals:         7       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        7 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_LCD_Init
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text5
   580  007DAC                     __ptext5:
   581                           	opt callstack 0
   582  007DAC                     _GPIO_Init_Port:
   583                           	opt callstack 29
   584  007DAC                     
   585                           ;GPIO.c: 14:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
   586  007DAC  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   587  007DB0  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   588  007DB4  5092               	movf	146,w,c	;volatile
   589  007DB6  18DE               	xorwf	postinc2,w,c
   590  007DB8  B4D8               	btfsc	status,2,c
   591  007DBA  EFE1  F03E         	goto	u261
   592  007DBE  EFE3  F03E         	goto	u260
   593  007DC2                     u261:
   594  007DC2  EF19  F03F         	goto	l929
   595  007DC6                     u260:
   596  007DC6  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   597  007DCA  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   598  007DCE  5093               	movf	147,w,c	;volatile
   599  007DD0  18DE               	xorwf	postinc2,w,c
   600  007DD2  B4D8               	btfsc	status,2,c
   601  007DD4  EFEE  F03E         	goto	u271
   602  007DD8  EFF0  F03E         	goto	u270
   603  007DDC                     u271:
   604  007DDC  EF19  F03F         	goto	l929
   605  007DE0                     u270:
   606  007DE0  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   607  007DE4  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   608  007DE8  5094               	movf	148,w,c	;volatile
   609  007DEA  18DE               	xorwf	postinc2,w,c
   610  007DEC  B4D8               	btfsc	status,2,c
   611  007DEE  EFFB  F03E         	goto	u281
   612  007DF2  EFFD  F03E         	goto	u280
   613  007DF6                     u281:
   614  007DF6  EF19  F03F         	goto	l929
   615  007DFA                     u280:
   616  007DFA  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   617  007DFE  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   618  007E02  5095               	movf	149,w,c	;volatile
   619  007E04  18DE               	xorwf	postinc2,w,c
   620  007E06  B4D8               	btfsc	status,2,c
   621  007E08  EF08  F03F         	goto	u291
   622  007E0C  EF0A  F03F         	goto	u290
   623  007E10                     u291:
   624  007E10  EF19  F03F         	goto	l929
   625  007E14                     u290:
   626  007E14  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   627  007E18  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   628  007E1C  5096               	movf	150,w,c	;volatile
   629  007E1E  18DE               	xorwf	postinc2,w,c
   630  007E20  B4D8               	btfsc	status,2,c
   631  007E22  EF15  F03F         	goto	u301
   632  007E26  EF17  F03F         	goto	u300
   633  007E2A                     u301:
   634  007E2A  EF19  F03F         	goto	l929
   635  007E2E                     u300:
   636  007E2E                     
   637                           ;GPIO.c: 20:     }
   638  007E2E  EF2F  F03F         	goto	l19
   639  007E32                     l929:
   640                           
   641                           ;GPIO.c: 22:     {;GPIO.c: 23:         ((*DirRegAddress)=(dir)?(~0):(0));
   642  007E32  5012               	movf	GPIO_Init_Port@dir^0,w,c
   643  007E34  A4D8               	btfss	status,2,c
   644  007E36  EF1F  F03F         	goto	u311
   645  007E3A  EF21  F03F         	goto	u310
   646  007E3E                     u311:
   647  007E3E  EF27  F03F         	goto	l16
   648  007E42                     u310:
   649  007E42  0E00               	movlw	0
   650  007E44  6E16               	movwf	(_GPIO_Init_Port$33+1)^0,c
   651  007E46  0E00               	movlw	0
   652  007E48  6E15               	movwf	_GPIO_Init_Port$33^0,c
   653  007E4A  EF29  F03F         	goto	l933
   654  007E4E                     l16:
   655  007E4E  6815               	setf	_GPIO_Init_Port$33^0,c
   656  007E50  6816               	setf	(_GPIO_Init_Port$33+1)^0,c
   657  007E52                     l933:
   658  007E52  C010  FFD9         	movff	GPIO_Init_Port@DirRegAddress,fsr2l
   659  007E56  C011  FFDA         	movff	GPIO_Init_Port@DirRegAddress+1,fsr2h
   660  007E5A  C015  FFDF         	movff	_GPIO_Init_Port$33,indf2
   661  007E5E                     l19:
   662  007E5E  0012               	return		;funcret
   663  007E60                     __end_of_GPIO_Init_Port:
   664                           	opt callstack 0
   665                           
   666 ;; *************** function _GPIO_Init_Pin *****************
   667 ;; Defined at:
   668 ;;		line 30 in file "GPIO.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  DirRegAddres    2    0[COMRAM] PTR volatile unsigned ch
   671 ;;		 -> TRISE(1), TRISC(1), TRISB(1), 
   672 ;;  pin_number      1    2[COMRAM] unsigned char 
   673 ;;  dir             1    3[COMRAM] unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  ret             1    0        unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      unsigned char 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         4       0       0       0       0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0       0       0       0       0
   687 ;;      Temps:          5       0       0       0       0       0       0       0       0
   688 ;;      Totals:        10       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:       10 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_LCD_Init
   695 ;;		_DO_Init
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text6
   700  007F2A                     __ptext6:
   701                           	opt callstack 0
   702  007F2A                     _GPIO_Init_Pin:
   703                           	opt callstack 29
   704  007F2A                     
   705                           ;GPIO.c: 34:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
   706  007F2A  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   707  007F2E  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   708  007F32  5092               	movf	146,w,c	;volatile
   709  007F34  18DE               	xorwf	postinc2,w,c
   710  007F36  B4D8               	btfsc	status,2,c
   711  007F38  EFA0  F03F         	goto	u321
   712  007F3C  EFA2  F03F         	goto	u320
   713  007F40                     u321:
   714  007F40  EFD8  F03F         	goto	l951
   715  007F44                     u320:
   716  007F44  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   717  007F48  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   718  007F4C  5093               	movf	147,w,c	;volatile
   719  007F4E  18DE               	xorwf	postinc2,w,c
   720  007F50  B4D8               	btfsc	status,2,c
   721  007F52  EFAD  F03F         	goto	u331
   722  007F56  EFAF  F03F         	goto	u330
   723  007F5A                     u331:
   724  007F5A  EFD8  F03F         	goto	l951
   725  007F5E                     u330:
   726  007F5E  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   727  007F62  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   728  007F66  5094               	movf	148,w,c	;volatile
   729  007F68  18DE               	xorwf	postinc2,w,c
   730  007F6A  B4D8               	btfsc	status,2,c
   731  007F6C  EFBA  F03F         	goto	u341
   732  007F70  EFBC  F03F         	goto	u340
   733  007F74                     u341:
   734  007F74  EFD8  F03F         	goto	l951
   735  007F78                     u340:
   736  007F78  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   737  007F7C  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   738  007F80  5095               	movf	149,w,c	;volatile
   739  007F82  18DE               	xorwf	postinc2,w,c
   740  007F84  B4D8               	btfsc	status,2,c
   741  007F86  EFC7  F03F         	goto	u351
   742  007F8A  EFC9  F03F         	goto	u350
   743  007F8E                     u351:
   744  007F8E  EFD8  F03F         	goto	l951
   745  007F92                     u350:
   746  007F92  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   747  007F96  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   748  007F9A  5096               	movf	150,w,c	;volatile
   749  007F9C  18DE               	xorwf	postinc2,w,c
   750  007F9E  B4D8               	btfsc	status,2,c
   751  007FA0  EFD4  F03F         	goto	u361
   752  007FA4  EFD6  F03F         	goto	u360
   753  007FA8                     u361:
   754  007FA8  EFD8  F03F         	goto	l951
   755  007FAC                     u360:
   756  007FAC                     
   757                           ;GPIO.c: 40:     }
   758  007FAC  EFFF  F03F         	goto	l24
   759  007FB0                     l951:
   760                           
   761                           ;GPIO.c: 42:     {;GPIO.c: 43:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
   762  007FB0  C012  F014         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin
   763  007FB4  C013  F015         	movff	GPIO_Init_Pin@dir,??_GPIO_Init_Pin+1
   764  007FB8  2A14               	incf	??_GPIO_Init_Pin^0,f,c
   765  007FBA  EFE1  F03F         	goto	u374
   766  007FBE                     u375:
   767  007FBE  90D8               	bcf	status,0,c
   768  007FC0  3615               	rlcf	(??_GPIO_Init_Pin+1)^0,f,c
   769  007FC2                     u374:
   770  007FC2  2E14               	decfsz	??_GPIO_Init_Pin^0,f,c
   771  007FC4  EFDF  F03F         	goto	u375
   772  007FC8  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   773  007FCC  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   774  007FD0  50DF               	movf	indf2,w,c
   775  007FD2  6E16               	movwf	(??_GPIO_Init_Pin+2)^0,c
   776  007FD4  C012  F017         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin+3
   777  007FD8  0E01               	movlw	1
   778  007FDA  6E18               	movwf	(??_GPIO_Init_Pin+4)^0,c
   779  007FDC  2A17               	incf	(??_GPIO_Init_Pin+3)^0,f,c
   780  007FDE  EFF3  F03F         	goto	u384
   781  007FE2                     u385:
   782  007FE2  90D8               	bcf	status,0,c
   783  007FE4  3618               	rlcf	(??_GPIO_Init_Pin+4)^0,f,c
   784  007FE6                     u384:
   785  007FE6  2E17               	decfsz	(??_GPIO_Init_Pin+3)^0,f,c
   786  007FE8  EFF1  F03F         	goto	u385
   787  007FEC  5018               	movf	(??_GPIO_Init_Pin+4)^0,w,c
   788  007FEE  0AFF               	xorlw	255
   789  007FF0  1416               	andwf	(??_GPIO_Init_Pin+2)^0,w,c
   790  007FF2  1015               	iorwf	(??_GPIO_Init_Pin+1)^0,w,c
   791  007FF4  C010  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
   792  007FF8  C011  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
   793  007FFC  6EDF               	movwf	indf2,c
   794  007FFE                     l24:
   795  007FFE  0012               	return		;funcret
   796  008000                     __end_of_GPIO_Init_Pin:
   797                           	opt callstack 0
   798  0000                     
   799                           	psect	rparam
   800  0000                     tosu	equ	0xFFF
   801                           tosh	equ	0xFFE
   802                           tosl	equ	0xFFD
   803                           stkptr	equ	0xFFC
   804                           pclatu	equ	0xFFB
   805                           pclath	equ	0xFFA
   806                           pcl	equ	0xFF9
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           prodh	equ	0xFF4
   812                           prodl	equ	0xFF3
   813                           indf0	equ	0xFEF
   814                           postinc0	equ	0xFEE
   815                           postdec0	equ	0xFED
   816                           preinc0	equ	0xFEC
   817                           plusw0	equ	0xFEB
   818                           fsr0h	equ	0xFEA
   819                           fsr0l	equ	0xFE9
   820                           wreg	equ	0xFE8
   821                           indf1	equ	0xFE7
   822                           postinc1	equ	0xFE6
   823                           postdec1	equ	0xFE5
   824                           preinc1	equ	0xFE4
   825                           plusw1	equ	0xFE3
   826                           fsr1h	equ	0xFE2
   827                           fsr1l	equ	0xFE1
   828                           bsr	equ	0xFE0
   829                           indf2	equ	0xFDF
   830                           postinc2	equ	0xFDE
   831                           postdec2	equ	0xFDD
   832                           preinc2	equ	0xFDC
   833                           plusw2	equ	0xFDB
   834                           fsr2h	equ	0xFDA
   835                           fsr2l	equ	0xFD9
   836                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S45$dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S45$portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DOArray.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    GPIO_Init_Pin@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    GPIO_Init_Port@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Write_Char->_LCD_Write_Byte
    _LCD_Init->_GPIO_Init_Pin
    _LCD_Write_Instruction->_LCD_Write_Byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1310
                           _LCD_Init
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Char                                       1     1      0      30
                                              1 COMRAM     1     1      0
                     _LCD_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1280
                                             10 COMRAM     1     1      0
                      _GPIO_Init_Pin
                     _GPIO_Init_Port
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Instruction                                1     1      0      30
                                              1 COMRAM     1     1      0
                     _LCD_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Byte                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Port                                       7     4      3     338
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                       10     6      4     912
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _GPIO_Init_Pin
     _GPIO_Init_Port
     _LCD_Write_Instruction
       _LCD_Write_Byte
   _LCD_Write_Char
     _LCD_Write_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      1A       1       27.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 28 17:43:56 2020

                            l24 7FFE                              l16 7E4E                              l19 7E5E  
                            l70 7F28                              l73 7D8A                              l82 7DAA  
                            l79 7D72                     __CFG_BOR$ON 000000                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                     __CFG_LVP$ON 000000                             l101 7D44  
                           l102 7D44                             l831 7D60                             l921 7DE0  
                           l833 7D6C                             l931 7E42                             l923 7DFA  
                           l915 7DAC                             l941 7F44                             l933 7E52  
                           l925 7E14                             l917 7DAC                             l943 7F5E  
                           l951 7FB0                             l927 7E2E                             l919 7DC6  
                           l783 7D8E                             l945 7F78                             l937 7F2A  
                           l929 7E32                             l785 7D92                             l961 7E60  
                           l947 7F92                             l939 7F2A                             l787 7D9A  
                           l971 7EC2                             l963 7E98                             l875 7D76  
                           l949 7FAC                             l789 7DA8                             l981 7EE2  
                           l973 7EC8                             l965 7EA6                             l877 7D84  
                           l991 7F14                             l983 7EEA                             l975 7ECE  
                           l967 7EAC                             l993 7F1A                             l985 7EF0  
                           l977 7ED4                             l969 7EBC                             l987 7F00  
                           l979 7EDC                             l995 7D3A                             l989 7F06  
                           l997 7D3E                    __CFG_CPB$OFF 000000                             u300 7E2E  
                           u301 7E2A                             u310 7E42                             u311 7E3E  
                           u320 7F44                             u321 7F40                             u330 7F5E  
                           u331 7F5A                             u340 7F78                             u260 7DC6  
                           u341 7F74                             u261 7DC2                             u350 7F92  
                           u270 7DE0                             u351 7F8E                             u271 7DDC  
                           u360 7FAC                             u280 7DFA                             u361 7FA8  
                           u281 7DF6                             u417 7E9E                             u290 7E14  
                  __CFG_CPD$OFF 000000                             u291 7E10                             u427 7EB2  
                           u437 7EC4                             u374 7FC2                             u375 7FBE  
                           u447 7ED6                             u384 7FE6                             u385 7FE2  
                           u457 7EE4                             u467 7EF6                             u477 7F0C  
                           u487 7F20                             u497 7D9C                             wreg 000FE8  
                  __CFG_FOSC$HS 000000                    __CFG_WDT$OFF 000000                            _main 7D3A  
                          fsr2h 000FDA                            indf2 000FDF                            fsr2l 000FD9  
                          start 0000                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000                   _GPIO_Init_Pin 7F2A                __end_of_LCD_Init 7F2A  
                 __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000                           ?_main 0010  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                   __CFG_USBDIV$1 000000                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
             _GPIO_Init_Port$33 0015                           status 000FD8                  __CFG_ICPRT$OFF 000000  
                __CFG_PBADEN$ON 000000                  ?_GPIO_Init_Pin 0010                  _LCD_Write_Char 7D74  
               __initialization 7D4C                  _LCD_Write_Byte 7D8C                    __end_of_main 7D4C  
                _GPIO_Init_Port 7DAC                          ??_main 001B                   __activetblptr 000000  
   GPIO_Init_Port@DirRegAddress 0010      GPIO_Init_Pin@DirRegAddress 0010          __end_of_LCD_Write_Char 7D8C  
        __end_of_LCD_Write_Byte 7DAC          __end_of_GPIO_Init_Port 7E60                  __CFG_XINST$OFF 000000  
                __CFG_STVREN$ON 000000                          clear_0 7D52                LCD_Write_Char@ch 0011  
                    __accesstop 0060         __end_of__initialization 7D58                       ?_LCD_Init 0010  
               ??_GPIO_Init_Pin 0014                   ___rparam_used 000001                 ?_LCD_Write_Char 0010  
               ?_LCD_Write_Byte 0010                GPIO_Init_Pin@dir 0013                 ?_GPIO_Init_Port 0010  
                __pcstackCOMRAM 0010                      ??_LCD_Init 001A           _LCD_Write_Instruction 7D5E  
                       _DOArray 0001                 __CFG_VREGEN$OFF 000000                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7D4C                         __ramtop 0800  
                       __ptext0 7D3A                         __ptext1 7D74                         __ptext2 7E60  
                       __ptext3 7D5E                         __ptext4 7D8C                         __ptext5 7DAC  
                       __ptext6 7F2A            end_of_initialization 7D58          ?_LCD_Write_Instruction 0010  
                       postinc0 000FEE                         postinc2 000FDE                ??_LCD_Write_Char 0011  
              ??_LCD_Write_Byte 0010         GPIO_Init_Pin@pin_number 0012                ??_GPIO_Init_Port 0013  
             __size_of_LCD_Init 00CA               GPIO_Init_Port@dir 0012             start_initialization 7D4C  
         __end_of_GPIO_Init_Pin 8000                __CFG_LPT1OSC$OFF 000000                     __pbssCOMRAM 0001  
                      _LCD_Init 7E60         ??_LCD_Write_Instruction 0011                __CFG_WDTPS$32768 000000  
                      __Hrparam 0000                        __Lrparam 0000       LCD_Write_Instruction@inst 0011  
                 __size_of_main 0012           __CFG_CPUDIV$OSC1_PLL2 000000         __size_of_LCD_Write_Char 0018  
       __size_of_LCD_Write_Byte 0020         __size_of_GPIO_Init_Port 00B4              LCD_Write_Byte@byte 0010  
        __size_of_GPIO_Init_Pin 00D6  __size_of_LCD_Write_Instruction 0016   __end_of_LCD_Write_Instruction 7D74  
