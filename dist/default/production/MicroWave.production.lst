

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 03 18:18:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  001384                     __pidataCOMRAM:
    67                           	opt callstack 0
    68                           
    69                           ;initializer for LCD_Init_Custom_Sym@F3257
    70  001384  00                 	db	0
    71  001385  00                 	db	0
    72  001386  00                 	db	0
    73  001387  00                 	db	0
    74  001388  00                 	db	0
    75  001389  F8                 	db	248
    76  00138A  F8                 	db	248
    77  00138B  00                 	db	0
    78                           
    79                           ;initializer for _lines_offset_adresses
    80  00138C  00                 	db	0
    81  00138D  40                 	db	64
    82  0000                     _PORTD	set	3971
    83  0000                     _PORTE	set	3972
    84  0000                     _TRISA	set	3986
    85  0000                     _PORTC	set	3970
    86  0000                     _PORTB	set	3969
    87  0000                     _TRISE	set	3990
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISB	set	3987
    91                           
    92                           	psect	smallconst
    93  000800                     __psmallconst:
    94                           	opt callstack 0
    95  000800  00                 	db	0
    96  000801                     STR_1:
    97  000801  48                 	db	72	;'H'
    98  000802  65                 	db	101	;'e'
    99  000803  6C                 	db	108	;'l'
   100  000804  6C                 	db	108	;'l'
   101  000805  6F                 	db	111	;'o'
   102  000806  00                 	db	0
   103                           
   104                           ; #config settings
   105  000807  00                 	db	0	; dummy byte at the end
   106  0000                     
   107                           	psect	cinit
   108  0012AA                     __pcinit:
   109                           	opt callstack 0
   110  0012AA                     start_initialization:
   111                           	opt callstack 0
   112  0012AA                     __initialization:
   113                           	opt callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (10 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  0012AA  0E84               	movlw	low __pidataCOMRAM
   118  0012AC  6EF6               	movwf	tblptrl,c
   119  0012AE  0E13               	movlw	high __pidataCOMRAM
   120  0012B0  6EF7               	movwf	tblptrh,c
   121  0012B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  0012B4  6EF8               	movwf	tblptru,c
   123  0012B6  EE00  F029         	lfsr	0,__pdataCOMRAM
   124  0012BA  EE10 F00A          	lfsr	1,10
   125  0012BE                     copy_data0:
   126  0012BE  0009               	tblrd		*+
   127  0012C0  CFF5 FFEE          	movff	tablat,postinc0
   128  0012C4  50E5               	movf	postdec1,w,c
   129  0012C6  50E1               	movf	fsr1l,w,c
   130  0012C8  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to BANK1 (80 bytes)
   133  0012CA  EE01  F000         	lfsr	0,__pbssBANK1
   134  0012CE  0E50               	movlw	80
   135  0012D0                     clear_0:
   136  0012D0  6AEE               	clrf	postinc0,c
   137  0012D2  06E8               	decf	wreg,f,c
   138  0012D4  E1FD               	bnz	clear_0
   139                           
   140                           ; Clear objects allocated to BANK0 (84 bytes)
   141  0012D6  EE00  F060         	lfsr	0,__pbssBANK0
   142  0012DA  0E54               	movlw	84
   143  0012DC                     clear_1:
   144  0012DC  6AEE               	clrf	postinc0,c
   145  0012DE  06E8               	decf	wreg,f,c
   146  0012E0  E1FD               	bnz	clear_1
   147                           
   148                           ; Clear objects allocated to COMRAM (18 bytes)
   149  0012E2  EE00  F017         	lfsr	0,__pbssCOMRAM
   150  0012E6  0E12               	movlw	18
   151  0012E8                     clear_2:
   152  0012E8  6AEE               	clrf	postinc0,c
   153  0012EA  06E8               	decf	wreg,f,c
   154  0012EC  E1FD               	bnz	clear_2
   155  0012EE                     end_of_initialization:
   156                           	opt callstack 0
   157  0012EE                     __end_of__initialization:
   158                           	opt callstack 0
   159  0012EE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   160  0012F0  6EF8               	movwf	tblptru,c
   161  0012F2  0E08               	movlw	high __Lsmallconst
   162  0012F4  6EF7               	movwf	tblptrh,c
   163  0012F6  0100               	movlb	0
   164  0012F8  EFA7  F008         	goto	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMRAM
   167  000017                     __pbssCOMRAM:
   168                           	opt callstack 0
   169  000017                     _DOArray:
   170                           	opt callstack 0
   171  000017                     	ds	15
   172  000026                     _tick_counter:
   173                           	opt callstack 0
   174  000026                     	ds	2
   175  000028                     _line_counter:
   176                           	opt callstack 0
   177  000028                     	ds	1
   178                           
   179                           	psect	dataCOMRAM
   180  000029                     __pdataCOMRAM:
   181                           	opt callstack 0
   182  000029                     LCD_Init_Custom_Sym@F3257:
   183                           	opt callstack 0
   184  000029                     	ds	8
   185  000031                     _lines_offset_adresses:
   186                           	opt callstack 0
   187  000031                     	ds	2
   188                           
   189                           	psect	bssBANK0
   190  000060                     __pbssBANK0:
   191                           	opt callstack 0
   192  000060                     _update_flag:
   193                           	opt callstack 0
   194  000060                     	ds	84
   195                           
   196                           	psect	bssBANK1
   197  000100                     __pbssBANK1:
   198                           	opt callstack 0
   199  000100                     _LCD_Data_Buffer:
   200                           	opt callstack 0
   201  000100                     	ds	80
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	opt callstack 0
   206  000001                     ?___awdiv:
   207                           	opt callstack 0
   208  000001                     LCD_Data_Out@byte:
   209                           	opt callstack 0
   210  000001                     GPIO_Init_Pin@DirRegAddress:
   211                           	opt callstack 0
   212  000001                     GPIO_Init_Nibble@DirRegAddress:
   213                           	opt callstack 0
   214  000001                     ___awdiv@dividend:
   215                           	opt callstack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218  000001                     	ds	1
   219  000002                     LCD_Write_Symbol@sym:
   220                           	opt callstack 0
   221  000002                     LCD_Write_Instruction@inst:
   222                           	opt callstack 0
   223                           
   224                           ; 1 bytes @ 0x1
   225  000002                     	ds	1
   226  000003                     GPIO_Init_Pin@pin_number:
   227                           	opt callstack 0
   228  000003                     GPIO_Init_Nibble@nibble_num:
   229                           	opt callstack 0
   230  000003                     LCD_SetDDRAM@ADDRESS:
   231                           	opt callstack 0
   232  000003                     LCD_SetCGRAM@ADDRESS:
   233                           	opt callstack 0
   234  000003                     ___awdiv@divisor:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x2
   238  000003                     	ds	1
   239  000004                     ??_LCD_Update:
   240  000004                     GPIO_Init_Pin@dir:
   241                           	opt callstack 0
   242  000004                     GPIO_Init_Nibble@dir:
   243                           	opt callstack 0
   244  000004                     LCD_Init_Custom_Sym@data:
   245                           	opt callstack 0
   246                           
   247                           ; 8 bytes @ 0x3
   248  000004                     	ds	1
   249  000005                     ??_GPIO_Init_Pin:
   250  000005                     ??_GPIO_Init_Nibble:
   251  000005                     ___awdiv@counter:
   252                           	opt callstack 0
   253                           
   254                           ; 1 bytes @ 0x4
   255  000005                     	ds	1
   256  000006                     ___awdiv@sign:
   257                           	opt callstack 0
   258                           
   259                           ; 1 bytes @ 0x5
   260  000006                     	ds	1
   261  000007                     ___awdiv@quotient:
   262                           	opt callstack 0
   263                           
   264                           ; 2 bytes @ 0x6
   265  000007                     	ds	2
   266  000009                     LCD_SetSymbol@row:
   267                           	opt callstack 0
   268  000009                     _GPIO_Init_Nibble$44:
   269                           	opt callstack 0
   270  000009                     LCD_SetString@sym:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x8
   274  000009                     	ds	1
   275  00000A                     LCD_SetSymbol@column:
   276                           	opt callstack 0
   277                           
   278                           ; 1 bytes @ 0x9
   279  00000A                     	ds	1
   280  00000B                     ??_LCD_SetSymbol:
   281  00000B                     LCD_SetString@row:
   282                           	opt callstack 0
   283                           
   284                           ; 1 bytes @ 0xA
   285  00000B                     	ds	1
   286  00000C                     LCD_SetString@column:
   287                           	opt callstack 0
   288  00000C                     LCD_Init_Custom_Sym@i:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0xB
   292  00000C                     	ds	1
   293  00000D                     LCD_SetString@number:
   294                           	opt callstack 0
   295  00000D                     LCD_Update@address:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0xC
   299  00000D                     	ds	1
   300  00000E                     ??_LCD_Init:
   301  00000E                     ??_LCD_SetString:
   302  00000E                     LCD_Update@updated:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0xD
   306  00000E                     	ds	1
   307  00000F                     LCD_Update@i:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0xE
   311  00000F                     	ds	1
   312  000010                     LCD_SetSymbol@sym:
   313                           	opt callstack 0
   314  000010                     LCD_Update@j:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0xF
   318  000010                     	ds	3
   319  000013                     LCD_SetString@i:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x12
   323  000013                     	ds	2
   324  000015                     ??_main:
   325                           
   326                           ; 1 bytes @ 0x14
   327  000015                     	ds	2
   328                           
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 85 in file "Microwave.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  i               2    0        int 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         2       0       0       0       0       0       0       0       0
   350 ;;      Temps:          2       0       0       0       0       0       0       0       0
   351 ;;      Totals:         4       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        4 bytes
   353 ;; Hardware stack levels required when called:    5
   354 ;; This function calls:
   355 ;;		_LCD_Init
   356 ;;		_LCD_SetString
   357 ;;		_LCD_SetSymbol
   358 ;;		_LCD_Update
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text0
   365  00114E                     __ptext0:
   366                           	opt callstack 0
   367  00114E                     _main:
   368                           	opt callstack 26
   369  00114E                     
   370                           ;Microwave.c: 88:     LCD_Init();
   371  00114E  EC6A  F007         	call	_LCD_Init	;wreg free
   372  001152                     
   373                           ;Microwave.c: 89:     LCD_SetSymbol(LCD_MOTOR2,0,3);
   374  001152  0E00               	movlw	0
   375  001154  6E09               	movwf	LCD_SetSymbol@row^0,c
   376  001156  0E03               	movlw	3
   377  001158  6E0A               	movwf	LCD_SetSymbol@column^0,c
   378  00115A  0E01               	movlw	1
   379  00115C  ECFE  F008         	call	_LCD_SetSymbol
   380  001160                     
   381                           ;Microwave.c: 91:     LCD_SetSymbol(LCD_MOTOR1,0,2);
   382  001160  0E00               	movlw	0
   383  001162  6E09               	movwf	LCD_SetSymbol@row^0,c
   384  001164  0E02               	movlw	2
   385  001166  6E0A               	movwf	LCD_SetSymbol@column^0,c
   386  001168  0E00               	movlw	0
   387  00116A  ECFE  F008         	call	_LCD_SetSymbol
   388  00116E                     
   389                           ;Microwave.c: 92:     LCD_SetSymbol(LCD_HEATER,0,4);
   390  00116E  0E00               	movlw	0
   391  001170  6E09               	movwf	LCD_SetSymbol@row^0,c
   392  001172  0E04               	movlw	4
   393  001174  6E0A               	movwf	LCD_SetSymbol@column^0,c
   394  001176  0E05               	movlw	5
   395  001178  ECFE  F008         	call	_LCD_SetSymbol
   396  00117C                     
   397                           ;Microwave.c: 93:     LCD_SetSymbol(LCD_MOTOR2,0,5);
   398  00117C  0E00               	movlw	0
   399  00117E  6E09               	movwf	LCD_SetSymbol@row^0,c
   400  001180  0E05               	movlw	5
   401  001182  6E0A               	movwf	LCD_SetSymbol@column^0,c
   402  001184  0E01               	movlw	1
   403  001186  ECFE  F008         	call	_LCD_SetSymbol
   404  00118A                     
   405                           ;Microwave.c: 94:     LCD_SetSymbol(LCD_MOTOR4,0,6);
   406  00118A  0E00               	movlw	0
   407  00118C  6E09               	movwf	LCD_SetSymbol@row^0,c
   408  00118E  0E06               	movlw	6
   409  001190  6E0A               	movwf	LCD_SetSymbol@column^0,c
   410  001192  0E03               	movlw	3
   411  001194  ECFE  F008         	call	_LCD_SetSymbol
   412  001198                     
   413                           ;Microwave.c: 95:     LCD_SetSymbol(LCD_LAMP,0,7);
   414  001198  0E00               	movlw	0
   415  00119A  6E09               	movwf	LCD_SetSymbol@row^0,c
   416  00119C  0E07               	movlw	7
   417  00119E  6E0A               	movwf	LCD_SetSymbol@column^0,c
   418  0011A0  0E04               	movlw	4
   419  0011A2  ECFE  F008         	call	_LCD_SetSymbol
   420  0011A6                     
   421                           ;Microwave.c: 96:     LCD_SetSymbol(LCD_DOOR,0,9);
   422  0011A6  0E00               	movlw	0
   423  0011A8  6E09               	movwf	LCD_SetSymbol@row^0,c
   424  0011AA  0E09               	movlw	9
   425  0011AC  6E0A               	movwf	LCD_SetSymbol@column^0,c
   426  0011AE  0E06               	movlw	6
   427  0011B0  ECFE  F008         	call	_LCD_SetSymbol
   428  0011B4                     
   429                           ;Microwave.c: 97:     LCD_SetString("Hello",0,10,5);
   430  0011B4  0E01               	movlw	low STR_1
   431  0011B6  6E09               	movwf	LCD_SetString@sym^0,c
   432  0011B8  0E08               	movlw	high STR_1
   433  0011BA  6E0A               	movwf	(LCD_SetString@sym+1)^0,c
   434  0011BC  0E00               	movlw	0
   435  0011BE  6E0B               	movwf	LCD_SetString@row^0,c
   436  0011C0  0E0A               	movlw	10
   437  0011C2  6E0C               	movwf	LCD_SetString@column^0,c
   438  0011C4  0E05               	movlw	5
   439  0011C6  6E0D               	movwf	LCD_SetString@number^0,c
   440  0011C8  ECE7  F006         	call	_LCD_SetString	;wreg free
   441  0011CC                     
   442                           ;Microwave.c: 100:     LCD_SetSymbol('m',1,4);
   443  0011CC  0E01               	movlw	1
   444  0011CE  6E09               	movwf	LCD_SetSymbol@row^0,c
   445  0011D0  0E04               	movlw	4
   446  0011D2  6E0A               	movwf	LCD_SetSymbol@column^0,c
   447  0011D4  0E6D               	movlw	109
   448  0011D6  ECFE  F008         	call	_LCD_SetSymbol
   449  0011DA                     l1664:
   450                           
   451                           ;Microwave.c: 103:     {;Microwave.c: 104:         _delay((unsigned long)((500)*(8000000
      +                          /4000.0)));
   452  0011DA  0E06               	movlw	6
   453  0011DC  6E16               	movwf	(??_main+1)^0,c
   454  0011DE  0E13               	movlw	19
   455  0011E0  6E15               	movwf	??_main^0,c
   456  0011E2  0EAE               	movlw	174
   457  0011E4                     u1057:
   458  0011E4  2EE8               	decfsz	wreg,f,c
   459  0011E6  D7FE               	bra	u1057
   460  0011E8  2E15               	decfsz	??_main^0,f,c
   461  0011EA  D7FC               	bra	u1057
   462  0011EC  2E16               	decfsz	(??_main+1)^0,f,c
   463  0011EE  D7FA               	bra	u1057
   464  0011F0                     
   465                           ;Microwave.c: 105:         LCD_Update();
   466  0011F0  EC47  F005         	call	_LCD_Update	;wreg free
   467  0011F4  EFED  F008         	goto	l1664
   468  0011F8  EF00  F000         	goto	start
   469  0011FC                     __end_of_main:
   470                           	opt callstack 0
   471                           
   472 ;; *************** function _LCD_Update *****************
   473 ;; Defined at:
   474 ;;		line 313 in file "LCD.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  address         1   12[COMRAM] unsigned char 
   479 ;;  j               1   15[COMRAM] unsigned char 
   480 ;;  i               1   14[COMRAM] unsigned char 
   481 ;;  updated         1   13[COMRAM] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         4       0       0       0       0       0       0       0       0
   493 ;;      Temps:          9       0       0       0       0       0       0       0       0
   494 ;;      Totals:        13       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:       13 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    3
   498 ;; This function calls:
   499 ;;		_LCD_SetDDRAM
   500 ;;		_LCD_Write_Symbol
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507  000A8E                     __ptext1:
   508                           	opt callstack 0
   509  000A8E                     _LCD_Update:
   510                           	opt callstack 27
   511  000A8E                     
   512                           ;LCD.c: 315:     uint8 j,i,updated = 0;
   513  000A8E  0E00               	movlw	0
   514  000A90  6E0E               	movwf	LCD_Update@updated^0,c
   515  000A92                     
   516                           ;LCD.c: 316:     tick_counter += (5);
   517  000A92  0E05               	movlw	5
   518  000A94  2626               	addwf	_tick_counter^0,f,c
   519  000A96  0E00               	movlw	0
   520  000A98  2227               	addwfc	(_tick_counter+1)^0,f,c
   521  000A9A                     
   522                           ;LCD.c: 317:     if(tick_counter <= (5))return;
   523  000A9A  BE27               	btfsc	(_tick_counter+1)^0,7,c
   524  000A9C  EF5B  F005         	goto	u950
   525  000AA0  5027               	movf	(_tick_counter+1)^0,w,c
   526  000AA2  E107               	bnz	u951
   527  000AA4  0E06               	movlw	6
   528  000AA6  5C26               	subwf	_tick_counter^0,w,c
   529  000AA8  B0D8               	btfsc	status,0,c
   530  000AAA  EF59  F005         	goto	u951
   531  000AAE  EF5B  F005         	goto	u950
   532  000AB2                     u951:
   533  000AB2  EF5D  F005         	goto	l1598
   534  000AB6                     u950:
   535  000AB6  EF5A  F006         	goto	l111
   536  000ABA                     l1598:
   537                           
   538                           ;LCD.c: 319:     tick_counter = 0;
   539  000ABA  0E00               	movlw	0
   540  000ABC  6E27               	movwf	(_tick_counter+1)^0,c
   541  000ABE  0E00               	movlw	0
   542  000AC0  6E26               	movwf	_tick_counter^0,c
   543                           
   544                           ;LCD.c: 321:     for(j = 0;j<(((40)/16)+1);j++)
   545  000AC2  0E00               	movlw	0
   546  000AC4  6E10               	movwf	LCD_Update@j^0,c
   547  000AC6                     l1604:
   548                           
   549                           ;LCD.c: 322:     {;LCD.c: 323:         if(update_flag[line_counter][j]!=0)
   550  000AC6  5010               	movf	LCD_Update@j^0,w,c
   551  000AC8  0D02               	mullw	2
   552  000ACA  CFF3 F004          	movff	prodl,??_LCD_Update
   553  000ACE  CFF4 F005          	movff	prodh,??_LCD_Update+1
   554  000AD2  5028               	movf	_line_counter^0,w,c
   555  000AD4  0D2A               	mullw	42
   556  000AD6  0E60               	movlw	low _update_flag
   557  000AD8  6E06               	movwf	(??_LCD_Update+2)^0,c
   558  000ADA  0E00               	movlw	high _update_flag
   559  000ADC  6E07               	movwf	(??_LCD_Update+3)^0,c
   560  000ADE  50F3               	movf	243,w,c
   561  000AE0  2606               	addwf	(??_LCD_Update+2)^0,f,c
   562  000AE2  50F4               	movf	244,w,c
   563  000AE4  2207               	addwfc	(??_LCD_Update+3)^0,f,c
   564  000AE6  5004               	movf	??_LCD_Update^0,w,c
   565  000AE8  2406               	addwf	(??_LCD_Update+2)^0,w,c
   566  000AEA  6ED9               	movwf	fsr2l,c
   567  000AEC  5005               	movf	(??_LCD_Update+1)^0,w,c
   568  000AEE  2007               	addwfc	(??_LCD_Update+3)^0,w,c
   569  000AF0  6EDA               	movwf	fsr2h,c
   570  000AF2  50DE               	movf	postinc2,w,c
   571  000AF4  10DE               	iorwf	postinc2,w,c
   572  000AF6  B4D8               	btfsc	status,2,c
   573  000AF8  EF80  F005         	goto	u961
   574  000AFC  EF82  F005         	goto	u960
   575  000B00                     u961:
   576  000B00  EF45  F006         	goto	l1632
   577  000B04                     u960:
   578  000B04                     
   579                           ;LCD.c: 324:         {;LCD.c: 326:             for(i=0;i<16;i++)
   580  000B04  0E00               	movlw	0
   581  000B06  6E0F               	movwf	LCD_Update@i^0,c
   582  000B08                     l1612:
   583                           
   584                           ;LCD.c: 327:             {;LCD.c: 329:                 if((update_flag[line_counter][j])
      +                          &(0x0001<<i))
   585  000B08  5010               	movf	LCD_Update@j^0,w,c
   586  000B0A  0D02               	mullw	2
   587  000B0C  CFF3 F004          	movff	prodl,??_LCD_Update
   588  000B10  CFF4 F005          	movff	prodh,??_LCD_Update+1
   589  000B14  5028               	movf	_line_counter^0,w,c
   590  000B16  0D2A               	mullw	42
   591  000B18  0E60               	movlw	low _update_flag
   592  000B1A  6E06               	movwf	(??_LCD_Update+2)^0,c
   593  000B1C  0E00               	movlw	high _update_flag
   594  000B1E  6E07               	movwf	(??_LCD_Update+3)^0,c
   595  000B20  50F3               	movf	243,w,c
   596  000B22  2606               	addwf	(??_LCD_Update+2)^0,f,c
   597  000B24  50F4               	movf	244,w,c
   598  000B26  2207               	addwfc	(??_LCD_Update+3)^0,f,c
   599  000B28  5004               	movf	??_LCD_Update^0,w,c
   600  000B2A  2406               	addwf	(??_LCD_Update+2)^0,w,c
   601  000B2C  6ED9               	movwf	fsr2l,c
   602  000B2E  5005               	movf	(??_LCD_Update+1)^0,w,c
   603  000B30  2007               	addwfc	(??_LCD_Update+3)^0,w,c
   604  000B32  6EDA               	movwf	fsr2h,c
   605  000B34  CFDE F008          	movff	postinc2,??_LCD_Update+4
   606  000B38  CFDD F009          	movff	postdec2,??_LCD_Update+5
   607  000B3C  C00F  F00A         	movff	LCD_Update@i,??_LCD_Update+6
   608  000B40  0E01               	movlw	1
   609  000B42  6E0B               	movwf	(??_LCD_Update+7)^0,c
   610  000B44  0E00               	movlw	0
   611  000B46  6E0C               	movwf	(??_LCD_Update+8)^0,c
   612  000B48  2A0A               	incf	(??_LCD_Update+6)^0,f,c
   613  000B4A  EFAA  F005         	goto	u974
   614  000B4E                     u975:
   615  000B4E  90D8               	bcf	status,0,c
   616  000B50  360B               	rlcf	(??_LCD_Update+7)^0,f,c
   617  000B52  360C               	rlcf	(??_LCD_Update+8)^0,f,c
   618  000B54                     u974:
   619  000B54  2E0A               	decfsz	(??_LCD_Update+6)^0,f,c
   620  000B56  EFA7  F005         	goto	u975
   621  000B5A  5008               	movf	(??_LCD_Update+4)^0,w,c
   622  000B5C  160B               	andwf	(??_LCD_Update+7)^0,f,c
   623  000B5E  5009               	movf	(??_LCD_Update+5)^0,w,c
   624  000B60  160C               	andwf	(??_LCD_Update+8)^0,f,c
   625  000B62  500B               	movf	(??_LCD_Update+7)^0,w,c
   626  000B64  100C               	iorwf	(??_LCD_Update+8)^0,w,c
   627  000B66  B4D8               	btfsc	status,2,c
   628  000B68  EFB8  F005         	goto	u981
   629  000B6C  EFBA  F005         	goto	u980
   630  000B70                     u981:
   631  000B70  EF3C  F006         	goto	l1628
   632  000B74                     u980:
   633  000B74                     
   634                           ;LCD.c: 330:                 {;LCD.c: 332:                     uint8 address = lines_off
      +                          set_adresses[line_counter] + ((j*16)+i);
   635  000B74  0E31               	movlw	low _lines_offset_adresses
   636  000B76  2428               	addwf	_line_counter^0,w,c
   637  000B78  6ED9               	movwf	fsr2l,c
   638  000B7A  6ADA               	clrf	fsr2h,c
   639  000B7C  0E00               	movlw	high _lines_offset_adresses
   640  000B7E  22DA               	addwfc	fsr2h,f,c
   641  000B80  50DF               	movf	indf2,w,c
   642  000B82  6E04               	movwf	??_LCD_Update^0,c
   643  000B84  5010               	movf	LCD_Update@j^0,w,c
   644  000B86  0D10               	mullw	16
   645  000B88  50F3               	movf	243,w,c
   646  000B8A  2404               	addwf	??_LCD_Update^0,w,c
   647  000B8C  240F               	addwf	LCD_Update@i^0,w,c
   648  000B8E  6E0D               	movwf	LCD_Update@address^0,c
   649  000B90                     
   650                           ;LCD.c: 334:                     LCD_SetDDRAM(address);
   651  000B90  500D               	movf	LCD_Update@address^0,w,c
   652  000B92  ECBB  F009         	call	_LCD_SetDDRAM
   653  000B96                     
   654                           ;LCD.c: 336:                     LCD_Write_Symbol(LCD_Data_Buffer[line_counter][((j*16)+
      +                          i)]);
   655  000B96  5028               	movf	_line_counter^0,w,c
   656  000B98  0D28               	mullw	40
   657  000B9A  0E00               	movlw	low _LCD_Data_Buffer
   658  000B9C  6E04               	movwf	??_LCD_Update^0,c
   659  000B9E  0E01               	movlw	high _LCD_Data_Buffer
   660  000BA0  6E05               	movwf	(??_LCD_Update+1)^0,c
   661  000BA2  50F3               	movf	243,w,c
   662  000BA4  2604               	addwf	??_LCD_Update^0,f,c
   663  000BA6  50F4               	movf	244,w,c
   664  000BA8  2205               	addwfc	(??_LCD_Update+1)^0,f,c
   665  000BAA  5010               	movf	LCD_Update@j^0,w,c
   666  000BAC  0D10               	mullw	16
   667  000BAE  50F3               	movf	243,w,c
   668  000BB0  2604               	addwf	??_LCD_Update^0,f,c
   669  000BB2  50F4               	movf	244,w,c
   670  000BB4  2205               	addwfc	(??_LCD_Update+1)^0,f,c
   671  000BB6  500F               	movf	LCD_Update@i^0,w,c
   672  000BB8  2404               	addwf	??_LCD_Update^0,w,c
   673  000BBA  6ED9               	movwf	fsr2l,c
   674  000BBC  0E00               	movlw	0
   675  000BBE  2005               	addwfc	(??_LCD_Update+1)^0,w,c
   676  000BC0  6EDA               	movwf	fsr2h,c
   677  000BC2  50DF               	movf	indf2,w,c
   678  000BC4  EC94  F009         	call	_LCD_Write_Symbol
   679  000BC8                     
   680                           ;LCD.c: 338:                     update_flag[line_counter][j] &= ~(1<<i);
   681  000BC8  C00F  F004         	movff	LCD_Update@i,??_LCD_Update
   682  000BCC  0E01               	movlw	1
   683  000BCE  6E05               	movwf	(??_LCD_Update+1)^0,c
   684  000BD0  0E00               	movlw	0
   685  000BD2  6E06               	movwf	(??_LCD_Update+2)^0,c
   686  000BD4  2A04               	incf	??_LCD_Update^0,f,c
   687  000BD6  EFF0  F005         	goto	u994
   688  000BDA                     u995:
   689  000BDA  90D8               	bcf	status,0,c
   690  000BDC  3605               	rlcf	(??_LCD_Update+1)^0,f,c
   691  000BDE  3606               	rlcf	(??_LCD_Update+2)^0,f,c
   692  000BE0                     u994:
   693  000BE0  2E04               	decfsz	??_LCD_Update^0,f,c
   694  000BE2  EFED  F005         	goto	u995
   695  000BE6  1C05               	comf	(??_LCD_Update+1)^0,w,c
   696  000BE8  6E07               	movwf	(??_LCD_Update+3)^0,c
   697  000BEA  1C06               	comf	(??_LCD_Update+2)^0,w,c
   698  000BEC  6E08               	movwf	(??_LCD_Update+4)^0,c
   699  000BEE  5010               	movf	LCD_Update@j^0,w,c
   700  000BF0  0D02               	mullw	2
   701  000BF2  CFF3 F009          	movff	prodl,??_LCD_Update+5
   702  000BF6  CFF4 F00A          	movff	prodh,??_LCD_Update+6
   703  000BFA  5028               	movf	_line_counter^0,w,c
   704  000BFC  0D2A               	mullw	42
   705  000BFE  0E60               	movlw	low _update_flag
   706  000C00  6E0B               	movwf	(??_LCD_Update+7)^0,c
   707  000C02  0E00               	movlw	high _update_flag
   708  000C04  6E0C               	movwf	(??_LCD_Update+8)^0,c
   709  000C06  50F3               	movf	243,w,c
   710  000C08  260B               	addwf	(??_LCD_Update+7)^0,f,c
   711  000C0A  50F4               	movf	244,w,c
   712  000C0C  220C               	addwfc	(??_LCD_Update+8)^0,f,c
   713  000C0E  5009               	movf	(??_LCD_Update+5)^0,w,c
   714  000C10  240B               	addwf	(??_LCD_Update+7)^0,w,c
   715  000C12  6ED9               	movwf	fsr2l,c
   716  000C14  500A               	movf	(??_LCD_Update+6)^0,w,c
   717  000C16  200C               	addwfc	(??_LCD_Update+8)^0,w,c
   718  000C18  6EDA               	movwf	fsr2h,c
   719  000C1A  5007               	movf	(??_LCD_Update+3)^0,w,c
   720  000C1C  16DE               	andwf	postinc2,f,c
   721  000C1E  5008               	movf	(??_LCD_Update+4)^0,w,c
   722  000C20  16DD               	andwf	postdec2,f,c
   723  000C22                     
   724                           ;LCD.c: 340:                     updated++;
   725  000C22  2A0E               	incf	LCD_Update@updated^0,f,c
   726  000C24                     
   727                           ;LCD.c: 341:                     if(updated == (5) || update_flag[line_counter][j]==0 )b
      +                          reak;
   728  000C24  0E05               	movlw	5
   729  000C26  180E               	xorwf	LCD_Update@updated^0,w,c
   730  000C28  B4D8               	btfsc	status,2,c
   731  000C2A  EF19  F006         	goto	u1001
   732  000C2E  EF1B  F006         	goto	u1000
   733  000C32                     u1001:
   734  000C32  EF45  F006         	goto	l1632
   735  000C36                     u1000:
   736  000C36  5010               	movf	LCD_Update@j^0,w,c
   737  000C38  0D02               	mullw	2
   738  000C3A  CFF3 F004          	movff	prodl,??_LCD_Update
   739  000C3E  CFF4 F005          	movff	prodh,??_LCD_Update+1
   740  000C42  5028               	movf	_line_counter^0,w,c
   741  000C44  0D2A               	mullw	42
   742  000C46  0E60               	movlw	low _update_flag
   743  000C48  6E06               	movwf	(??_LCD_Update+2)^0,c
   744  000C4A  0E00               	movlw	high _update_flag
   745  000C4C  6E07               	movwf	(??_LCD_Update+3)^0,c
   746  000C4E  50F3               	movf	243,w,c
   747  000C50  2606               	addwf	(??_LCD_Update+2)^0,f,c
   748  000C52  50F4               	movf	244,w,c
   749  000C54  2207               	addwfc	(??_LCD_Update+3)^0,f,c
   750  000C56  5004               	movf	??_LCD_Update^0,w,c
   751  000C58  2406               	addwf	(??_LCD_Update+2)^0,w,c
   752  000C5A  6ED9               	movwf	fsr2l,c
   753  000C5C  5005               	movf	(??_LCD_Update+1)^0,w,c
   754  000C5E  2007               	addwfc	(??_LCD_Update+3)^0,w,c
   755  000C60  6EDA               	movwf	fsr2h,c
   756  000C62  50DE               	movf	postinc2,w,c
   757  000C64  10DE               	iorwf	postinc2,w,c
   758  000C66  A4D8               	btfss	status,2,c
   759  000C68  EF38  F006         	goto	u1011
   760  000C6C  EF3A  F006         	goto	u1010
   761  000C70                     u1011:
   762  000C70  EF3C  F006         	goto	l1628
   763  000C74                     u1010:
   764  000C74  EF45  F006         	goto	l1632
   765  000C78                     l1628:
   766                           
   767                           ;LCD.c: 343:             }
   768  000C78  2A0F               	incf	LCD_Update@i^0,f,c
   769  000C7A  0E0F               	movlw	15
   770  000C7C  640F               	cpfsgt	LCD_Update@i^0,c
   771  000C7E  EF43  F006         	goto	u1021
   772  000C82  EF45  F006         	goto	u1020
   773  000C86                     u1021:
   774  000C86  EF84  F005         	goto	l1612
   775  000C8A                     u1020:
   776  000C8A                     l1632:
   777                           
   778                           ;LCD.c: 345:     }
   779  000C8A  2A10               	incf	LCD_Update@j^0,f,c
   780  000C8C  0E02               	movlw	2
   781  000C8E  6410               	cpfsgt	LCD_Update@j^0,c
   782  000C90  EF4C  F006         	goto	u1031
   783  000C94  EF4E  F006         	goto	u1030
   784  000C98                     u1031:
   785  000C98  EF63  F005         	goto	l1604
   786  000C9C                     u1030:
   787  000C9C                     
   788                           ;LCD.c: 346:     line_counter++;
   789  000C9C  2A28               	incf	_line_counter^0,f,c
   790  000C9E                     
   791                           ;LCD.c: 347:     if(line_counter == (2))line_counter = 0;
   792  000C9E  0E02               	movlw	2
   793  000CA0  1828               	xorwf	_line_counter^0,w,c
   794  000CA2  A4D8               	btfss	status,2,c
   795  000CA4  EF56  F006         	goto	u1041
   796  000CA8  EF58  F006         	goto	u1040
   797  000CAC                     u1041:
   798  000CAC  EF5A  F006         	goto	l111
   799  000CB0                     u1040:
   800  000CB0  0E00               	movlw	0
   801  000CB2  6E28               	movwf	_line_counter^0,c
   802  000CB4                     l111:
   803  000CB4  0012               	return		;funcret
   804  000CB6                     __end_of_LCD_Update:
   805                           	opt callstack 0
   806                           
   807 ;; *************** function _LCD_SetDDRAM *****************
   808 ;; Defined at:
   809 ;;		line 299 in file "LCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  ADDRESS         1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  ADDRESS         1    2[COMRAM] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   823 ;;      Params:         0       0       0       0       0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0
   826 ;;      Totals:         1       0       0       0       0       0       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    2
   830 ;; This function calls:
   831 ;;		_LCD_Write_Instruction
   832 ;; This function is called by:
   833 ;;		_LCD_Update
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838  001376                     __ptext2:
   839                           	opt callstack 0
   840  001376                     _LCD_SetDDRAM:
   841                           	opt callstack 27
   842                           
   843                           ;incstack = 0
   844                           ;LCD_SetDDRAM@ADDRESS stored from wreg
   845  001376  6E03               	movwf	LCD_SetDDRAM@ADDRESS^0,c
   846  001378                     
   847                           ;LCD.c: 299: static void LCD_SetDDRAM(uint8 ADDRESS);LCD.c: 300: {;LCD.c: 301:     ADDRE
      +                          SS &= 0x7f;
   848  001378  9E03               	bcf	LCD_SetDDRAM@ADDRESS^0,7,c
   849                           
   850                           ;LCD.c: 302:     ADDRESS |= 0x80;
   851  00137A  8E03               	bsf	LCD_SetDDRAM@ADDRESS^0,7,c
   852  00137C                     
   853                           ;LCD.c: 303:     LCD_Write_Instruction(ADDRESS);
   854  00137C  5003               	movf	LCD_SetDDRAM@ADDRESS^0,w,c
   855  00137E  ECA4  F009         	call	_LCD_Write_Instruction
   856  001382  0012               	return		;funcret
   857  001384                     __end_of_LCD_SetDDRAM:
   858                           	opt callstack 0
   859                           
   860 ;; *************** function _LCD_SetSymbol *****************
   861 ;; Defined at:
   862 ;;		line 265 in file "LCD.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  sym             1    wreg     unsigned char 
   865 ;;  row             1    8[COMRAM] unsigned char 
   866 ;;  column          1    9[COMRAM] unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  sym             1   15[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         2       0       0       0       0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0       0       0       0       0
   880 ;;      Temps:          5       0       0       0       0       0       0       0       0
   881 ;;      Totals:         8       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        8 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		___awdiv
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893  0011FC                     __ptext3:
   894                           	opt callstack 0
   895  0011FC                     _LCD_SetSymbol:
   896                           	opt callstack 29
   897                           
   898                           ;incstack = 0
   899                           ;LCD_SetSymbol@sym stored from wreg
   900  0011FC  6E10               	movwf	LCD_SetSymbol@sym^0,c
   901  0011FE                     
   902                           ;LCD.c: 265: void LCD_SetSymbol(uint8 sym,uint8 row,uint8 column);LCD.c: 266: {;LCD.c: 2
      +                          67:     if(row >= (2) && column >= (40))return;
   903  0011FE  0E01               	movlw	1
   904  001200  6409               	cpfsgt	LCD_SetSymbol@row^0,c
   905  001202  EF05  F009         	goto	u881
   906  001206  EF07  F009         	goto	u880
   907  00120A                     u881:
   908  00120A  EF11  F009         	goto	l1570
   909  00120E                     u880:
   910  00120E  0E27               	movlw	39
   911  001210  640A               	cpfsgt	LCD_SetSymbol@column^0,c
   912  001212  EF0D  F009         	goto	u891
   913  001216  EF0F  F009         	goto	u890
   914  00121A                     u891:
   915  00121A  EF11  F009         	goto	l1570
   916  00121E                     u890:
   917  00121E  EF54  F009         	goto	l97
   918  001222                     l1570:
   919                           
   920                           ;LCD.c: 268:     LCD_Data_Buffer[row][column] = sym;
   921  001222  5009               	movf	LCD_SetSymbol@row^0,w,c
   922  001224  0D28               	mullw	40
   923  001226  0E00               	movlw	low _LCD_Data_Buffer
   924  001228  6E0B               	movwf	??_LCD_SetSymbol^0,c
   925  00122A  0E01               	movlw	high _LCD_Data_Buffer
   926  00122C  6E0C               	movwf	(??_LCD_SetSymbol+1)^0,c
   927  00122E  50F3               	movf	243,w,c
   928  001230  260B               	addwf	??_LCD_SetSymbol^0,f,c
   929  001232  50F4               	movf	244,w,c
   930  001234  220C               	addwfc	(??_LCD_SetSymbol+1)^0,f,c
   931  001236  500A               	movf	LCD_SetSymbol@column^0,w,c
   932  001238  240B               	addwf	??_LCD_SetSymbol^0,w,c
   933  00123A  6ED9               	movwf	fsr2l,c
   934  00123C  0E00               	movlw	0
   935  00123E  200C               	addwfc	(??_LCD_SetSymbol+1)^0,w,c
   936  001240  6EDA               	movwf	fsr2h,c
   937  001242  C010  FFDF         	movff	LCD_SetSymbol@sym,indf2
   938  001246                     
   939                           ;LCD.c: 269:     update_flag[row][column/16] |= (0x0001<<(column%16));
   940  001246  C00A  F00B         	movff	LCD_SetSymbol@column,??_LCD_SetSymbol
   941  00124A  0E0F               	movlw	15
   942  00124C  160B               	andwf	??_LCD_SetSymbol^0,f,c
   943  00124E  0E01               	movlw	1
   944  001250  6E0C               	movwf	(??_LCD_SetSymbol+1)^0,c
   945  001252  0E00               	movlw	0
   946  001254  6E0D               	movwf	(??_LCD_SetSymbol+2)^0,c
   947  001256  2A0B               	incf	??_LCD_SetSymbol^0,f,c
   948  001258  EF31  F009         	goto	u904
   949  00125C                     u905:
   950  00125C  90D8               	bcf	status,0,c
   951  00125E  360C               	rlcf	(??_LCD_SetSymbol+1)^0,f,c
   952  001260  360D               	rlcf	(??_LCD_SetSymbol+2)^0,f,c
   953  001262                     u904:
   954  001262  2E0B               	decfsz	??_LCD_SetSymbol^0,f,c
   955  001264  EF2E  F009         	goto	u905
   956  001268  C00A  F001         	movff	LCD_SetSymbol@column,___awdiv@dividend
   957  00126C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   958  00126E  0E00               	movlw	0
   959  001270  6E04               	movwf	(___awdiv@divisor+1)^0,c
   960  001272  0E10               	movlw	16
   961  001274  6E03               	movwf	___awdiv@divisor^0,c
   962  001276  EC45  F008         	call	___awdiv	;wreg free
   963  00127A  90D8               	bcf	status,0,c
   964  00127C  3601               	rlcf	?___awdiv^0,f,c
   965  00127E  3602               	rlcf	(?___awdiv+1)^0,f,c
   966  001280  5009               	movf	LCD_SetSymbol@row^0,w,c
   967  001282  0D2A               	mullw	42
   968  001284  0E60               	movlw	low _update_flag
   969  001286  6E0E               	movwf	(??_LCD_SetSymbol+3)^0,c
   970  001288  0E00               	movlw	high _update_flag
   971  00128A  6E0F               	movwf	(??_LCD_SetSymbol+4)^0,c
   972  00128C  50F3               	movf	243,w,c
   973  00128E  260E               	addwf	(??_LCD_SetSymbol+3)^0,f,c
   974  001290  50F4               	movf	244,w,c
   975  001292  220F               	addwfc	(??_LCD_SetSymbol+4)^0,f,c
   976  001294  5001               	movf	?___awdiv^0,w,c
   977  001296  240E               	addwf	(??_LCD_SetSymbol+3)^0,w,c
   978  001298  6ED9               	movwf	fsr2l,c
   979  00129A  5002               	movf	(?___awdiv+1)^0,w,c
   980  00129C  200F               	addwfc	(??_LCD_SetSymbol+4)^0,w,c
   981  00129E  6EDA               	movwf	fsr2h,c
   982  0012A0  500C               	movf	(??_LCD_SetSymbol+1)^0,w,c
   983  0012A2  12DE               	iorwf	postinc2,f,c
   984  0012A4  500D               	movf	(??_LCD_SetSymbol+2)^0,w,c
   985  0012A6  12DD               	iorwf	postdec2,f,c
   986  0012A8                     l97:
   987  0012A8  0012               	return		;funcret
   988  0012AA                     __end_of_LCD_SetSymbol:
   989                           	opt callstack 0
   990                           
   991 ;; *************** function _LCD_SetString *****************
   992 ;; Defined at:
   993 ;;		line 279 in file "LCD.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  sym             2    8[COMRAM] PTR unsigned char 
   996 ;;		 -> STR_1(6), 
   997 ;;  row             1   10[COMRAM] unsigned char 
   998 ;;  column          1   11[COMRAM] unsigned char 
   999 ;;  number          1   12[COMRAM] unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  i               2   18[COMRAM] int 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         5       0       0       0       0       0       0       0       0
  1012 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1013 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1014 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1015 ;;Total ram usage:       12 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		___awdiv
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text4
  1026  000DCE                     __ptext4:
  1027                           	opt callstack 0
  1028  000DCE                     _LCD_SetString:
  1029                           	opt callstack 29
  1030  000DCE                     
  1031                           ;LCD.c: 279: void LCD_SetString(uint8 sym[],uint8 row,uint8 column,uint8 number);LCD.c: 
      +                          280: {;LCD.c: 281:     int i;;LCD.c: 283:     if(row >= (2) && column >= (40))return;
  1032  000DCE  0E01               	movlw	1
  1033  000DD0  640B               	cpfsgt	LCD_SetString@row^0,c
  1034  000DD2  EFED  F006         	goto	u911
  1035  000DD6  EFEF  F006         	goto	u910
  1036  000DDA                     u911:
  1037  000DDA  EFF9  F006         	goto	l1580
  1038  000DDE                     u910:
  1039  000DDE  0E27               	movlw	39
  1040  000DE0  640C               	cpfsgt	LCD_SetString@column^0,c
  1041  000DE2  EFF5  F006         	goto	u921
  1042  000DE6  EFF7  F006         	goto	u920
  1043  000DEA                     u921:
  1044  000DEA  EFF9  F006         	goto	l1580
  1045  000DEE                     u920:
  1046  000DEE  EF69  F007         	goto	l101
  1047  000DF2                     l1580:
  1048                           
  1049                           ;LCD.c: 285:     for(i=0;i<number;i++)
  1050  000DF2  0E00               	movlw	0
  1051  000DF4  6E14               	movwf	(LCD_SetString@i+1)^0,c
  1052  000DF6  0E00               	movlw	0
  1053  000DF8  6E13               	movwf	LCD_SetString@i^0,c
  1054  000DFA  EF57  F007         	goto	l1588
  1055  000DFE                     l1582:
  1056                           
  1057                           ;LCD.c: 286:     {;LCD.c: 287:         LCD_Data_Buffer[row][column+i] = sym[i];
  1058  000DFE  5013               	movf	LCD_SetString@i^0,w,c
  1059  000E00  2409               	addwf	LCD_SetString@sym^0,w,c
  1060  000E02  6E0E               	movwf	??_LCD_SetString^0,c
  1061  000E04  5014               	movf	(LCD_SetString@i+1)^0,w,c
  1062  000E06  200A               	addwfc	(LCD_SetString@sym+1)^0,w,c
  1063  000E08  6E0F               	movwf	(??_LCD_SetString+1)^0,c
  1064  000E0A  C00E  FFF6         	movff	??_LCD_SetString,tblptrl
  1065  000E0E  C00F  FFF7         	movff	??_LCD_SetString+1,tblptrh
  1066  000E12                     	if	0	;tblptru may be non-zero
  1067  000E12                     	endif
  1068  000E12                     	if	0	;tblptru may be non-zero
  1069  000E12                     	endif
  1070  000E12  500B               	movf	LCD_SetString@row^0,w,c
  1071  000E14  0D28               	mullw	40
  1072  000E16  0E00               	movlw	low _LCD_Data_Buffer
  1073  000E18  6E10               	movwf	(??_LCD_SetString+2)^0,c
  1074  000E1A  0E01               	movlw	high _LCD_Data_Buffer
  1075  000E1C  6E11               	movwf	(??_LCD_SetString+3)^0,c
  1076  000E1E  50F3               	movf	243,w,c
  1077  000E20  2610               	addwf	(??_LCD_SetString+2)^0,f,c
  1078  000E22  50F4               	movf	244,w,c
  1079  000E24  2211               	addwfc	(??_LCD_SetString+3)^0,f,c
  1080  000E26  500C               	movf	LCD_SetString@column^0,w,c
  1081  000E28  2610               	addwf	(??_LCD_SetString+2)^0,f,c
  1082  000E2A  0E00               	movlw	0
  1083  000E2C  2211               	addwfc	(??_LCD_SetString+3)^0,f,c
  1084  000E2E  5013               	movf	LCD_SetString@i^0,w,c
  1085  000E30  2410               	addwf	(??_LCD_SetString+2)^0,w,c
  1086  000E32  6ED9               	movwf	fsr2l,c
  1087  000E34  5014               	movf	(LCD_SetString@i+1)^0,w,c
  1088  000E36  2011               	addwfc	(??_LCD_SetString+3)^0,w,c
  1089  000E38  6EDA               	movwf	fsr2h,c
  1090  000E3A  0008               	tblrd		*
  1091  000E3C  CFF5 FFDF          	movff	tablat,indf2
  1092  000E40                     
  1093                           ;LCD.c: 288:         update_flag[row][(column+i)/16] |= (0x0001<<((column+i)%16));
  1094  000E40  500C               	movf	LCD_SetString@column^0,w,c
  1095  000E42  2413               	addwf	LCD_SetString@i^0,w,c
  1096  000E44  6E0E               	movwf	??_LCD_SetString^0,c
  1097  000E46  0E0F               	movlw	15
  1098  000E48  160E               	andwf	??_LCD_SetString^0,f,c
  1099  000E4A  0E01               	movlw	1
  1100  000E4C  6E0F               	movwf	(??_LCD_SetString+1)^0,c
  1101  000E4E  0E00               	movlw	0
  1102  000E50  6E10               	movwf	(??_LCD_SetString+2)^0,c
  1103  000E52  2A0E               	incf	??_LCD_SetString^0,f,c
  1104  000E54  EF2F  F007         	goto	u934
  1105  000E58                     u935:
  1106  000E58  90D8               	bcf	status,0,c
  1107  000E5A  360F               	rlcf	(??_LCD_SetString+1)^0,f,c
  1108  000E5C  3610               	rlcf	(??_LCD_SetString+2)^0,f,c
  1109  000E5E                     u934:
  1110  000E5E  2E0E               	decfsz	??_LCD_SetString^0,f,c
  1111  000E60  EF2C  F007         	goto	u935
  1112  000E64  500C               	movf	LCD_SetString@column^0,w,c
  1113  000E66  2413               	addwf	LCD_SetString@i^0,w,c
  1114  000E68  6E01               	movwf	___awdiv@dividend^0,c
  1115  000E6A  0E00               	movlw	0
  1116  000E6C  2014               	addwfc	(LCD_SetString@i+1)^0,w,c
  1117  000E6E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1118  000E70  0E00               	movlw	0
  1119  000E72  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1120  000E74  0E10               	movlw	16
  1121  000E76  6E03               	movwf	___awdiv@divisor^0,c
  1122  000E78  EC45  F008         	call	___awdiv	;wreg free
  1123  000E7C  90D8               	bcf	status,0,c
  1124  000E7E  3601               	rlcf	?___awdiv^0,f,c
  1125  000E80  3602               	rlcf	(?___awdiv+1)^0,f,c
  1126  000E82  500B               	movf	LCD_SetString@row^0,w,c
  1127  000E84  0D2A               	mullw	42
  1128  000E86  0E60               	movlw	low _update_flag
  1129  000E88  6E11               	movwf	(??_LCD_SetString+3)^0,c
  1130  000E8A  0E00               	movlw	high _update_flag
  1131  000E8C  6E12               	movwf	(??_LCD_SetString+4)^0,c
  1132  000E8E  50F3               	movf	243,w,c
  1133  000E90  2611               	addwf	(??_LCD_SetString+3)^0,f,c
  1134  000E92  50F4               	movf	244,w,c
  1135  000E94  2212               	addwfc	(??_LCD_SetString+4)^0,f,c
  1136  000E96  5001               	movf	?___awdiv^0,w,c
  1137  000E98  2411               	addwf	(??_LCD_SetString+3)^0,w,c
  1138  000E9A  6ED9               	movwf	fsr2l,c
  1139  000E9C  5002               	movf	(?___awdiv+1)^0,w,c
  1140  000E9E  2012               	addwfc	(??_LCD_SetString+4)^0,w,c
  1141  000EA0  6EDA               	movwf	fsr2h,c
  1142  000EA2  500F               	movf	(??_LCD_SetString+1)^0,w,c
  1143  000EA4  12DE               	iorwf	postinc2,f,c
  1144  000EA6  5010               	movf	(??_LCD_SetString+2)^0,w,c
  1145  000EA8  12DD               	iorwf	postdec2,f,c
  1146  000EAA                     
  1147                           ;LCD.c: 289:     }
  1148  000EAA  4A13               	infsnz	LCD_SetString@i^0,f,c
  1149  000EAC  2A14               	incf	(LCD_SetString@i+1)^0,f,c
  1150  000EAE                     l1588:
  1151  000EAE  500D               	movf	LCD_SetString@number^0,w,c
  1152  000EB0  6E0E               	movwf	??_LCD_SetString^0,c
  1153  000EB2  6A0F               	clrf	(??_LCD_SetString+1)^0,c
  1154  000EB4  500E               	movf	??_LCD_SetString^0,w,c
  1155  000EB6  5C13               	subwf	LCD_SetString@i^0,w,c
  1156  000EB8  5014               	movf	(LCD_SetString@i+1)^0,w,c
  1157  000EBA  0A80               	xorlw	128
  1158  000EBC  6E10               	movwf	(??_LCD_SetString+2)^0,c
  1159  000EBE  500F               	movf	(??_LCD_SetString+1)^0,w,c
  1160  000EC0  0A80               	xorlw	128
  1161  000EC2  5810               	subwfb	(??_LCD_SetString+2)^0,w,c
  1162  000EC4  A0D8               	btfss	status,0,c
  1163  000EC6  EF67  F007         	goto	u941
  1164  000ECA  EF69  F007         	goto	u940
  1165  000ECE                     u941:
  1166  000ECE  EFFF  F006         	goto	l1582
  1167  000ED2                     u940:
  1168  000ED2                     l101:
  1169  000ED2  0012               	return		;funcret
  1170  000ED4                     __end_of_LCD_SetString:
  1171                           	opt callstack 0
  1172                           
  1173 ;; *************** function ___awdiv *****************
  1174 ;; Defined at:
  1175 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  dividend        2    0[COMRAM] int 
  1178 ;;  divisor         2    2[COMRAM] int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  quotient        2    6[COMRAM] int 
  1181 ;;  sign            1    5[COMRAM] unsigned char 
  1182 ;;  counter         1    4[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2    0[COMRAM] int 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         4       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:        8 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_LCD_SetSymbol
  1202 ;;		_LCD_SetString
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text5
  1207  00108A                     __ptext5:
  1208                           	opt callstack 0
  1209  00108A                     ___awdiv:
  1210                           	opt callstack 29
  1211  00108A  0E00               	movlw	0
  1212  00108C  6E06               	movwf	___awdiv@sign^0,c
  1213  00108E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1214  001090  EF4E  F008         	goto	u800
  1215  001094  EF4C  F008         	goto	u801
  1216  001098                     u801:
  1217  001098  EF54  F008         	goto	l1476
  1218  00109C                     u800:
  1219  00109C  6C03               	negf	___awdiv@divisor^0,c
  1220  00109E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1221  0010A0  B0D8               	btfsc	status,0,c
  1222  0010A2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1223  0010A4  0E01               	movlw	1
  1224  0010A6  6E06               	movwf	___awdiv@sign^0,c
  1225  0010A8                     l1476:
  1226  0010A8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1227  0010AA  EF5B  F008         	goto	u810
  1228  0010AE  EF59  F008         	goto	u811
  1229  0010B2                     u811:
  1230  0010B2  EF61  F008         	goto	l1482
  1231  0010B6                     u810:
  1232  0010B6  6C01               	negf	___awdiv@dividend^0,c
  1233  0010B8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1234  0010BA  B0D8               	btfsc	status,0,c
  1235  0010BC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1236  0010BE  0E01               	movlw	1
  1237  0010C0  1A06               	xorwf	___awdiv@sign^0,f,c
  1238  0010C2                     l1482:
  1239  0010C2  0E00               	movlw	0
  1240  0010C4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1241  0010C6  0E00               	movlw	0
  1242  0010C8  6E07               	movwf	___awdiv@quotient^0,c
  1243  0010CA  5003               	movf	___awdiv@divisor^0,w,c
  1244  0010CC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1245  0010CE  B4D8               	btfsc	status,2,c
  1246  0010D0  EF6C  F008         	goto	u821
  1247  0010D4  EF6E  F008         	goto	u820
  1248  0010D8                     u821:
  1249  0010D8  EF96  F008         	goto	l1504
  1250  0010DC                     u820:
  1251  0010DC  0E01               	movlw	1
  1252  0010DE  6E05               	movwf	___awdiv@counter^0,c
  1253  0010E0  EF76  F008         	goto	l1490
  1254  0010E4                     l1488:
  1255  0010E4  90D8               	bcf	status,0,c
  1256  0010E6  3603               	rlcf	___awdiv@divisor^0,f,c
  1257  0010E8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1258  0010EA  2A05               	incf	___awdiv@counter^0,f,c
  1259  0010EC                     l1490:
  1260  0010EC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1261  0010EE  EF7B  F008         	goto	u831
  1262  0010F2  EF7D  F008         	goto	u830
  1263  0010F6                     u831:
  1264  0010F6  EF72  F008         	goto	l1488
  1265  0010FA                     u830:
  1266  0010FA                     l1492:
  1267  0010FA  90D8               	bcf	status,0,c
  1268  0010FC  3607               	rlcf	___awdiv@quotient^0,f,c
  1269  0010FE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1270  001100  5003               	movf	___awdiv@divisor^0,w,c
  1271  001102  5C01               	subwf	___awdiv@dividend^0,w,c
  1272  001104  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1273  001106  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1274  001108  A0D8               	btfss	status,0,c
  1275  00110A  EF89  F008         	goto	u841
  1276  00110E  EF8B  F008         	goto	u840
  1277  001112                     u841:
  1278  001112  EF90  F008         	goto	l1500
  1279  001116                     u840:
  1280  001116  5003               	movf	___awdiv@divisor^0,w,c
  1281  001118  5E01               	subwf	___awdiv@dividend^0,f,c
  1282  00111A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1283  00111C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1284  00111E  8007               	bsf	___awdiv@quotient^0,0,c
  1285  001120                     l1500:
  1286  001120  90D8               	bcf	status,0,c
  1287  001122  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1288  001124  3203               	rrcf	___awdiv@divisor^0,f,c
  1289  001126  2E05               	decfsz	___awdiv@counter^0,f,c
  1290  001128  EF7D  F008         	goto	l1492
  1291  00112C                     l1504:
  1292  00112C  5006               	movf	___awdiv@sign^0,w,c
  1293  00112E  B4D8               	btfsc	status,2,c
  1294  001130  EF9C  F008         	goto	u851
  1295  001134  EF9E  F008         	goto	u850
  1296  001138                     u851:
  1297  001138  EFA2  F008         	goto	l1508
  1298  00113C                     u850:
  1299  00113C  6C07               	negf	___awdiv@quotient^0,c
  1300  00113E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1301  001140  B0D8               	btfsc	status,0,c
  1302  001142  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1303  001144                     l1508:
  1304  001144  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1305  001148  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1306  00114C  0012               	return		;funcret
  1307  00114E                     __end_of___awdiv:
  1308                           	opt callstack 0
  1309                           
  1310 ;; *************** function _LCD_Init *****************
  1311 ;; Defined at:
  1312 ;;		line 62 in file "LCD.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        1 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    4
  1333 ;; This function calls:
  1334 ;;		_GPIO_Init_Nibble
  1335 ;;		_GPIO_Init_Pin
  1336 ;;		_LCD_Data_Out
  1337 ;;		_LCD_Init_Custom_Sym
  1338 ;;		_LCD_Write_Instruction
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text6
  1345  000ED4                     __ptext6:
  1346                           	opt callstack 0
  1347  000ED4                     _LCD_Init:
  1348                           	opt callstack 26
  1349  000ED4                     
  1350                           ;LCD.c: 68:     GPIO_Init_Pin(&(TRISE),(1),(0));
  1351  000ED4  0E96               	movlw	150
  1352  000ED6  6E01               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
  1353  000ED8  0E0F               	movlw	15
  1354  000EDA  6E02               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
  1355  000EDC  0E01               	movlw	1
  1356  000EDE  6E03               	movwf	GPIO_Init_Pin@pin_number^0,c
  1357  000EE0  0E00               	movlw	0
  1358  000EE2  6E04               	movwf	GPIO_Init_Pin@dir^0,c
  1359  000EE4  ECDA  F007         	call	_GPIO_Init_Pin	;wreg free
  1360                           
  1361                           ;LCD.c: 70:     GPIO_Init_Pin(&(TRISE),(2),(0));
  1362  000EE8  0E96               	movlw	150
  1363  000EEA  6E01               	movwf	GPIO_Init_Pin@DirRegAddress^0,c
  1364  000EEC  0E0F               	movlw	15
  1365  000EEE  6E02               	movwf	(GPIO_Init_Pin@DirRegAddress+1)^0,c
  1366  000EF0  0E02               	movlw	2
  1367  000EF2  6E03               	movwf	GPIO_Init_Pin@pin_number^0,c
  1368  000EF4  0E00               	movlw	0
  1369  000EF6  6E04               	movwf	GPIO_Init_Pin@dir^0,c
  1370  000EF8  ECDA  F007         	call	_GPIO_Init_Pin	;wreg free
  1371  000EFC                     
  1372                           ;LCD.c: 73:     GPIO_Init_Nibble(&(TRISD),(1),(0));
  1373  000EFC  0E95               	movlw	149
  1374  000EFE  6E01               	movwf	GPIO_Init_Nibble@DirRegAddress^0,c
  1375  000F00  0E0F               	movlw	15
  1376  000F02  6E02               	movwf	(GPIO_Init_Nibble@DirRegAddress+1)^0,c
  1377  000F04  0E01               	movlw	1
  1378  000F06  6E03               	movwf	GPIO_Init_Nibble@nibble_num^0,c
  1379  000F08  0E00               	movlw	0
  1380  000F0A  6E04               	movwf	GPIO_Init_Nibble@dir^0,c
  1381  000F0C  EC5B  F006         	call	_GPIO_Init_Nibble	;wreg free
  1382  000F10                     
  1383                           ;LCD.c: 80:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1384  000F10  0E27               	movlw	39
  1385  000F12  6E0E               	movwf	??_LCD_Init^0,c
  1386  000F14  0EF5               	movlw	245
  1387  000F16                     u1067:
  1388  000F16  2EE8               	decfsz	wreg,f,c
  1389  000F18  D7FE               	bra	u1067
  1390  000F1A  2E0E               	decfsz	??_LCD_Init^0,f,c
  1391  000F1C  D7FC               	bra	u1067
  1392  000F1E  F000               	nop	
  1393  000F20                     
  1394                           ;LCD.c: 83:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  1395  000F20  5084               	movf	132,w,c	;volatile
  1396  000F22  0BFB               	andlw	251
  1397  000F24  6E84               	movwf	132,c	;volatile
  1398  000F26                     
  1399                           ;LCD.c: 85:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  1400  000F26  5084               	movf	132,w,c	;volatile
  1401  000F28  0BFD               	andlw	253
  1402  000F2A  6E84               	movwf	132,c	;volatile
  1403  000F2C                     
  1404                           ;LCD.c: 88:     LCD_Data_Out(LCD_FunctionReset);
  1405  000F2C  0E30               	movlw	48
  1406  000F2E  EC7E  F009         	call	_LCD_Data_Out
  1407  000F32                     
  1408                           ;LCD.c: 89:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1409  000F32  0E0D               	movlw	13
  1410  000F34  6E0E               	movwf	??_LCD_Init^0,c
  1411  000F36  0EFC               	movlw	252
  1412  000F38                     u1077:
  1413  000F38  2EE8               	decfsz	wreg,f,c
  1414  000F3A  D7FE               	bra	u1077
  1415  000F3C  2E0E               	decfsz	??_LCD_Init^0,f,c
  1416  000F3E  D7FC               	bra	u1077
  1417  000F40                     
  1418                           ;LCD.c: 91:     LCD_Data_Out(LCD_FunctionReset);
  1419  000F40  0E30               	movlw	48
  1420  000F42  EC7E  F009         	call	_LCD_Data_Out
  1421  000F46                     
  1422                           ;LCD.c: 92:     _delay((unsigned long)((150)*(8000000/4000000.0)));
  1423  000F46  0E64               	movlw	100
  1424  000F48                     u1087:
  1425  000F48  2EE8               	decfsz	wreg,f,c
  1426  000F4A  D7FE               	bra	u1087
  1427  000F4C                     
  1428                           ;LCD.c: 94:     LCD_Data_Out(LCD_FunctionReset);
  1429  000F4C  0E30               	movlw	48
  1430  000F4E  EC7E  F009         	call	_LCD_Data_Out
  1431  000F52                     
  1432                           ;LCD.c: 97:     LCD_Data_Out(LCD_FunctionSet4bit);
  1433  000F52  0E28               	movlw	40
  1434  000F54  EC7E  F009         	call	_LCD_Data_Out
  1435  000F58                     
  1436                           ;LCD.c: 98:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1437  000F58  0E21               	movlw	33
  1438  000F5A                     u1097:
  1439  000F5A  2EE8               	decfsz	wreg,f,c
  1440  000F5C  D7FE               	bra	u1097
  1441  000F5E  F000               	nop	
  1442  000F60                     
  1443                           ;LCD.c: 101:     LCD_Write_Instruction(LCD_FunctionSet4bit);
  1444  000F60  0E28               	movlw	40
  1445  000F62  ECA4  F009         	call	_LCD_Write_Instruction
  1446  000F66                     
  1447                           ;LCD.c: 102:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1448  000F66  0E21               	movlw	33
  1449  000F68                     u1107:
  1450  000F68  2EE8               	decfsz	wreg,f,c
  1451  000F6A  D7FE               	bra	u1107
  1452  000F6C  F000               	nop	
  1453  000F6E                     
  1454                           ;LCD.c: 105:     LCD_Write_Instruction(LCD_DisplayOff);
  1455  000F6E  0E08               	movlw	8
  1456  000F70  ECA4  F009         	call	_LCD_Write_Instruction
  1457  000F74                     
  1458                           ;LCD.c: 106:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1459  000F74  0E21               	movlw	33
  1460  000F76                     u1117:
  1461  000F76  2EE8               	decfsz	wreg,f,c
  1462  000F78  D7FE               	bra	u1117
  1463  000F7A  F000               	nop	
  1464  000F7C                     
  1465                           ;LCD.c: 109:     LCD_Write_Instruction(LCD_Clear);
  1466  000F7C  0E01               	movlw	1
  1467  000F7E  ECA4  F009         	call	_LCD_Write_Instruction
  1468  000F82                     
  1469                           ;LCD.c: 110:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1470  000F82  0E06               	movlw	6
  1471  000F84  6E0E               	movwf	??_LCD_Init^0,c
  1472  000F86  0E30               	movlw	48
  1473  000F88                     u1127:
  1474  000F88  2EE8               	decfsz	wreg,f,c
  1475  000F8A  D7FE               	bra	u1127
  1476  000F8C  2E0E               	decfsz	??_LCD_Init^0,f,c
  1477  000F8E  D7FC               	bra	u1127
  1478  000F90  D000               	nop2	
  1479  000F92                     
  1480                           ;LCD.c: 113:     LCD_Write_Instruction(LCD_EntryMode);
  1481  000F92  0E06               	movlw	6
  1482  000F94  ECA4  F009         	call	_LCD_Write_Instruction
  1483  000F98                     
  1484                           ;LCD.c: 114:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1485  000F98  0E21               	movlw	33
  1486  000F9A                     u1137:
  1487  000F9A  2EE8               	decfsz	wreg,f,c
  1488  000F9C  D7FE               	bra	u1137
  1489  000F9E  F000               	nop	
  1490  000FA0                     
  1491                           ;LCD.c: 119:     LCD_Write_Instruction(LCD_DisplayOn);
  1492  000FA0  0E0C               	movlw	12
  1493  000FA2  ECA4  F009         	call	_LCD_Write_Instruction
  1494  000FA6                     
  1495                           ;LCD.c: 120:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1496  000FA6  0E21               	movlw	33
  1497  000FA8                     u1147:
  1498  000FA8  2EE8               	decfsz	wreg,f,c
  1499  000FAA  D7FE               	bra	u1147
  1500  000FAC  F000               	nop	
  1501  000FAE                     
  1502                           ;LCD.c: 122:     LCD_Init_Custom_Sym();
  1503  000FAE  EC04  F004         	call	_LCD_Init_Custom_Sym	;wreg free
  1504  000FB2  0012               	return		;funcret
  1505  000FB4                     __end_of_LCD_Init:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _LCD_Init_Custom_Sym *****************
  1509 ;; Defined at:
  1510 ;;		line 351 in file "LCD.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  data            8    3[COMRAM] unsigned char [8]
  1515 ;;  i               2   11[COMRAM] int 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0
  1526 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1528 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1529 ;;Total ram usage:       10 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		_LCD_SetCGRAM
  1534 ;;		_LCD_Write_Symbol
  1535 ;; This function is called by:
  1536 ;;		_LCD_Init
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text7
  1541  000808                     __ptext7:
  1542                           	opt callstack 0
  1543  000808                     _LCD_Init_Custom_Sym:
  1544                           	opt callstack 26
  1545  000808                     
  1546                           ;LCD.c: 354:     int i;;LCD.c: 355:     uint8 data[8] = { 0x00,
  1547  000808  EE20  F029         	lfsr	2,LCD_Init_Custom_Sym@F3257
  1548  00080C  EE10  F004         	lfsr	1,LCD_Init_Custom_Sym@data
  1549  000810  0E07               	movlw	7
  1550  000812                     u721:
  1551  000812  CFDB FFE3          	movff	plusw2,plusw1
  1552  000816  06E8               	decf	wreg,f,c
  1553  000818  E2FC               	bc	u721
  1554  00081A                     
  1555                           ;LCD.c: 363:     LCD_SetCGRAM(LCD_MOTOR1*8);
  1556  00081A  0E00               	movlw	0
  1557  00081C  ECB3  F009         	call	_LCD_SetCGRAM
  1558  000820                     
  1559                           ;LCD.c: 364:     for(i =0;i<8;i++){
  1560  000820  0E00               	movlw	0
  1561  000822  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1562  000824  0E00               	movlw	0
  1563  000826  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1564  000828                     l1352:
  1565                           
  1566                           ;LCD.c: 365:         LCD_Write_Symbol(data[i]);
  1567  000828  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1568  00082A  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1569  00082C  6ED9               	movwf	fsr2l,c
  1570  00082E  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1571  000830  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1572  000832  6EDA               	movwf	fsr2h,c
  1573  000834  50DF               	movf	indf2,w,c
  1574  000836  EC94  F009         	call	_LCD_Write_Symbol
  1575  00083A                     
  1576                           ;LCD.c: 366:     }
  1577  00083A  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1578  00083C  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1579  00083E  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1580  000840  EF2B  F004         	goto	u731
  1581  000844  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1582  000846  E109               	bnz	u730
  1583  000848  0E08               	movlw	8
  1584  00084A  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1585  00084C  A0D8               	btfss	status,0,c
  1586  00084E  EF2B  F004         	goto	u731
  1587  000852  EF2D  F004         	goto	u730
  1588  000856                     u731:
  1589  000856  EF14  F004         	goto	l1352
  1590  00085A                     u730:
  1591  00085A                     
  1592                           ;LCD.c: 368:     data[0] = 0x00;
  1593  00085A  0E00               	movlw	0
  1594  00085C  6E04               	movwf	LCD_Init_Custom_Sym@data^0,c
  1595                           
  1596                           ;LCD.c: 369:     data[1] = 0xF8;
  1597  00085E  0EF8               	movlw	248
  1598  000860  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1599                           
  1600                           ;LCD.c: 370:     data[2] = 0xF8;
  1601  000862  0EF8               	movlw	248
  1602  000864  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1603                           
  1604                           ;LCD.c: 371:     data[3] = 0x00;
  1605  000866  0E00               	movlw	0
  1606  000868  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1607                           
  1608                           ;LCD.c: 372:     data[4] = 0x00;
  1609  00086A  0E00               	movlw	0
  1610  00086C  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1611                           
  1612                           ;LCD.c: 373:     data[5] = 0x00;
  1613  00086E  0E00               	movlw	0
  1614  000870  6E09               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1615                           
  1616                           ;LCD.c: 374:     data[6] = 0x00;
  1617  000872  0E00               	movlw	0
  1618  000874  6E0A               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1619                           
  1620                           ;LCD.c: 375:     data[7] = 0x00;
  1621  000876  0E00               	movlw	0
  1622  000878  6E0B               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1623  00087A                     
  1624                           ;LCD.c: 376:     LCD_SetCGRAM(LCD_MOTOR2*8);
  1625  00087A  0E08               	movlw	8
  1626  00087C  ECB3  F009         	call	_LCD_SetCGRAM
  1627  000880                     
  1628                           ;LCD.c: 377:     for(i =0;i<8;i++){
  1629  000880  0E00               	movlw	0
  1630  000882  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1631  000884  0E00               	movlw	0
  1632  000886  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1633  000888                     l1368:
  1634                           
  1635                           ;LCD.c: 378:         LCD_Write_Symbol(data[i]);
  1636  000888  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1637  00088A  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1638  00088C  6ED9               	movwf	fsr2l,c
  1639  00088E  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1640  000890  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1641  000892  6EDA               	movwf	fsr2h,c
  1642  000894  50DF               	movf	indf2,w,c
  1643  000896  EC94  F009         	call	_LCD_Write_Symbol
  1644  00089A                     
  1645                           ;LCD.c: 379:     }
  1646  00089A  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1647  00089C  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1648  00089E  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1649  0008A0  EF5B  F004         	goto	u741
  1650  0008A4  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1651  0008A6  E109               	bnz	u740
  1652  0008A8  0E08               	movlw	8
  1653  0008AA  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1654  0008AC  A0D8               	btfss	status,0,c
  1655  0008AE  EF5B  F004         	goto	u741
  1656  0008B2  EF5D  F004         	goto	u740
  1657  0008B6                     u741:
  1658  0008B6  EF44  F004         	goto	l1368
  1659  0008BA                     u740:
  1660  0008BA                     
  1661                           ;LCD.c: 381:     data[0] = 0x00;
  1662  0008BA  0E00               	movlw	0
  1663  0008BC  6E04               	movwf	LCD_Init_Custom_Sym@data^0,c
  1664                           
  1665                           ;LCD.c: 382:     data[1] = 0x03;
  1666  0008BE  0E03               	movlw	3
  1667  0008C0  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1668                           
  1669                           ;LCD.c: 383:     data[2] = 0x03;
  1670  0008C2  0E03               	movlw	3
  1671  0008C4  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1672                           
  1673                           ;LCD.c: 384:     data[3] = 0x00;
  1674  0008C6  0E00               	movlw	0
  1675  0008C8  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1676                           
  1677                           ;LCD.c: 385:     data[4] = 0x00;
  1678  0008CA  0E00               	movlw	0
  1679  0008CC  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1680                           
  1681                           ;LCD.c: 386:     data[5] = 0x00;
  1682  0008CE  0E00               	movlw	0
  1683  0008D0  6E09               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1684                           
  1685                           ;LCD.c: 387:     data[6] = 0x00;
  1686  0008D2  0E00               	movlw	0
  1687  0008D4  6E0A               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1688                           
  1689                           ;LCD.c: 388:     data[7] = 0x00;
  1690  0008D6  0E00               	movlw	0
  1691  0008D8  6E0B               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1692  0008DA                     
  1693                           ;LCD.c: 389:     LCD_SetCGRAM(LCD_MOTOR3*8);
  1694  0008DA  0E10               	movlw	16
  1695  0008DC  ECB3  F009         	call	_LCD_SetCGRAM
  1696  0008E0                     
  1697                           ;LCD.c: 390:     for(i =0;i<8;i++){
  1698  0008E0  0E00               	movlw	0
  1699  0008E2  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1700  0008E4  0E00               	movlw	0
  1701  0008E6  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1702  0008E8                     l1384:
  1703                           
  1704                           ;LCD.c: 391:         LCD_Write_Symbol(data[i]);
  1705  0008E8  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1706  0008EA  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1707  0008EC  6ED9               	movwf	fsr2l,c
  1708  0008EE  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1709  0008F0  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1710  0008F2  6EDA               	movwf	fsr2h,c
  1711  0008F4  50DF               	movf	indf2,w,c
  1712  0008F6  EC94  F009         	call	_LCD_Write_Symbol
  1713  0008FA                     
  1714                           ;LCD.c: 392:     }
  1715  0008FA  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1716  0008FC  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1717  0008FE  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1718  000900  EF8B  F004         	goto	u751
  1719  000904  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1720  000906  E109               	bnz	u750
  1721  000908  0E08               	movlw	8
  1722  00090A  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1723  00090C  A0D8               	btfss	status,0,c
  1724  00090E  EF8B  F004         	goto	u751
  1725  000912  EF8D  F004         	goto	u750
  1726  000916                     u751:
  1727  000916  EF74  F004         	goto	l1384
  1728  00091A                     u750:
  1729  00091A                     
  1730                           ;LCD.c: 395:     data[0] = 0x00;
  1731  00091A  0E00               	movlw	0
  1732  00091C  6E04               	movwf	LCD_Init_Custom_Sym@data^0,c
  1733                           
  1734                           ;LCD.c: 396:     data[1] = 0x00;
  1735  00091E  0E00               	movlw	0
  1736  000920  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1737                           
  1738                           ;LCD.c: 397:     data[2] = 0x00;
  1739  000922  0E00               	movlw	0
  1740  000924  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1741                           
  1742                           ;LCD.c: 398:     data[3] = 0x00;
  1743  000926  0E00               	movlw	0
  1744  000928  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1745                           
  1746                           ;LCD.c: 399:     data[4] = 0x00;
  1747  00092A  0E00               	movlw	0
  1748  00092C  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1749                           
  1750                           ;LCD.c: 400:     data[5] = 0x03;
  1751  00092E  0E03               	movlw	3
  1752  000930  6E09               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1753                           
  1754                           ;LCD.c: 401:     data[6] = 0x03;
  1755  000932  0E03               	movlw	3
  1756  000934  6E0A               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1757                           
  1758                           ;LCD.c: 402:     data[7] = 0x00;
  1759  000936  0E00               	movlw	0
  1760  000938  6E0B               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1761  00093A                     
  1762                           ;LCD.c: 403:     LCD_SetCGRAM(LCD_MOTOR4*8);
  1763  00093A  0E18               	movlw	24
  1764  00093C  ECB3  F009         	call	_LCD_SetCGRAM
  1765  000940                     
  1766                           ;LCD.c: 404:     for(i =0;i<8;i++){
  1767  000940  0E00               	movlw	0
  1768  000942  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1769  000944  0E00               	movlw	0
  1770  000946  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1771  000948                     l1400:
  1772                           
  1773                           ;LCD.c: 405:         LCD_Write_Symbol(data[i]);
  1774  000948  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1775  00094A  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1776  00094C  6ED9               	movwf	fsr2l,c
  1777  00094E  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1778  000950  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1779  000952  6EDA               	movwf	fsr2h,c
  1780  000954  50DF               	movf	indf2,w,c
  1781  000956  EC94  F009         	call	_LCD_Write_Symbol
  1782  00095A                     
  1783                           ;LCD.c: 406:     }
  1784  00095A  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1785  00095C  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1786  00095E  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1787  000960  EFBB  F004         	goto	u761
  1788  000964  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1789  000966  E109               	bnz	u760
  1790  000968  0E08               	movlw	8
  1791  00096A  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1792  00096C  A0D8               	btfss	status,0,c
  1793  00096E  EFBB  F004         	goto	u761
  1794  000972  EFBD  F004         	goto	u760
  1795  000976                     u761:
  1796  000976  EFA4  F004         	goto	l1400
  1797  00097A                     u760:
  1798  00097A                     
  1799                           ;LCD.c: 409:     data[0] = 0xFF;
  1800  00097A  6804               	setf	LCD_Init_Custom_Sym@data^0,c
  1801  00097C                     
  1802                           ;LCD.c: 410:     data[1] = 0x11;
  1803  00097C  0E11               	movlw	17
  1804  00097E  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1805                           
  1806                           ;LCD.c: 411:     data[2] = 0x15;
  1807  000980  0E15               	movlw	21
  1808  000982  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1809                           
  1810                           ;LCD.c: 412:     data[3] = 0x15;
  1811  000984  0E15               	movlw	21
  1812  000986  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1813                           
  1814                           ;LCD.c: 413:     data[4] = 0x15;
  1815  000988  0E15               	movlw	21
  1816  00098A  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1817  00098C                     
  1818                           ;LCD.c: 414:     data[5] = 0xFF;
  1819  00098C  6809               	setf	(LCD_Init_Custom_Sym@data+5)^0,c
  1820  00098E                     
  1821                           ;LCD.c: 415:     data[6] = 0xFF;
  1822  00098E  680A               	setf	(LCD_Init_Custom_Sym@data+6)^0,c
  1823                           
  1824                           ;LCD.c: 416:     data[7] = 0x04;
  1825  000990  0E04               	movlw	4
  1826  000992  6E0B               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1827  000994                     
  1828                           ;LCD.c: 417:     LCD_SetCGRAM(LCD_LAMP*8);
  1829  000994  0E20               	movlw	32
  1830  000996  ECB3  F009         	call	_LCD_SetCGRAM
  1831  00099A                     
  1832                           ;LCD.c: 418:     for(i =0;i<8;i++){
  1833  00099A  0E00               	movlw	0
  1834  00099C  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1835  00099E  0E00               	movlw	0
  1836  0009A0  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1837  0009A2                     l1420:
  1838                           
  1839                           ;LCD.c: 419:         LCD_Write_Symbol(data[i]);
  1840  0009A2  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1841  0009A4  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1842  0009A6  6ED9               	movwf	fsr2l,c
  1843  0009A8  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1844  0009AA  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1845  0009AC  6EDA               	movwf	fsr2h,c
  1846  0009AE  50DF               	movf	indf2,w,c
  1847  0009B0  EC94  F009         	call	_LCD_Write_Symbol
  1848  0009B4                     
  1849                           ;LCD.c: 420:     }
  1850  0009B4  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1851  0009B6  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1852  0009B8  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1853  0009BA  EFE8  F004         	goto	u771
  1854  0009BE  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1855  0009C0  E109               	bnz	u770
  1856  0009C2  0E08               	movlw	8
  1857  0009C4  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1858  0009C6  A0D8               	btfss	status,0,c
  1859  0009C8  EFE8  F004         	goto	u771
  1860  0009CC  EFEA  F004         	goto	u770
  1861  0009D0                     u771:
  1862  0009D0  EFD1  F004         	goto	l1420
  1863  0009D4                     u770:
  1864  0009D4                     
  1865                           ;LCD.c: 426:     data[0] = 0xE9;
  1866  0009D4  0EE9               	movlw	233
  1867  0009D6  6E04               	movwf	LCD_Init_Custom_Sym@data^0,c
  1868                           
  1869                           ;LCD.c: 427:     data[1] = 0xF2;
  1870  0009D8  0EF2               	movlw	242
  1871  0009DA  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1872                           
  1873                           ;LCD.c: 428:     data[2] = 0xE9;
  1874  0009DC  0EE9               	movlw	233
  1875  0009DE  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1876                           
  1877                           ;LCD.c: 429:     data[3] = 0xF2;
  1878  0009E0  0EF2               	movlw	242
  1879  0009E2  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1880                           
  1881                           ;LCD.c: 430:     data[4] = 0x00;
  1882  0009E4  0E00               	movlw	0
  1883  0009E6  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1884  0009E8                     
  1885                           ;LCD.c: 431:     data[5] = 0xFF;
  1886  0009E8  6809               	setf	(LCD_Init_Custom_Sym@data+5)^0,c
  1887  0009EA                     
  1888                           ;LCD.c: 432:     data[6] = 0xFF;
  1889  0009EA  680A               	setf	(LCD_Init_Custom_Sym@data+6)^0,c
  1890                           
  1891                           ;LCD.c: 433:     data[7] = 0x0E;
  1892  0009EC  0E0E               	movlw	14
  1893  0009EE  6E0B               	movwf	(LCD_Init_Custom_Sym@data+7)^0,c
  1894  0009F0                     
  1895                           ;LCD.c: 434:     LCD_SetCGRAM(LCD_HEATER*8);
  1896  0009F0  0E28               	movlw	40
  1897  0009F2  ECB3  F009         	call	_LCD_SetCGRAM
  1898  0009F6                     
  1899                           ;LCD.c: 435:     for(i =0;i<8;i++){
  1900  0009F6  0E00               	movlw	0
  1901  0009F8  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1902  0009FA  0E00               	movlw	0
  1903  0009FC  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1904  0009FE                     l1440:
  1905                           
  1906                           ;LCD.c: 436:         LCD_Write_Symbol(data[i]);
  1907  0009FE  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1908  000A00  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1909  000A02  6ED9               	movwf	fsr2l,c
  1910  000A04  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1911  000A06  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1912  000A08  6EDA               	movwf	fsr2h,c
  1913  000A0A  50DF               	movf	indf2,w,c
  1914  000A0C  EC94  F009         	call	_LCD_Write_Symbol
  1915  000A10                     
  1916                           ;LCD.c: 437:     }
  1917  000A10  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1918  000A12  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1919  000A14  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1920  000A16  EF16  F005         	goto	u781
  1921  000A1A  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1922  000A1C  E109               	bnz	u780
  1923  000A1E  0E08               	movlw	8
  1924  000A20  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1925  000A22  A0D8               	btfss	status,0,c
  1926  000A24  EF16  F005         	goto	u781
  1927  000A28  EF18  F005         	goto	u780
  1928  000A2C                     u781:
  1929  000A2C  EFFF  F004         	goto	l1440
  1930  000A30                     u780:
  1931  000A30                     
  1932                           ;LCD.c: 441:     data[0] = 0xFF;
  1933  000A30  6804               	setf	LCD_Init_Custom_Sym@data^0,c
  1934  000A32                     
  1935                           ;LCD.c: 442:     data[1] = 0x11;
  1936  000A32  0E11               	movlw	17
  1937  000A34  6E05               	movwf	(LCD_Init_Custom_Sym@data+1)^0,c
  1938                           
  1939                           ;LCD.c: 443:     data[2] = 0x11;
  1940  000A36  0E11               	movlw	17
  1941  000A38  6E06               	movwf	(LCD_Init_Custom_Sym@data+2)^0,c
  1942                           
  1943                           ;LCD.c: 444:     data[3] = 0x11;
  1944  000A3A  0E11               	movlw	17
  1945  000A3C  6E07               	movwf	(LCD_Init_Custom_Sym@data+3)^0,c
  1946                           
  1947                           ;LCD.c: 445:     data[4] = 0x19;
  1948  000A3E  0E19               	movlw	25
  1949  000A40  6E08               	movwf	(LCD_Init_Custom_Sym@data+4)^0,c
  1950                           
  1951                           ;LCD.c: 446:     data[5] = 0x11;
  1952  000A42  0E11               	movlw	17
  1953  000A44  6E09               	movwf	(LCD_Init_Custom_Sym@data+5)^0,c
  1954                           
  1955                           ;LCD.c: 447:     data[6] = 0x11;
  1956  000A46  0E11               	movlw	17
  1957  000A48  6E0A               	movwf	(LCD_Init_Custom_Sym@data+6)^0,c
  1958  000A4A                     
  1959                           ;LCD.c: 448:     data[7] = 0xFF;
  1960  000A4A  680B               	setf	(LCD_Init_Custom_Sym@data+7)^0,c
  1961  000A4C                     
  1962                           ;LCD.c: 449:     LCD_SetCGRAM(LCD_DOOR*8);
  1963  000A4C  0E30               	movlw	48
  1964  000A4E  ECB3  F009         	call	_LCD_SetCGRAM
  1965  000A52                     
  1966                           ;LCD.c: 450:     for(i =0;i<8;i++){
  1967  000A52  0E00               	movlw	0
  1968  000A54  6E0D               	movwf	(LCD_Init_Custom_Sym@i+1)^0,c
  1969  000A56  0E00               	movlw	0
  1970  000A58  6E0C               	movwf	LCD_Init_Custom_Sym@i^0,c
  1971  000A5A                     l1458:
  1972                           
  1973                           ;LCD.c: 451:         LCD_Write_Symbol(data[i]);
  1974  000A5A  0E04               	movlw	low LCD_Init_Custom_Sym@data
  1975  000A5C  240C               	addwf	LCD_Init_Custom_Sym@i^0,w,c
  1976  000A5E  6ED9               	movwf	fsr2l,c
  1977  000A60  0E00               	movlw	high LCD_Init_Custom_Sym@data
  1978  000A62  200D               	addwfc	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1979  000A64  6EDA               	movwf	fsr2h,c
  1980  000A66  50DF               	movf	indf2,w,c
  1981  000A68  EC94  F009         	call	_LCD_Write_Symbol
  1982  000A6C                     
  1983                           ;LCD.c: 452:     }
  1984  000A6C  4A0C               	infsnz	LCD_Init_Custom_Sym@i^0,f,c
  1985  000A6E  2A0D               	incf	(LCD_Init_Custom_Sym@i+1)^0,f,c
  1986  000A70  BE0D               	btfsc	(LCD_Init_Custom_Sym@i+1)^0,7,c
  1987  000A72  EF44  F005         	goto	u791
  1988  000A76  500D               	movf	(LCD_Init_Custom_Sym@i+1)^0,w,c
  1989  000A78  E109               	bnz	u790
  1990  000A7A  0E08               	movlw	8
  1991  000A7C  5C0C               	subwf	LCD_Init_Custom_Sym@i^0,w,c
  1992  000A7E  A0D8               	btfss	status,0,c
  1993  000A80  EF44  F005         	goto	u791
  1994  000A84  EF46  F005         	goto	u790
  1995  000A88                     u791:
  1996  000A88  EF2D  F005         	goto	l1458
  1997  000A8C                     u790:
  1998  000A8C  0012               	return		;funcret
  1999  000A8E                     __end_of_LCD_Init_Custom_Sym:
  2000                           	opt callstack 0
  2001                           
  2002 ;; *************** function _LCD_Write_Symbol *****************
  2003 ;; Defined at:
  2004 ;;		line 170 in file "LCD.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  sym             1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  sym             1    1[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    1
  2025 ;; This function calls:
  2026 ;;		_LCD_Data_Out
  2027 ;; This function is called by:
  2028 ;;		_LCD_Update
  2029 ;;		_LCD_Init_Custom_Sym
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text8
  2034  001328                     __ptext8:
  2035                           	opt callstack 0
  2036  001328                     _LCD_Write_Symbol:
  2037                           	opt callstack 28
  2038                           
  2039                           ;incstack = 0
  2040                           ;LCD_Write_Symbol@sym stored from wreg
  2041  001328  6E02               	movwf	LCD_Write_Symbol@sym^0,c
  2042  00132A                     
  2043                           ;LCD.c: 170: static void LCD_Write_Symbol(uint8 sym);LCD.c: 171: {;LCD.c: 173:     (((PO
      +                          RTE))=((PORTE) & ~(1<<(2)))|(1<<(2)));
  2044  00132A  5084               	movf	132,w,c	;volatile
  2045  00132C  0BFB               	andlw	251
  2046  00132E  0904               	iorlw	4
  2047  001330  6E84               	movwf	132,c	;volatile
  2048                           
  2049                           ;LCD.c: 175:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2050  001332  5084               	movf	132,w,c	;volatile
  2051  001334  0BFD               	andlw	253
  2052  001336  6E84               	movwf	132,c	;volatile
  2053  001338                     
  2054                           ;LCD.c: 179:     LCD_Data_Out((sym>>4));
  2055  001338  3802               	swapf	LCD_Write_Symbol@sym^0,w,c
  2056  00133A  0B0F               	andlw	15
  2057  00133C  EC7E  F009         	call	_LCD_Data_Out
  2058  001340                     
  2059                           ;LCD.c: 181:     LCD_Data_Out(sym);
  2060  001340  5002               	movf	LCD_Write_Symbol@sym^0,w,c
  2061  001342  EC7E  F009         	call	_LCD_Data_Out
  2062  001346  0012               	return		;funcret
  2063  001348                     __end_of_LCD_Write_Symbol:
  2064                           	opt callstack 0
  2065                           
  2066 ;; *************** function _LCD_SetCGRAM *****************
  2067 ;; Defined at:
  2068 ;;		line 454 in file "LCD.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  ADDRESS         1    wreg     unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  ADDRESS         1    2[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2085 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        1 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    2
  2089 ;; This function calls:
  2090 ;;		_LCD_Write_Instruction
  2091 ;; This function is called by:
  2092 ;;		_LCD_Init_Custom_Sym
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text9
  2097  001366                     __ptext9:
  2098                           	opt callstack 0
  2099  001366                     _LCD_SetCGRAM:
  2100                           	opt callstack 26
  2101                           
  2102                           ;incstack = 0
  2103                           ;LCD_SetCGRAM@ADDRESS stored from wreg
  2104  001366  6E03               	movwf	LCD_SetCGRAM@ADDRESS^0,c
  2105  001368                     
  2106                           ;LCD.c: 454: static void LCD_SetCGRAM(uint8 ADDRESS);LCD.c: 455: {;LCD.c: 456:     ADDRE
      +                          SS &= 0x3f;
  2107  001368  0E3F               	movlw	63
  2108  00136A  1603               	andwf	LCD_SetCGRAM@ADDRESS^0,f,c
  2109  00136C                     
  2110                           ;LCD.c: 457:     ADDRESS |= 0x40;
  2111  00136C  8C03               	bsf	LCD_SetCGRAM@ADDRESS^0,6,c
  2112  00136E                     
  2113                           ;LCD.c: 458:     LCD_Write_Instruction(ADDRESS);
  2114  00136E  5003               	movf	LCD_SetCGRAM@ADDRESS^0,w,c
  2115  001370  ECA4  F009         	call	_LCD_Write_Instruction
  2116  001374  0012               	return		;funcret
  2117  001376                     __end_of_LCD_SetCGRAM:
  2118                           	opt callstack 0
  2119                           
  2120 ;; *************** function _LCD_Write_Instruction *****************
  2121 ;; Defined at:
  2122 ;;		line 208 in file "LCD.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  inst            1    wreg     enum E3182
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  inst            1    1[COMRAM] enum E3182
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        1 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    1
  2143 ;; This function calls:
  2144 ;;		_LCD_Data_Out
  2145 ;; This function is called by:
  2146 ;;		_LCD_Init
  2147 ;;		_LCD_SetDDRAM
  2148 ;;		_LCD_SetCGRAM
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153  001348                     __ptext10:
  2154                           	opt callstack 0
  2155  001348                     _LCD_Write_Instruction:
  2156                           	opt callstack 27
  2157                           
  2158                           ;incstack = 0
  2159                           ;LCD_Write_Instruction@inst stored from wreg
  2160  001348  6E02               	movwf	LCD_Write_Instruction@inst^0,c
  2161  00134A                     
  2162                           ;LCD.c: 208: static void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 209: {;LCD
      +                          .c: 211:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  2163  00134A  5084               	movf	132,w,c	;volatile
  2164  00134C  0BFB               	andlw	251
  2165  00134E  6E84               	movwf	132,c	;volatile
  2166                           
  2167                           ;LCD.c: 213:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2168  001350  5084               	movf	132,w,c	;volatile
  2169  001352  0BFD               	andlw	253
  2170  001354  6E84               	movwf	132,c	;volatile
  2171  001356                     
  2172                           ;LCD.c: 215:     LCD_Data_Out((inst>>4));
  2173  001356  3802               	swapf	LCD_Write_Instruction@inst^0,w,c
  2174  001358  0B0F               	andlw	15
  2175  00135A  EC7E  F009         	call	_LCD_Data_Out
  2176  00135E                     
  2177                           ;LCD.c: 216:     LCD_Data_Out(inst);
  2178  00135E  5002               	movf	LCD_Write_Instruction@inst^0,w,c
  2179  001360  EC7E  F009         	call	_LCD_Data_Out
  2180  001364  0012               	return		;funcret
  2181  001366                     __end_of_LCD_Write_Instruction:
  2182                           	opt callstack 0
  2183                           
  2184 ;; *************** function _LCD_Data_Out *****************
  2185 ;; Defined at:
  2186 ;;		line 230 in file "LCD.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  byte            1    wreg     unsigned char 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  byte            1    0[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        1 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_LCD_Init
  2210 ;;		_LCD_Write_Symbol
  2211 ;;		_LCD_Write_Instruction
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text11
  2216  0012FC                     __ptext11:
  2217                           	opt callstack 0
  2218  0012FC                     _LCD_Data_Out:
  2219                           	opt callstack 28
  2220                           
  2221                           ;incstack = 0
  2222                           ;LCD_Data_Out@byte stored from wreg
  2223  0012FC  6E01               	movwf	LCD_Data_Out@byte^0,c
  2224  0012FE                     
  2225                           ;LCD.c: 230: static void LCD_Data_Out(uint8 byte);LCD.c: 231: {;LCD.c: 234:        (((PO
      +                          RTD))=(((PORTD))&~(0xF<<((1)*4)))); (((PORTD))=(((PORTD))|((byte<<((1)*4))&(0xF<<((1)*4)
      +                          ))));
  2226  0012FE  5083               	movf	131,w,c	;volatile
  2227  001300  0B0F               	andlw	15
  2228  001302  6E83               	movwf	131,c	;volatile
  2229  001304  3801               	swapf	LCD_Data_Out@byte^0,w,c
  2230  001306  0BF0               	andlw	240
  2231  001308  0BF0               	andlw	240
  2232  00130A  1083               	iorwf	131,w,c	;volatile
  2233  00130C  6E83               	movwf	131,c	;volatile
  2234                           
  2235                           ;LCD.c: 237:        (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
  2236  00130E  5084               	movf	132,w,c	;volatile
  2237  001310  0BFD               	andlw	253
  2238  001312  0902               	iorlw	2
  2239  001314  6E84               	movwf	132,c	;volatile
  2240  001316                     
  2241                           ;LCD.c: 239:        _delay((unsigned long)((100)*(8000000/4000000.0)));
  2242  001316  0E42               	movlw	66
  2243  001318                     u1157:
  2244  001318  2EE8               	decfsz	wreg,f,c
  2245  00131A  D7FE               	bra	u1157
  2246  00131C  D000               	nop2	
  2247  00131E                     
  2248                           ;LCD.c: 241:        (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2249  00131E  5084               	movf	132,w,c	;volatile
  2250  001320  0BFD               	andlw	253
  2251  001322  6E84               	movwf	132,c	;volatile
  2252  001324                     
  2253                           ;LCD.c: 243:        _delay((unsigned long)((1)*(8000000/4000000.0)));
  2254  001324  D000               	nop2		;2 cycle nop
  2255  001326  0012               	return		;funcret
  2256  001328                     __end_of_LCD_Data_Out:
  2257                           	opt callstack 0
  2258                           
  2259 ;; *************** function _GPIO_Init_Pin *****************
  2260 ;; Defined at:
  2261 ;;		line 30 in file "GPIO.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  DirRegAddres    2    0[COMRAM] PTR volatile unsigned ch
  2264 ;;		 -> TRISE(1), TRISC(1), TRISB(1), 
  2265 ;;  pin_number      1    2[COMRAM] unsigned char 
  2266 ;;  dir             1    3[COMRAM] unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  ret             1    0        unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         4       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2281 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:       10 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_LCD_Init
  2288 ;;		_DO_Init
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text12
  2293  000FB4                     __ptext12:
  2294                           	opt callstack 0
  2295  000FB4                     _GPIO_Init_Pin:
  2296                           	opt callstack 29
  2297  000FB4                     
  2298                           ;GPIO.c: 34:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2299  000FB4  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2300  000FB8  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2301  000FBC  5092               	movf	146,w,c	;volatile
  2302  000FBE  18DE               	xorwf	postinc2,w,c
  2303  000FC0  B4D8               	btfsc	status,2,c
  2304  000FC2  EFE5  F007         	goto	u571
  2305  000FC6  EFE7  F007         	goto	u570
  2306  000FCA                     u571:
  2307  000FCA  EF1D  F008         	goto	l1314
  2308  000FCE                     u570:
  2309  000FCE  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2310  000FD2  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2311  000FD6  5093               	movf	147,w,c	;volatile
  2312  000FD8  18DE               	xorwf	postinc2,w,c
  2313  000FDA  B4D8               	btfsc	status,2,c
  2314  000FDC  EFF2  F007         	goto	u581
  2315  000FE0  EFF4  F007         	goto	u580
  2316  000FE4                     u581:
  2317  000FE4  EF1D  F008         	goto	l1314
  2318  000FE8                     u580:
  2319  000FE8  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2320  000FEC  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2321  000FF0  5094               	movf	148,w,c	;volatile
  2322  000FF2  18DE               	xorwf	postinc2,w,c
  2323  000FF4  B4D8               	btfsc	status,2,c
  2324  000FF6  EFFF  F007         	goto	u591
  2325  000FFA  EF01  F008         	goto	u590
  2326  000FFE                     u591:
  2327  000FFE  EF1D  F008         	goto	l1314
  2328  001002                     u590:
  2329  001002  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2330  001006  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2331  00100A  5095               	movf	149,w,c	;volatile
  2332  00100C  18DE               	xorwf	postinc2,w,c
  2333  00100E  B4D8               	btfsc	status,2,c
  2334  001010  EF0C  F008         	goto	u601
  2335  001014  EF0E  F008         	goto	u600
  2336  001018                     u601:
  2337  001018  EF1D  F008         	goto	l1314
  2338  00101C                     u600:
  2339  00101C  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2340  001020  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2341  001024  5096               	movf	150,w,c	;volatile
  2342  001026  18DE               	xorwf	postinc2,w,c
  2343  001028  B4D8               	btfsc	status,2,c
  2344  00102A  EF19  F008         	goto	u611
  2345  00102E  EF1B  F008         	goto	u610
  2346  001032                     u611:
  2347  001032  EF1D  F008         	goto	l1314
  2348  001036                     u610:
  2349  001036                     
  2350                           ;GPIO.c: 40:     }
  2351  001036  EF44  F008         	goto	l24
  2352  00103A                     l1314:
  2353                           
  2354                           ;GPIO.c: 42:     {;GPIO.c: 43:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  2355  00103A  C003  F005         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin
  2356  00103E  C004  F006         	movff	GPIO_Init_Pin@dir,??_GPIO_Init_Pin+1
  2357  001042  2A05               	incf	??_GPIO_Init_Pin^0,f,c
  2358  001044  EF26  F008         	goto	u624
  2359  001048                     u625:
  2360  001048  90D8               	bcf	status,0,c
  2361  00104A  3606               	rlcf	(??_GPIO_Init_Pin+1)^0,f,c
  2362  00104C                     u624:
  2363  00104C  2E05               	decfsz	??_GPIO_Init_Pin^0,f,c
  2364  00104E  EF24  F008         	goto	u625
  2365  001052  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2366  001056  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2367  00105A  50DF               	movf	indf2,w,c
  2368  00105C  6E07               	movwf	(??_GPIO_Init_Pin+2)^0,c
  2369  00105E  C003  F008         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin+3
  2370  001062  0E01               	movlw	1
  2371  001064  6E09               	movwf	(??_GPIO_Init_Pin+4)^0,c
  2372  001066  2A08               	incf	(??_GPIO_Init_Pin+3)^0,f,c
  2373  001068  EF38  F008         	goto	u634
  2374  00106C                     u635:
  2375  00106C  90D8               	bcf	status,0,c
  2376  00106E  3609               	rlcf	(??_GPIO_Init_Pin+4)^0,f,c
  2377  001070                     u634:
  2378  001070  2E08               	decfsz	(??_GPIO_Init_Pin+3)^0,f,c
  2379  001072  EF36  F008         	goto	u635
  2380  001076  5009               	movf	(??_GPIO_Init_Pin+4)^0,w,c
  2381  001078  0AFF               	xorlw	255
  2382  00107A  1407               	andwf	(??_GPIO_Init_Pin+2)^0,w,c
  2383  00107C  1006               	iorwf	(??_GPIO_Init_Pin+1)^0,w,c
  2384  00107E  C001  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2385  001082  C002  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2386  001086  6EDF               	movwf	indf2,c
  2387  001088                     l24:
  2388  001088  0012               	return		;funcret
  2389  00108A                     __end_of_GPIO_Init_Pin:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function _GPIO_Init_Nibble *****************
  2393 ;; Defined at:
  2394 ;;		line 49 in file "GPIO.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  DirRegAddres    2    0[COMRAM] PTR volatile unsigned ch
  2397 ;;		 -> TRISD(1), 
  2398 ;;  nibble_num      1    2[COMRAM] unsigned char 
  2399 ;;  dir             1    3[COMRAM] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  ret             1    0        unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      unsigned char 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         4       0       0       0       0       0       0       0       0
  2412 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2414 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:       10 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_LCD_Init
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text13
  2425  000CB6                     __ptext13:
  2426                           	opt callstack 0
  2427  000CB6                     _GPIO_Init_Nibble:
  2428                           	opt callstack 29
  2429  000CB6                     
  2430                           ;GPIO.c: 53:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2431  000CB6  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2432  000CBA  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2433  000CBE  5092               	movf	146,w,c	;volatile
  2434  000CC0  18DE               	xorwf	postinc2,w,c
  2435  000CC2  B4D8               	btfsc	status,2,c
  2436  000CC4  EF66  F006         	goto	u641
  2437  000CC8  EF68  F006         	goto	u640
  2438  000CCC                     u641:
  2439  000CCC  EF9E  F006         	goto	l1332
  2440  000CD0                     u640:
  2441  000CD0  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2442  000CD4  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2443  000CD8  5093               	movf	147,w,c	;volatile
  2444  000CDA  18DE               	xorwf	postinc2,w,c
  2445  000CDC  B4D8               	btfsc	status,2,c
  2446  000CDE  EF73  F006         	goto	u651
  2447  000CE2  EF75  F006         	goto	u650
  2448  000CE6                     u651:
  2449  000CE6  EF9E  F006         	goto	l1332
  2450  000CEA                     u650:
  2451  000CEA  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2452  000CEE  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2453  000CF2  5094               	movf	148,w,c	;volatile
  2454  000CF4  18DE               	xorwf	postinc2,w,c
  2455  000CF6  B4D8               	btfsc	status,2,c
  2456  000CF8  EF80  F006         	goto	u661
  2457  000CFC  EF82  F006         	goto	u660
  2458  000D00                     u661:
  2459  000D00  EF9E  F006         	goto	l1332
  2460  000D04                     u660:
  2461  000D04  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2462  000D08  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2463  000D0C  5095               	movf	149,w,c	;volatile
  2464  000D0E  18DE               	xorwf	postinc2,w,c
  2465  000D10  B4D8               	btfsc	status,2,c
  2466  000D12  EF8D  F006         	goto	u671
  2467  000D16  EF8F  F006         	goto	u670
  2468  000D1A                     u671:
  2469  000D1A  EF9E  F006         	goto	l1332
  2470  000D1E                     u670:
  2471  000D1E  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2472  000D22  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2473  000D26  5096               	movf	150,w,c	;volatile
  2474  000D28  18DE               	xorwf	postinc2,w,c
  2475  000D2A  B4D8               	btfsc	status,2,c
  2476  000D2C  EF9A  F006         	goto	u681
  2477  000D30  EF9C  F006         	goto	u680
  2478  000D34                     u681:
  2479  000D34  EF9E  F006         	goto	l1332
  2480  000D38                     u680:
  2481  000D38                     
  2482                           ;GPIO.c: 59:     }
  2483  000D38  EFE6  F006         	goto	l33
  2484  000D3C                     l1332:
  2485                           
  2486                           ;GPIO.c: 61:     {;GPIO.c: 62:         ((*DirRegAddress)= ((*DirRegAddress)& ~(0xF<<(nib
      +                          ble_num*4)))); ((*DirRegAddress)=((*DirRegAddress)|(((dir)?(~0):(0))&(0xF<<(nibble_num*4
      +                          )))));
  2487  000D3C  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2488  000D40  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2489  000D44  50DF               	movf	indf2,w,c
  2490  000D46  6E05               	movwf	??_GPIO_Init_Nibble^0,c
  2491  000D48  5003               	movf	GPIO_Init_Nibble@nibble_num^0,w,c
  2492  000D4A  0D04               	mullw	4
  2493  000D4C  CFF3 F006          	movff	prodl,??_GPIO_Init_Nibble+1
  2494  000D50  0E0F               	movlw	15
  2495  000D52  6E07               	movwf	(??_GPIO_Init_Nibble+2)^0,c
  2496  000D54  2A06               	incf	(??_GPIO_Init_Nibble+1)^0,f,c
  2497  000D56  EFAF  F006         	goto	u694
  2498  000D5A                     u695:
  2499  000D5A  90D8               	bcf	status,0,c
  2500  000D5C  3607               	rlcf	(??_GPIO_Init_Nibble+2)^0,f,c
  2501  000D5E                     u694:
  2502  000D5E  2E06               	decfsz	(??_GPIO_Init_Nibble+1)^0,f,c
  2503  000D60  EFAD  F006         	goto	u695
  2504  000D64  5007               	movf	(??_GPIO_Init_Nibble+2)^0,w,c
  2505  000D66  0AFF               	xorlw	255
  2506  000D68  1405               	andwf	??_GPIO_Init_Nibble^0,w,c
  2507  000D6A  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2508  000D6E  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2509  000D72  6EDF               	movwf	indf2,c
  2510  000D74  5004               	movf	GPIO_Init_Nibble@dir^0,w,c
  2511  000D76  A4D8               	btfss	status,2,c
  2512  000D78  EFC0  F006         	goto	u701
  2513  000D7C  EFC2  F006         	goto	u700
  2514  000D80                     u701:
  2515  000D80  EFC8  F006         	goto	l30
  2516  000D84                     u700:
  2517  000D84  0E00               	movlw	0
  2518  000D86  6E0A               	movwf	(_GPIO_Init_Nibble$44+1)^0,c
  2519  000D88  0E00               	movlw	0
  2520  000D8A  6E09               	movwf	_GPIO_Init_Nibble$44^0,c
  2521  000D8C  EFCA  F006         	goto	l1338
  2522  000D90                     l30:
  2523  000D90  6809               	setf	_GPIO_Init_Nibble$44^0,c
  2524  000D92  680A               	setf	(_GPIO_Init_Nibble$44+1)^0,c
  2525  000D94                     l1338:
  2526  000D94  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2527  000D98  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2528  000D9C  50DF               	movf	indf2,w,c
  2529  000D9E  6E05               	movwf	??_GPIO_Init_Nibble^0,c
  2530  000DA0  5003               	movf	GPIO_Init_Nibble@nibble_num^0,w,c
  2531  000DA2  0D04               	mullw	4
  2532  000DA4  CFF3 F006          	movff	prodl,??_GPIO_Init_Nibble+1
  2533  000DA8  0E0F               	movlw	15
  2534  000DAA  6E07               	movwf	(??_GPIO_Init_Nibble+2)^0,c
  2535  000DAC  2A06               	incf	(??_GPIO_Init_Nibble+1)^0,f,c
  2536  000DAE  EFDB  F006         	goto	u714
  2537  000DB2                     u715:
  2538  000DB2  90D8               	bcf	status,0,c
  2539  000DB4  3607               	rlcf	(??_GPIO_Init_Nibble+2)^0,f,c
  2540  000DB6                     u714:
  2541  000DB6  2E06               	decfsz	(??_GPIO_Init_Nibble+1)^0,f,c
  2542  000DB8  EFD9  F006         	goto	u715
  2543  000DBC  5007               	movf	(??_GPIO_Init_Nibble+2)^0,w,c
  2544  000DBE  1409               	andwf	_GPIO_Init_Nibble$44^0,w,c
  2545  000DC0  1005               	iorwf	??_GPIO_Init_Nibble^0,w,c
  2546  000DC2  C001  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2547  000DC6  C002  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2548  000DCA  6EDF               	movwf	indf2,c
  2549  000DCC                     l33:
  2550  000DCC  0012               	return		;funcret
  2551  000DCE                     __end_of_GPIO_Init_Nibble:
  2552                           	opt callstack 0
  2553                           
  2554                           	psect	rparam
  2555  0000                     tosu	equ	0xFFF
  2556                           tosh	equ	0xFFE
  2557                           tosl	equ	0xFFD
  2558                           stkptr	equ	0xFFC
  2559                           pclatu	equ	0xFFB
  2560                           pclath	equ	0xFFA
  2561                           pcl	equ	0xFF9
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           prodh	equ	0xFF4
  2567                           prodl	equ	0xFF3
  2568                           indf0	equ	0xFEF
  2569                           postinc0	equ	0xFEE
  2570                           postdec0	equ	0xFED
  2571                           preinc0	equ	0xFEC
  2572                           plusw0	equ	0xFEB
  2573                           fsr0h	equ	0xFEA
  2574                           fsr0l	equ	0xFE9
  2575                           wreg	equ	0xFE8
  2576                           indf1	equ	0xFE7
  2577                           postinc1	equ	0xFE6
  2578                           postdec1	equ	0xFE5
  2579                           preinc1	equ	0xFE4
  2580                           plusw1	equ	0xFE3
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           bsr	equ	0xFE0
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           postdec2	equ	0xFDD
  2587                           preinc2	equ	0xFDC
  2588                           plusw2	equ	0xFDB
  2589                           fsr2h	equ	0xFDA
  2590                           fsr2l	equ	0xFD9
  2591                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        10
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      52
    BANK0           160      0      84
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_SetString@sym	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    S45$dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    S45$portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    DOArray.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    GPIO_Init_Nibble@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), 

    GPIO_Init_Pin@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_LCD_SetString
    _LCD_Update->_LCD_SetDDRAM
    _LCD_SetDDRAM->_LCD_Write_Instruction
    _LCD_SetSymbol->___awdiv
    _LCD_SetString->___awdiv
    _LCD_Init->_LCD_Init_Custom_Sym
    _LCD_Init_Custom_Sym->_LCD_SetCGRAM
    _LCD_Write_Symbol->_LCD_Data_Out
    _LCD_SetCGRAM->_LCD_Write_Instruction
    _LCD_Write_Instruction->_LCD_Data_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7062
                                             20 COMRAM     4     4      0
                           _LCD_Init
                      _LCD_SetString
                      _LCD_SetSymbol
                         _LCD_Update
 ---------------------------------------------------------------------------------
 (1) _LCD_Update                                          13    13      0     515
                                              3 COMRAM    13    13      0
                       _LCD_SetDDRAM
                   _LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (2) _LCD_SetDDRAM                                         1     1      0      90
                                              2 COMRAM     1     1      0
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (1) _LCD_SetSymbol                                        8     6      2    1996
                                              8 COMRAM     8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _LCD_SetString                                       12     7      5    1218
                                              8 COMRAM    12     7      5
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    3332
                                             13 COMRAM     1     1      0
                   _GPIO_Init_Nibble
                      _GPIO_Init_Pin
                       _LCD_Data_Out
                _LCD_Init_Custom_Sym
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (2) _LCD_Init_Custom_Sym                                 10    10      0    1808
                                              3 COMRAM    10    10      0
                       _LCD_SetCGRAM
                   _LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Symbol                                     1     1      0      66
                                              1 COMRAM     1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_SetCGRAM                                         1     1      0      90
                                              2 COMRAM     1     1      0
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Instruction                                1     1      0      66
                                              1 COMRAM     1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Out                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                       10     6      4     912
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Nibble                                    10     6      4     524
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _GPIO_Init_Nibble
     _GPIO_Init_Pin
     _LCD_Data_Out
     _LCD_Init_Custom_Sym
       _LCD_SetCGRAM
         _LCD_Write_Instruction
           _LCD_Data_Out
       _LCD_Write_Symbol
         _LCD_Data_Out
     _LCD_Write_Instruction
       _LCD_Data_Out
   _LCD_SetString
     ___awdiv
   _LCD_SetSymbol
     ___awdiv
   _LCD_Update
     _LCD_SetDDRAM
       _LCD_Write_Instruction
         _LCD_Data_Out
     _LCD_Write_Symbol
       _LCD_Data_Out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      54       5       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      34       1       54.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8      20        0.0%
DATA                 0      0      D8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 03 18:18:35 2020

                 ?_LCD_Data_Out 0001                              l30 0D90                              l24 1088  
                            l33 0DCC                              l90 1364                              l84 0FB2  
                            l93 1326                              l87 1346                              l97 12A8  
                  ___awdiv@sign 0006                     __CFG_BOR$ON 000000                     ?_LCD_Update 0001  
                   __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_LVP$ON 000000  
                           l101 0ED2                             l111 0CB4                             l107 1382  
                           l140 0A8C                             l133 097A                             l143 1374  
                           l137 0A30                             l408 114C                    __CFG_CPB$OFF 000000  
                           u600 101C                             u601 1018                             u610 1036  
                  __CFG_CPD$OFF 000000                             u611 1032                             u700 0D84  
                           u701 0D80                             u640 0CD0                             u624 104C  
                           u800 109C                             u641 0CCC                             u625 1048  
                           u721 0812                             u801 1098                             u714 0DB6  
                           u650 0CEA                             u634 1070                             u570 0FCE  
                           u730 085A                             u810 10B6                             u715 0DB2  
                           u651 0CE6                             u635 106C                             u571 0FCA  
                           u731 0856                             u811 10B2                             u660 0D04  
                           u580 0FE8                             u740 08BA                             u820 10DC  
                           u661 0D00                             u581 0FE4                             u741 08B6  
                           u821 10D8                             u670 0D1E                             u590 1002  
                           u750 091A                             u830 10FA                             u910 0DDE  
                           u671 0D1A                             u591 0FFE                             u751 0916  
                           u831 10F6                             u911 0DDA                             u680 0D38  
                           u760 097A                             u840 1116                             u920 0DEE  
                           u904 1262                             u681 0D34                             u761 0976  
                           u841 1112                             u921 0DEA                             u905 125C  
                           u770 09D4                             u850 113C                             u771 09D0  
                           u851 1138                             u780 0A30                             u940 0ED2  
                           u781 0A2C                             u941 0ECE                             u694 0D5E  
                           u790 0A8C                             u934 0E5E                             u950 0AB6  
                           u695 0D5A                             u791 0A88                             u935 0E58  
                           u951 0AB2                             u880 120E                             u960 0B04  
                           u881 120A                             u961 0B00                             u890 121E  
                           u891 121A                             u980 0B74                             u981 0B70  
                           u974 0B54                             u975 0B4E                             u994 0BE0  
                           u995 0BDA                   _LCD_SetString 0DCE                   _LCD_SetSymbol 11FC  
                           wreg 000FE8                   ?_LCD_SetDDRAM 0001                   ?_LCD_SetCGRAM 0001  
                  __CFG_FOSC$HS 000000                    __CFG_WDT$OFF 000000                            l1300 0FB4  
                          l1310 101C                            l1302 0FB4                            l1320 0CB6  
                          l1312 1036                            l1304 0FCE                            l1400 0948  
                          l1330 0D38                            l1322 0CD0                            l1306 0FE8  
                          l1314 103A                            l1410 098E                            l1402 095A  
                          l1324 0CEA                            l1332 0D3C                            l1308 1002  
                          l1420 09A2                            l1412 0994                            l1404 095E  
                          l1500 1120                            l1334 0D74                            l1326 0D04  
                          l1318 0CB6                            l1430 09EA                            l1422 09B4  
                          l1414 099A                            l1406 097C                            l1342 0808  
                          l1502 1126                            l1336 0D84                            l1328 0D1E  
                          l1280 1324                            l1440 09FE                            l1432 09F0  
                          l1424 09B8                            l1408 098C                            l1360 087A  
                          l1352 0828                            l1344 081A                            l1520 0EFC  
                          l1504 112C                            l1338 0D94                            l1274 12FE  
                          l1282 134A                            l1290 1338                            l1450 0A4C  
                          l1442 0A10                            l1434 09F6                            l1426 09D4  
                          l1370 089A                            l1362 0880                            l1354 083A  
                          l1346 0820                            l1530 0F32                            l1522 0F10  
                          l1506 113C                            l1276 1316                            l1284 1356  
                          l1292 1340                            l1460 0A6C                            l1452 0A52  
                          l1444 0A14                            l1428 09E8                            l1372 089E  
                          l1356 083E                            l1540 0F58                            l1532 0F40  
                          l1524 0F20                            l1508 1144                            l1620 0BC8  
                          l1612 0B08                            l1604 0AC6                            l1278 131E  
                          l1286 135E                            l1294 1368                            l1462 0A70  
                          l1446 0A32                            l1390 091A                            l1374 08BA  
                          l1358 085A                            l1550 0F7C                            l1542 0F60  
                          l1534 0F46                            l1526 0F26                            l1518 0ED4  
                          l1470 108E                            l1630 0C7A                            l1622 0C22  
                          l1614 0B74                            l1606 0B04                            l1296 136C  
                          l1288 132A                            l1448 0A4A                            l1392 093A  
                          l1384 08E8                            l1376 08DA                            l1368 0888  
                          l1560 0FA6                            l1552 0F82                            l1544 0F66  
                          l1536 0F4C                            l1528 0F2C                            l1480 10BE  
                          l1472 109C                            l1464 1378                            l1640 0CB0  
                          l1624 0C24                            l1616 0B90                            l1632 0C8A  
                          l1298 136E                            l1458 0A5A                            l1394 0940  
                          l1386 08FA                            l1378 08E0                            l1562 0FAE  
                          l1554 0F92                            l1546 0F6E                            l1538 0F52  
                          l1490 10EC                            l1482 10C2                            l1474 10A4  
                          l1570 1222                            l1466 137C                            l1634 0C8C  
                          l1626 0C36                            l1618 0B96                            l1650 117C  
                          l1642 114E                            l1388 08FE                            l1556 0F98  
                          l1548 0F74                            l1492 10FA                            l1484 10CA  
                          l1476 10A8                            l1468 108A                            l1580 0DF2  
                          l1572 1246                            l1564 11FE                            l1636 0C9C  
                          l1628 0C78                            l1660 11CC                            l1652 118A  
                          l1644 1152                            l1558 0FA0                            l1494 1100  
                          l1486 10DC                            l1478 10B6                            l1582 0DFE  
                          l1574 0DCE                            l1566 120E                            l1638 0C9E  
                          l1590 0A8E                            l1662 11DA                            l1654 1198  
                          l1646 1160                            l1496 1116                            l1488 10E4  
                          l1584 0E40                            l1576 0DDE                            l1592 0A92  
                          l1664 11DA                            l1656 11A6                            l1648 116E  
                          l1498 111E                            l1586 0EAA                            l1594 0A9A  
                          l1666 11F0                            l1658 11B4                            l1588 0EAE  
                          l1598 0ABA                            STR_1 0801                            u1000 0C36  
                          u1001 0C32                            u1010 0C74                            u1011 0C70  
                          u1020 0C8A                            u1021 0C86                            u1030 0C9C  
                          u1031 0C98                            u1040 0CB0                            u1041 0CAC  
                          u1107 0F68                            u1117 0F76                            u1127 0F88  
                          u1137 0F9A                            u1057 11E4                            u1147 0FA8  
                          u1067 0F16                            u1157 1318                            u1077 0F38  
                          u1087 0F48                            u1097 0F5A             LCD_Write_Symbol@sym 0002  
             ?_LCD_Write_Symbol 0001                            _main 114E               ?_GPIO_Init_Nibble 0001  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000              ??_LCD_Write_Symbol 0002                   __CFG_IESO$OFF 000000  
            ??_GPIO_Init_Nibble 0005                   __CFG_MCLRE$ON 000000                    ___param_bank 000000  
                 _GPIO_Init_Pin 0FB4                  ??_LCD_Data_Out 0001                __end_of_LCD_Init 0FB4  
           GPIO_Init_Nibble@dir 0004                   __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000  
                         ?_main 0001                 __end_of___awdiv 114E                  ?_LCD_SetString 0009  
               ___awdiv@divisor 0003                  ?_LCD_SetSymbol 0009                     LCD_Update@i 000F  
                   LCD_Update@j 0010                 ___awdiv@counter 0005                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                ??_LCD_SetDDRAM 0003                  ??_LCD_SetCGRAM 0003                   __CFG_USBDIV$1 000000  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                           tablat 000FF5                           plusw1 000FE3  
                         plusw2 000FDB             __size_of_LCD_Update 0228                           status 000FD8  
                __CFG_ICPRT$OFF 000000                  __CFG_PBADEN$ON 000000                  ?_GPIO_Init_Pin 0001  
               __initialization 12AA                    __end_of_main 11FC                          ??_main 0015  
                 __activetblptr 000001      GPIO_Init_Pin@DirRegAddress 0001                ___awdiv@dividend 0001  
                __CFG_XINST$OFF 000000                       ??___awdiv 0005                  __CFG_STVREN$ON 000000  
                        clear_0 12D0                          clear_1 12DC                          clear_2 12E8  
               ??_LCD_SetString 000E                 ??_LCD_SetSymbol 000B                ___awdiv@quotient 0007  
                  __pdataCOMRAM 0029                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8            __end_of_LCD_Data_Out 1328  
                    __accesstop 0060         __end_of__initialization 12EE                       ?_LCD_Init 0001  
               ??_GPIO_Init_Pin 0005                   ___rparam_used 000001                GPIO_Init_Pin@dir 0004  
          __end_of_LCD_SetDDRAM 1384            __end_of_LCD_SetCGRAM 1376     __end_of_LCD_Init_Custom_Sym 0A8E  
                __pcstackCOMRAM 0001           _lines_offset_adresses 0031                    ??_LCD_Update 0004  
                    __pbssBANK0 0060                      __pbssBANK1 0100                      ??_LCD_Init 000E  
            __end_of_LCD_Update 0CB6           _LCD_Write_Instruction 1348       __size_of_LCD_Write_Symbol 0020  
     __size_of_GPIO_Init_Nibble 0118                         _DOArray 0017   GPIO_Init_Nibble@DirRegAddress 0001  
    GPIO_Init_Nibble@nibble_num 0003                 __CFG_VREGEN$OFF 000000                LCD_Data_Out@byte 0001  
           _GPIO_Init_Nibble$44 0009                         __Hparam 0000                         __Lparam 0000  
                       ___awdiv 108A                    __psmallconst 0800                         __pcinit 12AA  
                       __ramtop 0800                         __ptext0 114E                         __ptext1 0A8E  
                       __ptext2 1376                         __ptext3 11FC                         __ptext4 0DCE  
                       __ptext5 108A                         __ptext6 0ED4                         __ptext7 0808  
                       __ptext8 1328                         __ptext9 1366           __size_of_LCD_Data_Out 002C  
          end_of_initialization 12EE           __size_of_LCD_SetDDRAM 000E           __size_of_LCD_SetCGRAM 0010  
        ?_LCD_Write_Instruction 0001                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                    _LCD_Data_Out 12FC  
                  _LCD_SetDDRAM 1376                    _LCD_SetCGRAM 1366         GPIO_Init_Pin@pin_number 0003  
             __size_of_LCD_Init 00E0             LCD_SetString@column 000C             LCD_SetString@number 000D  
              _LCD_Write_Symbol 1328                   __pidataCOMRAM 1384                _GPIO_Init_Nibble 0CB6  
         __end_of_LCD_SetString 0ED4           __end_of_LCD_SetSymbol 12AA             start_initialization 12AA  
              LCD_SetString@row 000B                LCD_SetString@sym 0009                LCD_SetSymbol@row 0009  
              LCD_SetSymbol@sym 0010             LCD_SetSymbol@column 000A           __end_of_GPIO_Init_Pin 108A  
              __CFG_LPT1OSC$OFF 000000    __size_of_LCD_Init_Custom_Sym 0286                     __pbssCOMRAM 0017  
                LCD_SetString@i 0013                    _line_counter 0028                        ?___awdiv 0001  
                   __smallconst 0800               LCD_Update@address 000D                        _LCD_Init 0ED4  
             LCD_Update@updated 000E         ??_LCD_Write_Instruction 0002        LCD_Init_Custom_Sym@F3257 0029  
              __CFG_WDTPS$32768 000000             LCD_SetDDRAM@ADDRESS 0003                       copy_data0 12BE  
      __end_of_LCD_Write_Symbol 1348        __end_of_GPIO_Init_Nibble 0DCE             LCD_SetCGRAM@ADDRESS 0003  
                      __Hrparam 0000                 _LCD_Data_Buffer 0100                        __Lrparam 0000  
                  __Lsmallconst 0800                __size_of___awdiv 00C4       LCD_Write_Instruction@inst 0002  
                      __ptext10 1348                        __ptext11 12FC                        __ptext12 0FB4  
                      __ptext13 0CB6                    _tick_counter 0026                   __size_of_main 00AE  
           _LCD_Init_Custom_Sym 0808         LCD_Init_Custom_Sym@data 0004                      _LCD_Update 0A8E  
          ?_LCD_Init_Custom_Sym 0001           __CFG_CPUDIV$OSC1_PLL2 000000          __size_of_LCD_SetString 0106  
        __size_of_LCD_SetSymbol 00AE           ??_LCD_Init_Custom_Sym 0004          __size_of_GPIO_Init_Pin 00D6  
          LCD_Init_Custom_Sym@i 000C  __size_of_LCD_Write_Instruction 001E   __end_of_LCD_Write_Instruction 1366  
                   _update_flag 0060  
