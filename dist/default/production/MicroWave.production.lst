

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 22:08:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK0
    85  001A12                     __pidataBANK0:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for LCD_Init_Custom_Sym@F3257
    89  001A12  00                 	db	0
    90  001A13  00                 	db	0
    91  001A14  00                 	db	0
    92  001A15  00                 	db	0
    93  001A16  00                 	db	0
    94  001A17  F8                 	db	248
    95  001A18  F8                 	db	248
    96  001A19  00                 	db	0
    97                           
    98                           ;initializer for _lines_offset_adresses
    99  001A1A  00                 	db	0
   100  001A1B  40                 	db	64
   101  0000                     _TMR0	set	4054
   102  0000                     _PORTE	set	3972
   103  0000                     _TRISA	set	3986
   104  0000                     _PORTC	set	3970
   105  0000                     _PORTB	set	3969
   106  0000                     _PORTD	set	3971
   107  0000                     _TRISE	set	3990
   108  0000                     _TRISD	set	3989
   109  0000                     _TRISC	set	3988
   110  0000                     _TRISB	set	3987
   111  0000                     _RDPU	set	31783
   112  0000                     _GIE	set	32663
   113  0000                     _TMR0IE	set	32661
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0ON	set	32431
   116  0000                     _T08BIT	set	32430
   117  0000                     _T0CS	set	32429
   118  0000                     _T0PS0	set	32424
   119  0000                     _T0PS1	set	32425
   120  0000                     _T0PS2	set	32426
   121  0000                     _PSA	set	32427
   122  0000                     _RBPU	set	32655
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  001802                     __pcinit:
   128                           	opt callstack 0
   129  001802                     start_initialization:
   130                           	opt callstack 0
   131  001802                     __initialization:
   132                           	opt callstack 0
   133                           
   134                           ; Initialize objects allocated to BANK0 (10 bytes)
   135                           ; load TBLPTR registers with __pidataBANK0
   136  001802  0E12               	movlw	low __pidataBANK0
   137  001804  6EF6               	movwf	tblptrl,c
   138  001806  0E1A               	movlw	high __pidataBANK0
   139  001808  6EF7               	movwf	tblptrh,c
   140  00180A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   141  00180C  6EF8               	movwf	tblptru,c
   142  00180E  EE00  F0F5         	lfsr	0,__pdataBANK0
   143  001812  EE10 F00A          	lfsr	1,10
   144  001816                     copy_data0:
   145  001816  0009               	tblrd		*+
   146  001818  CFF5 FFEE          	movff	tablat,postinc0
   147  00181C  50E5               	movf	postdec1,w,c
   148  00181E  50E1               	movf	fsr1l,w,c
   149  001820  E1FA               	bnz	copy_data0
   150                           
   151                           ; Clear objects allocated to BANK1 (80 bytes)
   152  001822  EE01  F000         	lfsr	0,__pbssBANK1
   153  001826  0E50               	movlw	80
   154  001828                     clear_0:
   155  001828  6AEE               	clrf	postinc0,c
   156  00182A  06E8               	decf	wreg,f,c
   157  00182C  E1FD               	bnz	clear_0
   158                           
   159                           ; Clear objects allocated to BANK0 (149 bytes)
   160  00182E  EE00  F060         	lfsr	0,__pbssBANK0
   161  001832  0E95               	movlw	149
   162  001834                     clear_1:
   163  001834  6AEE               	clrf	postinc0,c
   164  001836  06E8               	decf	wreg,f,c
   165  001838  E1FD               	bnz	clear_1
   166                           
   167                           ; Clear objects allocated to COMRAM (48 bytes)
   168  00183A  EE00  F001         	lfsr	0,__pbssCOMRAM
   169  00183E  0E30               	movlw	48
   170  001840                     clear_2:
   171  001840  6AEE               	clrf	postinc0,c
   172  001842  06E8               	decf	wreg,f,c
   173  001844  E1FD               	bnz	clear_2
   174  001846                     end_of_initialization:
   175                           	opt callstack 0
   176  001846                     __end_of__initialization:
   177                           	opt callstack 0
   178  001846  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   179  001848  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   180  00184A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  00184C  6EF8               	movwf	tblptru,c
   182  00184E  0100               	movlb	0
   183  001850  EFCC  F00C         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186  000001                     __pbssCOMRAM:
   187                           	opt callstack 0
   188  000001                     _keypad:
   189                           	opt callstack 0
   190  000001                     	ds	35
   191  000024                     _SW_DATA:
   192                           	opt callstack 0
   193  000024                     	ds	6
   194  00002A                     _tick_counter:
   195                           	opt callstack 0
   196  00002A                     	ds	2
   197  00002C                     Keypad@tick_counter:
   198                           	opt callstack 0
   199  00002C                     	ds	1
   200  00002D                     _current_column:
   201                           	opt callstack 0
   202  00002D                     	ds	1
   203  00002E                     	ds	1
   204  00002F                     _line_counter:
   205                           	opt callstack 0
   206  00002F                     	ds	1
   207  000030                     SW_Update@SW_Time_Counter:
   208                           	opt callstack 0
   209  000030                     	ds	1
   210                           
   211                           	psect	bssBANK0
   212  000060                     __pbssBANK0:
   213                           	opt callstack 0
   214  000060                     _update_flag:
   215                           	opt callstack 0
   216  000060                     	ds	84
   217  0000B4                     _KP_Btn_Data:
   218                           	opt callstack 0
   219  0000B4                     	ds	36
   220  0000D8                     _DOArray:
   221                           	opt callstack 0
   222  0000D8                     	ds	15
   223  0000E7                     _SW:
   224                           	opt callstack 0
   225  0000E7                     	ds	10
   226  0000F1                     	ds	2
   227  0000F3                     _tempCounter:
   228                           	opt callstack 0
   229  0000F3                     	ds	2
   230                           
   231                           	psect	dataBANK0
   232  0000F5                     __pdataBANK0:
   233                           	opt callstack 0
   234  0000F5                     LCD_Init_Custom_Sym@F3257:
   235                           	opt callstack 0
   236  0000F5                     	ds	8
   237  0000FD                     _lines_offset_adresses:
   238                           	opt callstack 0
   239  0000FD                     	ds	2
   240                           
   241                           	psect	bssBANK1
   242  000100                     __pbssBANK1:
   243                           	opt callstack 0
   244  000100                     _LCD_Data_Buffer:
   245                           	opt callstack 0
   246  000100                     	ds	80
   247                           
   248                           	psect	cstackBANK1
   249  000150                     __pcstackBANK1:
   250                           	opt callstack 0
   251  000150                     LCD_Write_Symbol@sym:
   252                           	opt callstack 0
   253  000150                     LCD_Write_Instruction@inst:
   254                           	opt callstack 0
   255  000150                     GPIO_Init_Pin@DirRegAddress:
   256                           	opt callstack 0
   257  000150                     GPIO_Init_Nibble@DirRegAddress:
   258                           	opt callstack 0
   259                           
   260                           ; 2 bytes @ 0x0
   261  000150                     	ds	1
   262  000151                     LCD_SetCGRAM@ADDRESS:
   263                           	opt callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266  000151                     	ds	1
   267  000152                     GPIO_Init_Pin@pin_number:
   268                           	opt callstack 0
   269  000152                     GPIO_Init_Nibble@nibble_num:
   270                           	opt callstack 0
   271  000152                     LCD_Init_Custom_Sym@data:
   272                           	opt callstack 0
   273                           
   274                           ; 8 bytes @ 0x2
   275  000152                     	ds	1
   276  000153                     GPIO_Init_Pin@dir:
   277                           	opt callstack 0
   278  000153                     GPIO_Init_Nibble@dir:
   279                           	opt callstack 0
   280                           
   281                           ; 1 bytes @ 0x3
   282  000153                     	ds	1
   283  000154                     ??_GPIO_Init_Pin:
   284  000154                     ??_GPIO_Init_Nibble:
   285                           
   286                           ; 1 bytes @ 0x4
   287  000154                     	ds	4
   288  000158                     _GPIO_Init_Nibble$44:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0x8
   292  000158                     	ds	1
   293  000159                     ??_keypad_Init:
   294  000159                     SW_Init@dir:
   295                           	opt callstack 0
   296  000159                     DO_Init@port:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x9
   300  000159                     	ds	1
   301  00015A                     LCD_Init_Custom_Sym@i:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0xA
   305  00015A                     	ds	1
   306  00015B                     SW_Init@port:
   307                           	opt callstack 0
   308  00015B                     DO_Init@dir:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0xB
   312  00015B                     	ds	1
   313  00015C                     ??_LCD_Init:
   314                           
   315                           ; 1 bytes @ 0xC
   316  00015C                     	ds	1
   317  00015D                     SW_Init@pin:
   318                           	opt callstack 0
   319  00015D                     DO_Init@pinN:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0xD
   323  00015D                     	ds	1
   324  00015E                     SW_Init@sw:
   325                           	opt callstack 0
   326  00015E                     DO_Init@state:
   327                           	opt callstack 0
   328                           
   329                           ; 1 bytes @ 0xE
   330  00015E                     	ds	1
   331  00015F                     ??_DO_Init:
   332                           
   333                           ; 1 bytes @ 0xF
   334  00015F                     	ds	5
   335  000164                     DO_Init@DO:
   336                           	opt callstack 0
   337                           
   338                           ; 1 bytes @ 0x14
   339  000164                     	ds	1
   340                           
   341                           	psect	cstackBANK0
   342  0000FF                     __pcstackBANK0:
   343                           	opt callstack 0
   344  0000FF                     LCD_Data_Out@byte:
   345                           	opt callstack 0
   346                           
   347                           ; 1 bytes @ 0x0
   348  0000FF                     	ds	1
   349                           
   350                           	psect	cstackCOMRAM
   351  000031                     __pcstackCOMRAM:
   352                           	opt callstack 0
   353  000031                     ??_SW_UpdateState:
   354  000031                     ?___wmul:
   355                           	opt callstack 0
   356  000031                     ?___awdiv:
   357                           	opt callstack 0
   358  000031                     SW_GetState@sw:
   359                           	opt callstack 0
   360  000031                     i2LCD_Data_Out@byte:
   361                           	opt callstack 0
   362  000031                     ___wmul@multiplier:
   363                           	opt callstack 0
   364  000031                     ___awdiv@dividend:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x0
   368  000031                     	ds	1
   369  000032                     SW_GetState@ret:
   370                           	opt callstack 0
   371  000032                     i2LCD_Write_Symbol@sym:
   372                           	opt callstack 0
   373  000032                     i2LCD_Write_Instruction@inst:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x1
   377  000032                     	ds	1
   378  000033                     SW_UpdateState@sw:
   379                           	opt callstack 0
   380  000033                     LCD_SetDDRAM@ADDRESS:
   381                           	opt callstack 0
   382  000033                     ___wmul@multiplicand:
   383                           	opt callstack 0
   384  000033                     ___awdiv@divisor:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x2
   388  000033                     	ds	1
   389  000034                     ??_LCD_Update:
   390                           
   391                           ; 1 bytes @ 0x3
   392  000034                     	ds	1
   393  000035                     ___awdiv@counter:
   394                           	opt callstack 0
   395  000035                     ___wmul@product:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x4
   399  000035                     	ds	1
   400  000036                     ___awdiv@sign:
   401                           	opt callstack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404  000036                     	ds	1
   405  000037                     ??_keypad_Update:
   406  000037                     ??_SW_Update:
   407  000037                     ___awdiv@quotient:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411  000037                     	ds	2
   412  000039                     LCD_SetSymbol@row:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x8
   416  000039                     	ds	1
   417  00003A                     LCD_SetSymbol@column:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x9
   421  00003A                     	ds	1
   422  00003B                     ??_LCD_SetSymbol:
   423  00003B                     SW_Update@i:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0xA
   427  00003B                     	ds	2
   428  00003D                     LCD_Update@address:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0xC
   432  00003D                     	ds	1
   433  00003E                     LCD_Update@updated:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0xD
   437  00003E                     	ds	1
   438  00003F                     LCD_Update@i:
   439                           	opt callstack 0
   440                           
   441                           ; 1 bytes @ 0xE
   442  00003F                     	ds	1
   443  000040                     LCD_SetSymbol@sym:
   444                           	opt callstack 0
   445  000040                     LCD_Update@j:
   446                           	opt callstack 0
   447  000040                     keypad_Update@i:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xF
   451  000040                     	ds	2
   452  000042                     ??_TMR0_ISR:
   453                           
   454                           ; 1 bytes @ 0x11
   455  000042                     	ds	6
   456  000048                     
   457                           ; 1 bytes @ 0x17
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 91 in file "Microwave.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   477 ;;      Params:         0       0       0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels required when called:   10
   483 ;; This function calls:
   484 ;;		_LCD_Init
   485 ;;		_initDO
   486 ;;		_initOSTMR
   487 ;;		_initSW
   488 ;;		_keypad_Init
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495  001998                     __ptext0:
   496                           	opt callstack 0
   497  001998                     _main:
   498                           	opt callstack 21
   499  001998                     
   500                           ;Microwave.c: 94:     LCD_Init();
   501  001998  EC1A  F009         	call	_LCD_Init	;wreg free
   502  00199C                     
   503                           ;Microwave.c: 95:     initDO();
   504  00199C  ECD0  F00B         	call	_initDO	;wreg free
   505  0019A0                     
   506                           ;Microwave.c: 96:     initOSTMR();
   507  0019A0  EC0E  F00D         	call	_initOSTMR	;wreg free
   508  0019A4                     
   509                           ;Microwave.c: 97:     keypad_Init();
   510  0019A4  EC5F  F003         	call	_keypad_Init	;wreg free
   511  0019A8                     
   512                           ;Microwave.c: 98:     initSW();
   513  0019A8  EC2A  F00C         	call	_initSW	;wreg free
   514  0019AC                     l270:
   515  0019AC  EFD6  F00C         	goto	l270
   516  0019B0  EF07  F000         	goto	start
   517  0019B4                     __end_of_main:
   518                           	opt callstack 0
   519                           
   520 ;; *************** function _keypad_Init *****************
   521 ;; Defined at:
   522 ;;		line 83 in file "Keypad.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   536 ;;      Params:         0       0       0       0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0
   538 ;;      Temps:          0       0       9       0       0       0       0       0       0
   539 ;;      Totals:         0       0       9       0       0       0       0       0       0
   540 ;;Total ram usage:        9 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    6
   543 ;; This function calls:
   544 ;;		_GPIO_Init_Pin
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text1
   551  0006BE                     __ptext1:
   552                           	opt callstack 0
   553  0006BE                     _keypad_Init:
   554                           	opt callstack 24
   555  0006BE                     
   556                           ;Keypad.c: 90:     (RDPU = 1);
   557  0006BE  8E84               	bsf	3972,7,c	;volatile
   558  0006C0                     
   559                           ;Keypad.c: 94:     keypad.KP_I_Pins[0].portRegPtr = &((PORTD));
   560  0006C0  0E83               	movlw	131
   561  0006C2  6E10               	movwf	(_keypad+15)^0,c
   562  0006C4  0E0F               	movlw	15
   563  0006C6  6E11               	movwf	(_keypad+16)^0,c
   564                           
   565                           ;Keypad.c: 95:     keypad.KP_I_Pins[0].dirRegPtr = &((TRISD));
   566  0006C8  0E95               	movlw	149
   567  0006CA  6E12               	movwf	(_keypad+17)^0,c
   568  0006CC  0E0F               	movlw	15
   569  0006CE  6E13               	movwf	(_keypad+18)^0,c
   570  0006D0                     
   571                           ;Keypad.c: 96:     keypad.KP_I_Pins[0].pin = ((3));
   572  0006D0  0E03               	movlw	3
   573  0006D2  6E14               	movwf	(_keypad+19)^0,c
   574  0006D4                     
   575                           ;Keypad.c: 97:     GPIO_Init_Pin(keypad.KP_I_Pins[0].dirRegPtr,keypad.KP_I_Pins[0].pin,(
      +                          1));
   576  0006D4  C012  F150         	movff	_keypad+17,GPIO_Init_Pin@DirRegAddress
   577  0006D8  C013  F151         	movff	_keypad+18,GPIO_Init_Pin@DirRegAddress+1
   578  0006DC  C014  F152         	movff	_keypad+19,GPIO_Init_Pin@pin_number
   579  0006E0  0E01               	movlw	1
   580  0006E2  0101               	movlb	1	; () banked
   581  0006E4  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   582  0006E6  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   583  0006EA                     
   584                           ;Keypad.c: 99:     keypad.KP_I_Pins[1].portRegPtr = &((PORTD));
   585  0006EA  0E83               	movlw	131
   586  0006EC  6E15               	movwf	(_keypad+20)^0,c
   587  0006EE  0E0F               	movlw	15
   588  0006F0  6E16               	movwf	(_keypad+21)^0,c
   589  0006F2                     
   590                           ;Keypad.c: 100:     keypad.KP_I_Pins[1].dirRegPtr = &((TRISD));
   591  0006F2  0E95               	movlw	149
   592  0006F4  6E17               	movwf	(_keypad+22)^0,c
   593  0006F6  0E0F               	movlw	15
   594  0006F8  6E18               	movwf	(_keypad+23)^0,c
   595  0006FA                     
   596                           ;Keypad.c: 101:     keypad.KP_I_Pins[1].pin = ((2));
   597  0006FA  0E02               	movlw	2
   598  0006FC  6E19               	movwf	(_keypad+24)^0,c
   599  0006FE                     
   600                           ;Keypad.c: 102:     GPIO_Init_Pin(keypad.KP_I_Pins[1].dirRegPtr,keypad.KP_I_Pins[1].pin,
      +                          (1));
   601  0006FE  C017  F150         	movff	_keypad+22,GPIO_Init_Pin@DirRegAddress
   602  000702  C018  F151         	movff	_keypad+23,GPIO_Init_Pin@DirRegAddress+1
   603  000706  C019  F152         	movff	_keypad+24,GPIO_Init_Pin@pin_number
   604  00070A  0E01               	movlw	1
   605  00070C  0101               	movlb	1	; () banked
   606  00070E  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   607  000710  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   608                           
   609                           ;Keypad.c: 104:     keypad.KP_I_Pins[2].portRegPtr = &((PORTD));
   610  000714  0E83               	movlw	131
   611  000716  6E1A               	movwf	(_keypad+25)^0,c
   612  000718  0E0F               	movlw	15
   613  00071A  6E1B               	movwf	(_keypad+26)^0,c
   614                           
   615                           ;Keypad.c: 105:     keypad.KP_I_Pins[2].dirRegPtr = &((TRISD));
   616  00071C  0E95               	movlw	149
   617  00071E  6E1C               	movwf	(_keypad+27)^0,c
   618  000720  0E0F               	movlw	15
   619  000722  6E1D               	movwf	(_keypad+28)^0,c
   620  000724                     
   621                           ;Keypad.c: 106:     keypad.KP_I_Pins[2].pin = ((1));
   622  000724  0E01               	movlw	1
   623  000726  6E1E               	movwf	(_keypad+29)^0,c
   624  000728                     
   625                           ;Keypad.c: 107:     GPIO_Init_Pin(keypad.KP_I_Pins[2].dirRegPtr,keypad.KP_I_Pins[2].pin,
      +                          (1));
   626  000728  C01C  F150         	movff	_keypad+27,GPIO_Init_Pin@DirRegAddress
   627  00072C  C01D  F151         	movff	_keypad+28,GPIO_Init_Pin@DirRegAddress+1
   628  000730  C01E  F152         	movff	_keypad+29,GPIO_Init_Pin@pin_number
   629  000734  0E01               	movlw	1
   630  000736  0101               	movlb	1	; () banked
   631  000738  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   632  00073A  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   633  00073E                     
   634                           ;Keypad.c: 109:     keypad.KP_I_Pins[3].portRegPtr = &((PORTD));
   635  00073E  0E83               	movlw	131
   636  000740  6E1F               	movwf	(_keypad+30)^0,c
   637  000742  0E0F               	movlw	15
   638  000744  6E20               	movwf	(_keypad+31)^0,c
   639  000746                     
   640                           ;Keypad.c: 110:     keypad.KP_I_Pins[3].dirRegPtr = &((TRISD));
   641  000746  0E95               	movlw	149
   642  000748  6E21               	movwf	(_keypad+32)^0,c
   643  00074A  0E0F               	movlw	15
   644  00074C  6E22               	movwf	(_keypad+33)^0,c
   645  00074E                     
   646                           ;Keypad.c: 111:     keypad.KP_I_Pins[3].pin = ((0));
   647  00074E  0E00               	movlw	0
   648  000750  6E23               	movwf	(_keypad+34)^0,c
   649  000752                     
   650                           ;Keypad.c: 112:     GPIO_Init_Pin(keypad.KP_I_Pins[3].dirRegPtr,keypad.KP_I_Pins[3].pin,
      +                          (1));
   651  000752  C021  F150         	movff	_keypad+32,GPIO_Init_Pin@DirRegAddress
   652  000756  C022  F151         	movff	_keypad+33,GPIO_Init_Pin@DirRegAddress+1
   653  00075A  C023  F152         	movff	_keypad+34,GPIO_Init_Pin@pin_number
   654  00075E  0E01               	movlw	1
   655  000760  0101               	movlb	1	; () banked
   656  000762  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   657  000764  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   658                           
   659                           ;Keypad.c: 117:     keypad.KP_O_Pins[0].portRegPtr = &((PORTB));
   660  000768  0E81               	movlw	129
   661  00076A  6E01               	movwf	_keypad^0,c
   662  00076C  0E0F               	movlw	15
   663  00076E  6E02               	movwf	(_keypad+1)^0,c
   664                           
   665                           ;Keypad.c: 118:     keypad.KP_O_Pins[0].dirRegPtr = &((TRISB));
   666  000770  0E93               	movlw	147
   667  000772  6E03               	movwf	(_keypad+2)^0,c
   668  000774  0E0F               	movlw	15
   669  000776  6E04               	movwf	(_keypad+3)^0,c
   670  000778                     
   671                           ;Keypad.c: 119:     keypad.KP_O_Pins[0].pin = ((0));
   672  000778  0E00               	movlw	0
   673  00077A  6E05               	movwf	(_keypad+4)^0,c
   674  00077C                     
   675                           ;Keypad.c: 120:     GPIO_Init_Pin(keypad.KP_O_Pins[0].dirRegPtr,keypad.KP_O_Pins[0].pin,
      +                          (0));
   676  00077C  C003  F150         	movff	_keypad+2,GPIO_Init_Pin@DirRegAddress
   677  000780  C004  F151         	movff	_keypad+3,GPIO_Init_Pin@DirRegAddress+1
   678  000784  C005  F152         	movff	_keypad+4,GPIO_Init_Pin@pin_number
   679  000788  0E00               	movlw	0
   680  00078A  0101               	movlb	1	; () banked
   681  00078C  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   682  00078E  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   683  000792                     
   684                           ;Keypad.c: 122:     keypad.KP_O_Pins[1].portRegPtr = &((PORTB));
   685  000792  0E81               	movlw	129
   686  000794  6E06               	movwf	(_keypad+5)^0,c
   687  000796  0E0F               	movlw	15
   688  000798  6E07               	movwf	(_keypad+6)^0,c
   689  00079A                     
   690                           ;Keypad.c: 123:     keypad.KP_O_Pins[1].dirRegPtr = &((TRISB));
   691  00079A  0E93               	movlw	147
   692  00079C  6E08               	movwf	(_keypad+7)^0,c
   693  00079E  0E0F               	movlw	15
   694  0007A0  6E09               	movwf	(_keypad+8)^0,c
   695  0007A2                     
   696                           ;Keypad.c: 124:     keypad.KP_O_Pins[1].pin = ((1));
   697  0007A2  0E01               	movlw	1
   698  0007A4  6E0A               	movwf	(_keypad+9)^0,c
   699  0007A6                     
   700                           ;Keypad.c: 125:     GPIO_Init_Pin(keypad.KP_O_Pins[1].dirRegPtr,keypad.KP_O_Pins[1].pin,
      +                          (0));
   701  0007A6  C008  F150         	movff	_keypad+7,GPIO_Init_Pin@DirRegAddress
   702  0007AA  C009  F151         	movff	_keypad+8,GPIO_Init_Pin@DirRegAddress+1
   703  0007AE  C00A  F152         	movff	_keypad+9,GPIO_Init_Pin@pin_number
   704  0007B2  0E00               	movlw	0
   705  0007B4  0101               	movlb	1	; () banked
   706  0007B6  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   707  0007B8  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   708                           
   709                           ;Keypad.c: 127:     keypad.KP_O_Pins[2].portRegPtr = &((PORTB));
   710  0007BC  0E81               	movlw	129
   711  0007BE  6E0B               	movwf	(_keypad+10)^0,c
   712  0007C0  0E0F               	movlw	15
   713  0007C2  6E0C               	movwf	(_keypad+11)^0,c
   714                           
   715                           ;Keypad.c: 128:     keypad.KP_O_Pins[2].dirRegPtr = &((TRISB));
   716  0007C4  0E93               	movlw	147
   717  0007C6  6E0D               	movwf	(_keypad+12)^0,c
   718  0007C8  0E0F               	movlw	15
   719  0007CA  6E0E               	movwf	(_keypad+13)^0,c
   720  0007CC                     
   721                           ;Keypad.c: 129:     keypad.KP_O_Pins[2].pin = ((2));
   722  0007CC  0E02               	movlw	2
   723  0007CE  6E0F               	movwf	(_keypad+14)^0,c
   724  0007D0                     
   725                           ;Keypad.c: 130:     GPIO_Init_Pin(keypad.KP_O_Pins[2].dirRegPtr,keypad.KP_O_Pins[2].pin,
      +                          (0));
   726  0007D0  C00D  F150         	movff	_keypad+12,GPIO_Init_Pin@DirRegAddress
   727  0007D4  C00E  F151         	movff	_keypad+13,GPIO_Init_Pin@DirRegAddress+1
   728  0007D8  C00F  F152         	movff	_keypad+14,GPIO_Init_Pin@pin_number
   729  0007DC  0E00               	movlw	0
   730  0007DE  0101               	movlb	1	; () banked
   731  0007E0  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
   732  0007E2  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
   733  0007E6                     
   734                           ;Keypad.c: 135:     ((*keypad.KP_O_Pins[0].portRegPtr)=(*keypad.KP_O_Pins[0].portRegPtr 
      +                          & ~(1<<keypad.KP_O_Pins[0].pin))|((1)<<keypad.KP_O_Pins[0].pin));
   735  0007E6  C005  F159         	movff	_keypad+4,??_keypad_Init
   736  0007EA  0E01               	movlw	1
   737  0007EC  0101               	movlb	1	; () banked
   738  0007EE  6F5A               	movwf	(??_keypad_Init+1)& (0+255),b
   739  0007F0  2B59               	incf	??_keypad_Init& (0+255),f,b
   740  0007F2  EFFD  F003         	goto	u2104
   741  0007F6                     u2105:
   742  0007F6  90D8               	bcf	status,0,c
   743  0007F8  375A               	rlcf	(??_keypad_Init+1)& (0+255),f,b
   744  0007FA                     u2104:
   745  0007FA  2F59               	decfsz	??_keypad_Init& (0+255),f,b
   746  0007FC  EFFB  F003         	goto	u2105
   747  000800  C001  FFD9         	movff	_keypad,fsr2l
   748  000804  C002  FFDA         	movff	_keypad+1,fsr2h
   749  000808  50DF               	movf	indf2,w,c
   750  00080A  0101               	movlb	1	; () banked
   751  00080C  6F5B               	movwf	(??_keypad_Init+2)& (0+255),b
   752  00080E  C005  F15C         	movff	_keypad+4,??_keypad_Init+3
   753  000812  0E01               	movlw	1
   754  000814  6F5D               	movwf	(??_keypad_Init+4)& (0+255),b
   755  000816  2B5C               	incf	(??_keypad_Init+3)& (0+255),f,b
   756  000818  EF10  F004         	goto	u2114
   757  00081C                     u2115:
   758  00081C  90D8               	bcf	status,0,c
   759  00081E  375D               	rlcf	(??_keypad_Init+4)& (0+255),f,b
   760  000820                     u2114:
   761  000820  2F5C               	decfsz	(??_keypad_Init+3)& (0+255),f,b
   762  000822  EF0E  F004         	goto	u2115
   763  000826  0101               	movlb	1	; () banked
   764  000828  515D               	movf	(??_keypad_Init+4)& (0+255),w,b
   765  00082A  0AFF               	xorlw	255
   766  00082C  155B               	andwf	(??_keypad_Init+2)& (0+255),w,b
   767  00082E  115A               	iorwf	(??_keypad_Init+1)& (0+255),w,b
   768  000830  C001  FFD9         	movff	_keypad,fsr2l
   769  000834  C002  FFDA         	movff	_keypad+1,fsr2h
   770  000838  6EDF               	movwf	indf2,c
   771  00083A                     
   772                           ; BSR set to: 1
   773                           ;Keypad.c: 136:     ((*keypad.KP_O_Pins[1].portRegPtr)=(*keypad.KP_O_Pins[1].portRegPtr 
      +                          & ~(1<<keypad.KP_O_Pins[1].pin))|((1)<<keypad.KP_O_Pins[1].pin));
   774  00083A  C00A  F159         	movff	_keypad+9,??_keypad_Init
   775  00083E  0E01               	movlw	1
   776  000840  6F5A               	movwf	(??_keypad_Init+1)& (0+255),b
   777  000842  2B59               	incf	??_keypad_Init& (0+255),f,b
   778  000844  EF26  F004         	goto	u2124
   779  000848                     u2125:
   780  000848  90D8               	bcf	status,0,c
   781  00084A  375A               	rlcf	(??_keypad_Init+1)& (0+255),f,b
   782  00084C                     u2124:
   783  00084C  2F59               	decfsz	??_keypad_Init& (0+255),f,b
   784  00084E  EF24  F004         	goto	u2125
   785  000852  C006  FFD9         	movff	_keypad+5,fsr2l
   786  000856  C007  FFDA         	movff	_keypad+6,fsr2h
   787  00085A  50DF               	movf	indf2,w,c
   788  00085C  0101               	movlb	1	; () banked
   789  00085E  6F5B               	movwf	(??_keypad_Init+2)& (0+255),b
   790  000860  C00A  F15C         	movff	_keypad+9,??_keypad_Init+3
   791  000864  0E01               	movlw	1
   792  000866  6F5D               	movwf	(??_keypad_Init+4)& (0+255),b
   793  000868  2B5C               	incf	(??_keypad_Init+3)& (0+255),f,b
   794  00086A  EF39  F004         	goto	u2134
   795  00086E                     u2135:
   796  00086E  90D8               	bcf	status,0,c
   797  000870  375D               	rlcf	(??_keypad_Init+4)& (0+255),f,b
   798  000872                     u2134:
   799  000872  2F5C               	decfsz	(??_keypad_Init+3)& (0+255),f,b
   800  000874  EF37  F004         	goto	u2135
   801  000878  0101               	movlb	1	; () banked
   802  00087A  515D               	movf	(??_keypad_Init+4)& (0+255),w,b
   803  00087C  0AFF               	xorlw	255
   804  00087E  155B               	andwf	(??_keypad_Init+2)& (0+255),w,b
   805  000880  115A               	iorwf	(??_keypad_Init+1)& (0+255),w,b
   806  000882  C006  FFD9         	movff	_keypad+5,fsr2l
   807  000886  C007  FFDA         	movff	_keypad+6,fsr2h
   808  00088A  6EDF               	movwf	indf2,c
   809  00088C                     
   810                           ; BSR set to: 1
   811                           ;Keypad.c: 137:     ((*keypad.KP_O_Pins[2].portRegPtr)=(*keypad.KP_O_Pins[2].portRegPtr 
      +                          & ~(1<<keypad.KP_O_Pins[2].pin))|((1)<<keypad.KP_O_Pins[2].pin));
   812  00088C  C00F  F159         	movff	_keypad+14,??_keypad_Init
   813  000890  0E01               	movlw	1
   814  000892  6F5A               	movwf	(??_keypad_Init+1)& (0+255),b
   815  000894  2B59               	incf	??_keypad_Init& (0+255),f,b
   816  000896  EF4F  F004         	goto	u2144
   817  00089A                     u2145:
   818  00089A  90D8               	bcf	status,0,c
   819  00089C  375A               	rlcf	(??_keypad_Init+1)& (0+255),f,b
   820  00089E                     u2144:
   821  00089E  2F59               	decfsz	??_keypad_Init& (0+255),f,b
   822  0008A0  EF4D  F004         	goto	u2145
   823  0008A4  C00B  FFD9         	movff	_keypad+10,fsr2l
   824  0008A8  C00C  FFDA         	movff	_keypad+11,fsr2h
   825  0008AC  50DF               	movf	indf2,w,c
   826  0008AE  0101               	movlb	1	; () banked
   827  0008B0  6F5B               	movwf	(??_keypad_Init+2)& (0+255),b
   828  0008B2  C00F  F15C         	movff	_keypad+14,??_keypad_Init+3
   829  0008B6  0E01               	movlw	1
   830  0008B8  6F5D               	movwf	(??_keypad_Init+4)& (0+255),b
   831  0008BA  2B5C               	incf	(??_keypad_Init+3)& (0+255),f,b
   832  0008BC  EF62  F004         	goto	u2154
   833  0008C0                     u2155:
   834  0008C0  90D8               	bcf	status,0,c
   835  0008C2  375D               	rlcf	(??_keypad_Init+4)& (0+255),f,b
   836  0008C4                     u2154:
   837  0008C4  2F5C               	decfsz	(??_keypad_Init+3)& (0+255),f,b
   838  0008C6  EF60  F004         	goto	u2155
   839  0008CA  0101               	movlb	1	; () banked
   840  0008CC  515D               	movf	(??_keypad_Init+4)& (0+255),w,b
   841  0008CE  0AFF               	xorlw	255
   842  0008D0  155B               	andwf	(??_keypad_Init+2)& (0+255),w,b
   843  0008D2  115A               	iorwf	(??_keypad_Init+1)& (0+255),w,b
   844  0008D4  C00B  FFD9         	movff	_keypad+10,fsr2l
   845  0008D8  C00C  FFDA         	movff	_keypad+11,fsr2h
   846  0008DC  6EDF               	movwf	indf2,c
   847  0008DE                     
   848                           ; BSR set to: 1
   849                           ;Keypad.c: 140:     ((*keypad.KP_O_Pins[current_column].portRegPtr)=(*keypad.KP_O_Pins[c
      +                          urrent_column].portRegPtr & ~(1<<keypad.KP_O_Pins[current_column].pin))|((0)<<keypad.KP_
      +                          O_Pins[current_column].pin));
   850  0008DE  502D               	movf	_current_column^0,w,c
   851  0008E0  0D05               	mullw	5
   852  0008E2  0E01               	movlw	low _keypad
   853  0008E4  24F3               	addwf	243,w,c
   854  0008E6  6ED9               	movwf	fsr2l,c
   855  0008E8  0E00               	movlw	high _keypad
   856  0008EA  20F4               	addwfc	prodh,w,c
   857  0008EC  6EDA               	movwf	fsr2h,c
   858  0008EE  CFDE F159          	movff	postinc2,??_keypad_Init
   859  0008F2  CFDD F15A          	movff	postdec2,??_keypad_Init+1
   860  0008F6  C159  FFD9         	movff	??_keypad_Init,fsr2l
   861  0008FA  C15A  FFDA         	movff	??_keypad_Init+1,fsr2h
   862  0008FE  502D               	movf	_current_column^0,w,c
   863  000900  0D05               	mullw	5
   864  000902  0E05               	movlw	low (_keypad+4)
   865  000904  24F3               	addwf	243,w,c
   866  000906  6EE1               	movwf	fsr1l,c
   867  000908  0E00               	movlw	high (_keypad+4)
   868  00090A  20F4               	addwfc	prodh,w,c
   869  00090C  6EE2               	movwf	fsr1h,c
   870  00090E  50E7               	movf	indf1,w,c
   871  000910  6F5B               	movwf	(??_keypad_Init+2)& (0+255),b
   872  000912  0E00               	movlw	0
   873  000914  6F5C               	movwf	(??_keypad_Init+3)& (0+255),b
   874  000916  2B5B               	incf	(??_keypad_Init+2)& (0+255),f,b
   875  000918  EF90  F004         	goto	u2164
   876  00091C                     u2165:
   877  00091C  90D8               	bcf	status,0,c
   878  00091E  375C               	rlcf	(??_keypad_Init+3)& (0+255),f,b
   879  000920                     u2164:
   880  000920  2F5B               	decfsz	(??_keypad_Init+2)& (0+255),f,b
   881  000922  EF8E  F004         	goto	u2165
   882  000926  502D               	movf	_current_column^0,w,c
   883  000928  0D05               	mullw	5
   884  00092A  0E01               	movlw	low _keypad
   885  00092C  24F3               	addwf	243,w,c
   886  00092E  6EE1               	movwf	fsr1l,c
   887  000930  0E00               	movlw	high _keypad
   888  000932  20F4               	addwfc	prodh,w,c
   889  000934  6EE2               	movwf	fsr1h,c
   890  000936  CFE6 F15D          	movff	postinc1,??_keypad_Init+4
   891  00093A  CFE5 F15E          	movff	postdec1,??_keypad_Init+5
   892  00093E  C15D  FFE1         	movff	??_keypad_Init+4,fsr1l
   893  000942  C15E  FFE2         	movff	??_keypad_Init+5,fsr1h
   894  000946  50E7               	movf	indf1,w,c
   895  000948  0101               	movlb	1	; () banked
   896  00094A  6F5F               	movwf	(??_keypad_Init+6)& (0+255),b
   897  00094C  502D               	movf	_current_column^0,w,c
   898  00094E  0D05               	mullw	5
   899  000950  0E05               	movlw	low (_keypad+4)
   900  000952  24F3               	addwf	243,w,c
   901  000954  6EE1               	movwf	fsr1l,c
   902  000956  0E00               	movlw	high (_keypad+4)
   903  000958  20F4               	addwfc	prodh,w,c
   904  00095A  6EE2               	movwf	fsr1h,c
   905  00095C  50E7               	movf	indf1,w,c
   906  00095E  6F60               	movwf	(??_keypad_Init+7)& (0+255),b
   907  000960  0E01               	movlw	1
   908  000962  6F61               	movwf	(??_keypad_Init+8)& (0+255),b
   909  000964  2B60               	incf	(??_keypad_Init+7)& (0+255),f,b
   910  000966  EFB7  F004         	goto	u2174
   911  00096A                     u2175:
   912  00096A  90D8               	bcf	status,0,c
   913  00096C  3761               	rlcf	(??_keypad_Init+8)& (0+255),f,b
   914  00096E                     u2174:
   915  00096E  2F60               	decfsz	(??_keypad_Init+7)& (0+255),f,b
   916  000970  EFB5  F004         	goto	u2175
   917  000974  0101               	movlb	1	; () banked
   918  000976  5161               	movf	(??_keypad_Init+8)& (0+255),w,b
   919  000978  0AFF               	xorlw	255
   920  00097A  155F               	andwf	(??_keypad_Init+6)& (0+255),w,b
   921  00097C  115C               	iorwf	(??_keypad_Init+3)& (0+255),w,b
   922  00097E  6EDF               	movwf	indf2,c
   923  000980                     
   924                           ; BSR set to: 1
   925  000980  0012               	return		;funcret
   926  000982                     __end_of_keypad_Init:
   927                           	opt callstack 0
   928                           
   929 ;; *************** function _initSW *****************
   930 ;; Defined at:
   931 ;;		line 127 in file "Microwave.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   945 ;;      Params:         0       0       0       0       0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    7
   952 ;; This function calls:
   953 ;;		_SW_Init
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text2
   960  001854                     __ptext2:
   961                           	opt callstack 0
   962  001854                     _initSW:
   963                           	opt callstack 23
   964  001854                     
   965                           ;Microwave.c: 131:     SW_Init(SW_DOOR,&(TRISB),&(PORTB),(4));
   966  001854  0E93               	movlw	147
   967  001856  0101               	movlb	1	; () banked
   968  001858  6F59               	movwf	SW_Init@dir& (0+255),b
   969  00185A  0E0F               	movlw	15
   970  00185C  6F5A               	movwf	(SW_Init@dir+1)& (0+255),b
   971  00185E  0E81               	movlw	129
   972  001860  6F5B               	movwf	SW_Init@port& (0+255),b
   973  001862  0E0F               	movlw	15
   974  001864  6F5C               	movwf	(SW_Init@port+1)& (0+255),b
   975  001866  0E04               	movlw	4
   976  001868  6F5D               	movwf	SW_Init@pin& (0+255),b
   977  00186A  0E00               	movlw	0
   978  00186C  EC60  F00A         	call	_SW_Init
   979                           
   980                           ;Microwave.c: 133:     SW_Init(SW_WEIGHT_SENSOR,&(TRISB),&(PORTB),(5));
   981  001870  0E93               	movlw	147
   982  001872  0101               	movlb	1	; () banked
   983  001874  6F59               	movwf	SW_Init@dir& (0+255),b
   984  001876  0E0F               	movlw	15
   985  001878  6F5A               	movwf	(SW_Init@dir+1)& (0+255),b
   986  00187A  0E81               	movlw	129
   987  00187C  6F5B               	movwf	SW_Init@port& (0+255),b
   988  00187E  0E0F               	movlw	15
   989  001880  6F5C               	movwf	(SW_Init@port+1)& (0+255),b
   990  001882  0E05               	movlw	5
   991  001884  6F5D               	movwf	SW_Init@pin& (0+255),b
   992  001886  0E01               	movlw	1
   993  001888  EC60  F00A         	call	_SW_Init
   994  00188C  0012               	return		;funcret
   995  00188E                     __end_of_initSW:
   996                           	opt callstack 0
   997                           
   998 ;; *************** function _SW_Init *****************
   999 ;; Defined at:
  1000 ;;		line 68 in file "SW.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  sw              1    wreg     enum E3162
  1003 ;;  dir             2    9[BANK1 ] PTR volatile unsigned ch
  1004 ;;		 -> TRISB(1), 
  1005 ;;  port            2   11[BANK1 ] PTR volatile unsigned ch
  1006 ;;		 -> PORTB(1), 
  1007 ;;  pin             1   13[BANK1 ] unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  sw              1   14[BANK1 ] enum E3162
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1019 ;;      Params:         0       0       5       0       0       0       0       0       0
  1020 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1022 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1023 ;;Total ram usage:        6 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    6
  1026 ;; This function calls:
  1027 ;;		_GPIO_Init_Pin
  1028 ;; This function is called by:
  1029 ;;		_initSW
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text3
  1034  0014C0                     __ptext3:
  1035                           	opt callstack 0
  1036  0014C0                     _SW_Init:
  1037                           	opt callstack 23
  1038                           
  1039                           ;incstack = 0
  1040                           ;SW_Init@sw stored from wreg
  1041  0014C0  0101               	movlb	1	; () banked
  1042  0014C2  6F5E               	movwf	SW_Init@sw& (0+255),b
  1043  0014C4                     
  1044                           ;SW.c: 68: void SW_Init(SW_t sw,volatile uint8 * dir,volatile uint8 * port , uint8 pin);
      +                          SW.c: 69: {;SW.c: 71:     (RBPU = 1);
  1045  0014C4  8EF1               	bsf	4081,7,c	;volatile
  1046  0014C6                     
  1047                           ;SW.c: 74:     SW[sw].dirRegPtr = dir;
  1048  0014C6  0101               	movlb	1	; () banked
  1049  0014C8  515E               	movf	SW_Init@sw& (0+255),w,b
  1050  0014CA  0D05               	mullw	5
  1051  0014CC  0EE9               	movlw	low (_SW+2)
  1052  0014CE  24F3               	addwf	243,w,c
  1053  0014D0  6ED9               	movwf	fsr2l,c
  1054  0014D2  0E00               	movlw	high (_SW+2)
  1055  0014D4  20F4               	addwfc	prodh,w,c
  1056  0014D6  6EDA               	movwf	fsr2h,c
  1057  0014D8  C159  FFDE         	movff	SW_Init@dir,postinc2
  1058  0014DC  C15A  FFDD         	movff	SW_Init@dir+1,postdec2
  1059                           
  1060                           ;SW.c: 75:     SW[sw].portRegPtr = port;
  1061  0014E0  515E               	movf	SW_Init@sw& (0+255),w,b
  1062  0014E2  0D05               	mullw	5
  1063  0014E4  0EE7               	movlw	low _SW
  1064  0014E6  24F3               	addwf	243,w,c
  1065  0014E8  6ED9               	movwf	fsr2l,c
  1066  0014EA  0E00               	movlw	high _SW
  1067  0014EC  20F4               	addwfc	prodh,w,c
  1068  0014EE  6EDA               	movwf	fsr2h,c
  1069  0014F0  C15B  FFDE         	movff	SW_Init@port,postinc2
  1070  0014F4  C15C  FFDD         	movff	SW_Init@port+1,postdec2
  1071                           
  1072                           ;SW.c: 76:     SW[sw].pin = pin;
  1073  0014F8  515E               	movf	SW_Init@sw& (0+255),w,b
  1074  0014FA  0D05               	mullw	5
  1075  0014FC  0EEB               	movlw	low (_SW+4)
  1076  0014FE  24F3               	addwf	243,w,c
  1077  001500  6ED9               	movwf	fsr2l,c
  1078  001502  0E00               	movlw	high (_SW+4)
  1079  001504  20F4               	addwfc	prodh,w,c
  1080  001506  6EDA               	movwf	fsr2h,c
  1081  001508  C15D  FFDF         	movff	SW_Init@pin,indf2
  1082  00150C                     
  1083                           ; BSR set to: 1
  1084                           ;SW.c: 79:     GPIO_Init_Pin(SW[sw].dirRegPtr,SW[sw].pin,(1));
  1085  00150C  515E               	movf	SW_Init@sw& (0+255),w,b
  1086  00150E  0D05               	mullw	5
  1087  001510  0EE9               	movlw	low (_SW+2)
  1088  001512  24F3               	addwf	243,w,c
  1089  001514  6ED9               	movwf	fsr2l,c
  1090  001516  0E00               	movlw	high (_SW+2)
  1091  001518  20F4               	addwfc	prodh,w,c
  1092  00151A  6EDA               	movwf	fsr2h,c
  1093  00151C  CFDE F150          	movff	postinc2,GPIO_Init_Pin@DirRegAddress
  1094  001520  CFDD F151          	movff	postdec2,GPIO_Init_Pin@DirRegAddress+1
  1095  001524  515E               	movf	SW_Init@sw& (0+255),w,b
  1096  001526  0D05               	mullw	5
  1097  001528  0EEB               	movlw	low (_SW+4)
  1098  00152A  24F3               	addwf	243,w,c
  1099  00152C  6ED9               	movwf	fsr2l,c
  1100  00152E  0E00               	movlw	high (_SW+4)
  1101  001530  20F4               	addwfc	prodh,w,c
  1102  001532  6EDA               	movwf	fsr2h,c
  1103  001534  50DF               	movf	indf2,w,c
  1104  001536  6F52               	movwf	GPIO_Init_Pin@pin_number& (0+255),b
  1105  001538  0E01               	movlw	1
  1106  00153A  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
  1107  00153C  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
  1108  001540                     
  1109                           ;SW.c: 80:     SW_DATA[sw].state = SW_RELEASED;
  1110  001540  0101               	movlb	1	; () banked
  1111  001542  515E               	movf	SW_Init@sw& (0+255),w,b
  1112  001544  0D03               	mullw	3
  1113  001546  0E26               	movlw	low (_SW_DATA+2)
  1114  001548  24F3               	addwf	243,w,c
  1115  00154A  6ED9               	movwf	fsr2l,c
  1116  00154C  0E00               	movlw	high (_SW_DATA+2)
  1117  00154E  20F4               	addwfc	prodh,w,c
  1118  001550  6EDA               	movwf	fsr2h,c
  1119  001552  0E00               	movlw	0
  1120  001554  6EDF               	movwf	indf2,c
  1121  001556                     
  1122                           ; BSR set to: 1
  1123                           ;SW.c: 81:     SW_DATA[sw].samples[0] = (1);
  1124  001556  515E               	movf	SW_Init@sw& (0+255),w,b
  1125  001558  0D03               	mullw	3
  1126  00155A  0E24               	movlw	low _SW_DATA
  1127  00155C  24F3               	addwf	243,w,c
  1128  00155E  6ED9               	movwf	fsr2l,c
  1129  001560  0E00               	movlw	high _SW_DATA
  1130  001562  20F4               	addwfc	prodh,w,c
  1131  001564  6EDA               	movwf	fsr2h,c
  1132  001566  0E01               	movlw	1
  1133  001568  6EDF               	movwf	indf2,c
  1134  00156A                     
  1135                           ; BSR set to: 1
  1136                           ;SW.c: 82:     SW_DATA[sw].samples[1] = (1);
  1137  00156A  515E               	movf	SW_Init@sw& (0+255),w,b
  1138  00156C  0D03               	mullw	3
  1139  00156E  0E25               	movlw	low (_SW_DATA+1)
  1140  001570  24F3               	addwf	243,w,c
  1141  001572  6ED9               	movwf	fsr2l,c
  1142  001574  0E00               	movlw	high (_SW_DATA+1)
  1143  001576  20F4               	addwfc	prodh,w,c
  1144  001578  6EDA               	movwf	fsr2h,c
  1145  00157A  0E01               	movlw	1
  1146  00157C  6EDF               	movwf	indf2,c
  1147  00157E                     
  1148                           ; BSR set to: 1
  1149  00157E  0012               	return		;funcret
  1150  001580                     __end_of_SW_Init:
  1151                           	opt callstack 0
  1152                           
  1153 ;; *************** function _initOSTMR *****************
  1154 ;; Defined at:
  1155 ;;		line 120 in file "Microwave.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1169 ;;      Params:         0       0       0       0       0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    6
  1176 ;; This function calls:
  1177 ;;		_TMR_Init
  1178 ;;		_TMR_Start
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text4
  1185  001A1C                     __ptext4:
  1186                           	opt callstack 0
  1187  001A1C                     _initOSTMR:
  1188                           	opt callstack 24
  1189  001A1C                     
  1190                           ;Microwave.c: 122:     TMR_Init();
  1191  001A1C  ECFA  F00C         	call	_TMR_Init	;wreg free
  1192  001A20                     
  1193                           ;Microwave.c: 123:     TMR_Start();
  1194  001A20  ECF1  F00C         	call	_TMR_Start	;wreg free
  1195  001A24  0012               	return		;funcret
  1196  001A26                     __end_of_initOSTMR:
  1197                           	opt callstack 0
  1198                           
  1199 ;; *************** function _TMR_Start *****************
  1200 ;; Defined at:
  1201 ;;		line 71 in file "OSTimer.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    5
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_initOSTMR
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text5
  1230  0019E2                     __ptext5:
  1231                           	opt callstack 0
  1232  0019E2                     _TMR_Start:
  1233                           	opt callstack 24
  1234  0019E2                     
  1235                           ;OSTimer.c: 74:     ((TMR0IF) = 0);
  1236  0019E2  94F2               	bcf	4082,2,c	;volatile
  1237  0019E4                     
  1238                           ;OSTimer.c: 76:     ((TMR0) = 65,536 - ((5000)));
  1239  0019E4  0E00               	movlw	0
  1240  0019E6  6ED7               	movwf	215,c	;volatile
  1241  0019E8  0E41               	movlw	65
  1242  0019EA  6ED6               	movwf	214,c	;volatile
  1243  0019EC                     
  1244                           ;OSTimer.c: 78:     (TMR0IE = 1);
  1245  0019EC  8AF2               	bsf	4082,5,c	;volatile
  1246  0019EE                     
  1247                           ;OSTimer.c: 79:     (GIE = 1);
  1248  0019EE  8EF2               	bsf	4082,7,c	;volatile
  1249  0019F0                     
  1250                           ;OSTimer.c: 81:     (TMR0ON = 1);
  1251  0019F0  8ED5               	bsf	4053,7,c	;volatile
  1252  0019F2  0012               	return		;funcret
  1253  0019F4                     __end_of_TMR_Start:
  1254                           	opt callstack 0
  1255                           
  1256 ;; *************** function _TMR_Init *****************
  1257 ;; Defined at:
  1258 ;;		line 23 in file "OSTimer.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		None
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    5
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_initOSTMR
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text6
  1287  0019F4                     __ptext6:
  1288                           	opt callstack 0
  1289  0019F4                     _TMR_Init:
  1290                           	opt callstack 24
  1291  0019F4                     
  1292                           ;OSTimer.c: 27:     (PSA = 0);
  1293  0019F4  96D5               	bcf	4053,3,c	;volatile
  1294                           
  1295                           ;OSTimer.c: 28:     T0PS2 = 0; T0PS1 = 0; T0PS0 = 0;
  1296  0019F6  94D5               	bcf	4053,2,c	;volatile
  1297  0019F8  92D5               	bcf	4053,1,c	;volatile
  1298  0019FA  90D5               	bcf	4053,0,c	;volatile
  1299                           
  1300                           ;OSTimer.c: 30:     (T0CS = 0);
  1301  0019FC  9AD5               	bcf	4053,5,c	;volatile
  1302                           
  1303                           ;OSTimer.c: 32:     (T08BIT = 1);
  1304  0019FE  8CD5               	bsf	4053,6,c	;volatile
  1305                           
  1306                           ;OSTimer.c: 34:     (TMR0ON = 0);
  1307  001A00  9ED5               	bcf	4053,7,c	;volatile
  1308  001A02  0012               	return		;funcret
  1309  001A04                     __end_of_TMR_Init:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _initDO *****************
  1313 ;; Defined at:
  1314 ;;		line 106 in file "Microwave.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    7
  1335 ;; This function calls:
  1336 ;;		_DO_Init
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text7
  1343  0017A0                     __ptext7:
  1344                           	opt callstack 0
  1345  0017A0                     _initDO:
  1346                           	opt callstack 23
  1347  0017A0                     
  1348                           ;Microwave.c: 111:     DO_Init(DO_LAMP,&(PORTB),&(TRISB),(6),DO_OFF);
  1349  0017A0  0E81               	movlw	129
  1350  0017A2  0101               	movlb	1	; () banked
  1351  0017A4  6F59               	movwf	DO_Init@port& (0+255),b
  1352  0017A6  0E0F               	movlw	15
  1353  0017A8  6F5A               	movwf	(DO_Init@port+1)& (0+255),b
  1354  0017AA  0E93               	movlw	147
  1355  0017AC  6F5B               	movwf	DO_Init@dir& (0+255),b
  1356  0017AE  0E0F               	movlw	15
  1357  0017B0  6F5C               	movwf	(DO_Init@dir+1)& (0+255),b
  1358  0017B2  0E06               	movlw	6
  1359  0017B4  6F5D               	movwf	DO_Init@pinN& (0+255),b
  1360  0017B6  0E00               	movlw	0
  1361  0017B8  6F5E               	movwf	DO_Init@state& (0+255),b
  1362  0017BA  0E00               	movlw	0
  1363  0017BC  EC1F  F00B         	call	_DO_Init
  1364                           
  1365                           ;Microwave.c: 113:     DO_Init(DO_HEATER,&(PORTB),&(TRISB),(7),DO_OFF);
  1366  0017C0  0E81               	movlw	129
  1367  0017C2  0101               	movlb	1	; () banked
  1368  0017C4  6F59               	movwf	DO_Init@port& (0+255),b
  1369  0017C6  0E0F               	movlw	15
  1370  0017C8  6F5A               	movwf	(DO_Init@port+1)& (0+255),b
  1371  0017CA  0E93               	movlw	147
  1372  0017CC  6F5B               	movwf	DO_Init@dir& (0+255),b
  1373  0017CE  0E0F               	movlw	15
  1374  0017D0  6F5C               	movwf	(DO_Init@dir+1)& (0+255),b
  1375  0017D2  0E07               	movlw	7
  1376  0017D4  6F5D               	movwf	DO_Init@pinN& (0+255),b
  1377  0017D6  0E00               	movlw	0
  1378  0017D8  6F5E               	movwf	DO_Init@state& (0+255),b
  1379  0017DA  0E01               	movlw	1
  1380  0017DC  EC1F  F00B         	call	_DO_Init
  1381                           
  1382                           ;Microwave.c: 115:     DO_Init(DO_MOTOR,&(PORTC),&(TRISC),(2),DO_OFF);
  1383  0017E0  0E82               	movlw	130
  1384  0017E2  0101               	movlb	1	; () banked
  1385  0017E4  6F59               	movwf	DO_Init@port& (0+255),b
  1386  0017E6  0E0F               	movlw	15
  1387  0017E8  6F5A               	movwf	(DO_Init@port+1)& (0+255),b
  1388  0017EA  0E94               	movlw	148
  1389  0017EC  6F5B               	movwf	DO_Init@dir& (0+255),b
  1390  0017EE  0E0F               	movlw	15
  1391  0017F0  6F5C               	movwf	(DO_Init@dir+1)& (0+255),b
  1392  0017F2  0E02               	movlw	2
  1393  0017F4  6F5D               	movwf	DO_Init@pinN& (0+255),b
  1394  0017F6  0E00               	movlw	0
  1395  0017F8  6F5E               	movwf	DO_Init@state& (0+255),b
  1396  0017FA  0E02               	movlw	2
  1397  0017FC  EC1F  F00B         	call	_DO_Init
  1398  001800  0012               	return		;funcret
  1399  001802                     __end_of_initDO:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _DO_Init *****************
  1403 ;; Defined at:
  1404 ;;		line 25 in file "DO.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  DO              1    wreg     enum E3166
  1407 ;;  port            2    9[BANK1 ] PTR volatile unsigned ch
  1408 ;;		 -> PORTC(1), PORTB(1), 
  1409 ;;  dir             2   11[BANK1 ] PTR volatile unsigned ch
  1410 ;;		 -> TRISC(1), TRISB(1), 
  1411 ;;  pinN            1   13[BANK1 ] unsigned char 
  1412 ;;  state           1   14[BANK1 ] enum E3162
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  DO              1   20[BANK1 ] enum E3166
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      unsigned char 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1424 ;;      Params:         0       0       6       0       0       0       0       0       0
  1425 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       5       0       0       0       0       0       0
  1427 ;;      Totals:         0       0      12       0       0       0       0       0       0
  1428 ;;Total ram usage:       12 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    6
  1431 ;; This function calls:
  1432 ;;		_GPIO_Init_Pin
  1433 ;; This function is called by:
  1434 ;;		_initDO
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text8
  1439  00163E                     __ptext8:
  1440                           	opt callstack 0
  1441  00163E                     _DO_Init:
  1442                           	opt callstack 23
  1443                           
  1444                           ;incstack = 0
  1445                           ;DO_Init@DO stored from wreg
  1446  00163E  0101               	movlb	1	; () banked
  1447  001640  6F64               	movwf	DO_Init@DO& (0+255),b
  1448  001642                     
  1449                           ;DO.c: 25: uint8 DO_Init(DO_t DO ,volatile uint8* port ,volatile uint8* dir,uint8 pinN ,
      +                          LEDState_t state);DO.c: 26: {;DO.c: 27:     DOArray[DO].portRegPtr = port;
  1450  001642  0101               	movlb	1	; () banked
  1451  001644  5164               	movf	DO_Init@DO& (0+255),w,b
  1452  001646  0D05               	mullw	5
  1453  001648  0ED8               	movlw	low _DOArray
  1454  00164A  24F3               	addwf	243,w,c
  1455  00164C  6ED9               	movwf	fsr2l,c
  1456  00164E  0E00               	movlw	high _DOArray
  1457  001650  20F4               	addwfc	prodh,w,c
  1458  001652  6EDA               	movwf	fsr2h,c
  1459  001654  C159  FFDE         	movff	DO_Init@port,postinc2
  1460  001658  C15A  FFDD         	movff	DO_Init@port+1,postdec2
  1461                           
  1462                           ;DO.c: 28:     DOArray[DO].dirRegPtr = dir;
  1463  00165C  5164               	movf	DO_Init@DO& (0+255),w,b
  1464  00165E  0D05               	mullw	5
  1465  001660  0EDA               	movlw	low (_DOArray+2)
  1466  001662  24F3               	addwf	243,w,c
  1467  001664  6ED9               	movwf	fsr2l,c
  1468  001666  0E00               	movlw	high (_DOArray+2)
  1469  001668  20F4               	addwfc	prodh,w,c
  1470  00166A  6EDA               	movwf	fsr2h,c
  1471  00166C  C15B  FFDE         	movff	DO_Init@dir,postinc2
  1472  001670  C15C  FFDD         	movff	DO_Init@dir+1,postdec2
  1473                           
  1474                           ;DO.c: 29:     DOArray[DO].pin = pinN;
  1475  001674  5164               	movf	DO_Init@DO& (0+255),w,b
  1476  001676  0D05               	mullw	5
  1477  001678  0EDC               	movlw	low (_DOArray+4)
  1478  00167A  24F3               	addwf	243,w,c
  1479  00167C  6ED9               	movwf	fsr2l,c
  1480  00167E  0E00               	movlw	high (_DOArray+4)
  1481  001680  20F4               	addwfc	prodh,w,c
  1482  001682  6EDA               	movwf	fsr2h,c
  1483  001684  C15D  FFDF         	movff	DO_Init@pinN,indf2
  1484  001688                     
  1485                           ; BSR set to: 1
  1486                           ;DO.c: 31:     GPIO_Init_Pin(dir,pinN,(0));
  1487  001688  C15B  F150         	movff	DO_Init@dir,GPIO_Init_Pin@DirRegAddress
  1488  00168C  C15C  F151         	movff	DO_Init@dir+1,GPIO_Init_Pin@DirRegAddress+1
  1489  001690  C15D  F152         	movff	DO_Init@pinN,GPIO_Init_Pin@pin_number
  1490  001694  0E00               	movlw	0
  1491  001696  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
  1492  001698  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
  1493  00169C                     
  1494                           ;DO.c: 32:     ((*port)=(*port & ~(1<<pinN))|(state<<pinN));
  1495  00169C  C15D  F15F         	movff	DO_Init@pinN,??_DO_Init
  1496  0016A0  C15E  F160         	movff	DO_Init@state,??_DO_Init+1
  1497  0016A4  0101               	movlb	1	; () banked
  1498  0016A6  2B5F               	incf	??_DO_Init& (0+255),f,b
  1499  0016A8  EF58  F00B         	goto	u2004
  1500  0016AC                     u2005:
  1501  0016AC  90D8               	bcf	status,0,c
  1502  0016AE  3760               	rlcf	(??_DO_Init+1)& (0+255),f,b
  1503  0016B0                     u2004:
  1504  0016B0  2F5F               	decfsz	??_DO_Init& (0+255),f,b
  1505  0016B2  EF56  F00B         	goto	u2005
  1506  0016B6  C159  FFD9         	movff	DO_Init@port,fsr2l
  1507  0016BA  C15A  FFDA         	movff	DO_Init@port+1,fsr2h
  1508  0016BE  50DF               	movf	indf2,w,c
  1509  0016C0  0101               	movlb	1	; () banked
  1510  0016C2  6F61               	movwf	(??_DO_Init+2)& (0+255),b
  1511  0016C4  C15D  F162         	movff	DO_Init@pinN,??_DO_Init+3
  1512  0016C8  0E01               	movlw	1
  1513  0016CA  6F63               	movwf	(??_DO_Init+4)& (0+255),b
  1514  0016CC  2B62               	incf	(??_DO_Init+3)& (0+255),f,b
  1515  0016CE  EF6B  F00B         	goto	u2014
  1516  0016D2                     u2015:
  1517  0016D2  90D8               	bcf	status,0,c
  1518  0016D4  3763               	rlcf	(??_DO_Init+4)& (0+255),f,b
  1519  0016D6                     u2014:
  1520  0016D6  2F62               	decfsz	(??_DO_Init+3)& (0+255),f,b
  1521  0016D8  EF69  F00B         	goto	u2015
  1522  0016DC  0101               	movlb	1	; () banked
  1523  0016DE  5163               	movf	(??_DO_Init+4)& (0+255),w,b
  1524  0016E0  0AFF               	xorlw	255
  1525  0016E2  1561               	andwf	(??_DO_Init+2)& (0+255),w,b
  1526  0016E4  1160               	iorwf	(??_DO_Init+1)& (0+255),w,b
  1527  0016E6  C159  FFD9         	movff	DO_Init@port,fsr2l
  1528  0016EA  C15A  FFDA         	movff	DO_Init@port+1,fsr2h
  1529  0016EE  6EDF               	movwf	indf2,c
  1530  0016F0                     
  1531                           ; BSR set to: 1
  1532  0016F0  0012               	return		;funcret
  1533  0016F2                     __end_of_DO_Init:
  1534                           	opt callstack 0
  1535                           
  1536 ;; *************** function _LCD_Init *****************
  1537 ;; Defined at:
  1538 ;;		line 62 in file "LCD.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       1       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       1       0       0       0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    9
  1559 ;; This function calls:
  1560 ;;		_GPIO_Init_Nibble
  1561 ;;		_GPIO_Init_Pin
  1562 ;;		_LCD_Data_Out
  1563 ;;		_LCD_Init_Custom_Sym
  1564 ;;		_LCD_Write_Instruction
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text9
  1571  001234                     __ptext9:
  1572                           	opt callstack 0
  1573  001234                     _LCD_Init:
  1574                           	opt callstack 21
  1575  001234                     
  1576                           ;LCD.c: 68:     GPIO_Init_Pin(&(TRISE),(1),(0));
  1577  001234  0E96               	movlw	150
  1578  001236  0101               	movlb	1	; () banked
  1579  001238  6F50               	movwf	GPIO_Init_Pin@DirRegAddress& (0+255),b
  1580  00123A  0E0F               	movlw	15
  1581  00123C  6F51               	movwf	(GPIO_Init_Pin@DirRegAddress+1)& (0+255),b
  1582  00123E  0E01               	movlw	1
  1583  001240  6F52               	movwf	GPIO_Init_Pin@pin_number& (0+255),b
  1584  001242  0E00               	movlw	0
  1585  001244  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
  1586  001246  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
  1587                           
  1588                           ;LCD.c: 70:     GPIO_Init_Pin(&(TRISE),(2),(0));
  1589  00124A  0E96               	movlw	150
  1590  00124C  0101               	movlb	1	; () banked
  1591  00124E  6F50               	movwf	GPIO_Init_Pin@DirRegAddress& (0+255),b
  1592  001250  0E0F               	movlw	15
  1593  001252  6F51               	movwf	(GPIO_Init_Pin@DirRegAddress+1)& (0+255),b
  1594  001254  0E02               	movlw	2
  1595  001256  6F52               	movwf	GPIO_Init_Pin@pin_number& (0+255),b
  1596  001258  0E00               	movlw	0
  1597  00125A  6F53               	movwf	GPIO_Init_Pin@dir& (0+255),b
  1598  00125C  EC90  F009         	call	_GPIO_Init_Pin	;wreg free
  1599  001260                     
  1600                           ;LCD.c: 73:     GPIO_Init_Nibble(&(TRISD),(1),(0));
  1601  001260  0E95               	movlw	149
  1602  001262  0101               	movlb	1	; () banked
  1603  001264  6F50               	movwf	GPIO_Init_Nibble@DirRegAddress& (0+255),b
  1604  001266  0E0F               	movlw	15
  1605  001268  6F51               	movwf	(GPIO_Init_Nibble@DirRegAddress+1)& (0+255),b
  1606  00126A  0E01               	movlw	1
  1607  00126C  6F52               	movwf	GPIO_Init_Nibble@nibble_num& (0+255),b
  1608  00126E  0E00               	movlw	0
  1609  001270  6F53               	movwf	GPIO_Init_Nibble@dir& (0+255),b
  1610  001272  EC8B  F008         	call	_GPIO_Init_Nibble	;wreg free
  1611  001276                     
  1612                           ;LCD.c: 80:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1613  001276  0E27               	movlw	39
  1614  001278  0101               	movlb	1	; () banked
  1615  00127A  6F5C               	movwf	??_LCD_Init& (0+255),b
  1616  00127C  0EF5               	movlw	245
  1617  00127E                     u2187:
  1618  00127E  2EE8               	decfsz	wreg,f,c
  1619  001280  D7FE               	bra	u2187
  1620  001282  2F5C               	decfsz	??_LCD_Init& (0+255),f,b
  1621  001284  D7FC               	bra	u2187
  1622  001286                     
  1623                           ;LCD.c: 83:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  1624  001286  5084               	movf	132,w,c	;volatile
  1625  001288  0BFB               	andlw	251
  1626  00128A  6E84               	movwf	132,c	;volatile
  1627  00128C                     
  1628                           ;LCD.c: 85:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  1629  00128C  5084               	movf	132,w,c	;volatile
  1630  00128E  0BFD               	andlw	253
  1631  001290  6E84               	movwf	132,c	;volatile
  1632  001292                     
  1633                           ;LCD.c: 88:     LCD_Data_Out(LCD_FunctionReset);
  1634  001292  0E30               	movlw	48
  1635  001294  EC47  F00C         	call	_LCD_Data_Out
  1636  001298                     
  1637                           ;LCD.c: 89:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1638  001298  0E0D               	movlw	13
  1639  00129A  0101               	movlb	1	; () banked
  1640  00129C  6F5C               	movwf	??_LCD_Init& (0+255),b
  1641  00129E  0EFB               	movlw	251
  1642  0012A0                     u2197:
  1643  0012A0  2EE8               	decfsz	wreg,f,c
  1644  0012A2  D7FE               	bra	u2197
  1645  0012A4  2F5C               	decfsz	??_LCD_Init& (0+255),f,b
  1646  0012A6  D7FC               	bra	u2197
  1647  0012A8  D000               	nop2	
  1648  0012AA                     
  1649                           ;LCD.c: 91:     LCD_Data_Out(LCD_FunctionReset);
  1650  0012AA  0E30               	movlw	48
  1651  0012AC  EC47  F00C         	call	_LCD_Data_Out
  1652  0012B0                     
  1653                           ;LCD.c: 92:     _delay((unsigned long)((150)*(8000000/4000000.0)));
  1654  0012B0  0E64               	movlw	100
  1655  0012B2                     u2207:
  1656  0012B2  2EE8               	decfsz	wreg,f,c
  1657  0012B4  D7FE               	bra	u2207
  1658  0012B6                     
  1659                           ;LCD.c: 94:     LCD_Data_Out(LCD_FunctionReset);
  1660  0012B6  0E30               	movlw	48
  1661  0012B8  EC47  F00C         	call	_LCD_Data_Out
  1662  0012BC                     
  1663                           ;LCD.c: 97:     LCD_Data_Out(LCD_FunctionSet4bit);
  1664  0012BC  0E28               	movlw	40
  1665  0012BE  EC47  F00C         	call	_LCD_Data_Out
  1666  0012C2                     
  1667                           ;LCD.c: 98:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1668  0012C2  0E21               	movlw	33
  1669  0012C4                     u2217:
  1670  0012C4  2EE8               	decfsz	wreg,f,c
  1671  0012C6  D7FE               	bra	u2217
  1672  0012C8  F000               	nop	
  1673  0012CA                     
  1674                           ;LCD.c: 101:     LCD_Write_Instruction(LCD_FunctionSet4bit);
  1675  0012CA  0E28               	movlw	40
  1676  0012CC  EC9B  F00C         	call	_LCD_Write_Instruction
  1677  0012D0                     
  1678                           ;LCD.c: 102:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1679  0012D0  0E21               	movlw	33
  1680  0012D2                     u2227:
  1681  0012D2  2EE8               	decfsz	wreg,f,c
  1682  0012D4  D7FE               	bra	u2227
  1683  0012D6  F000               	nop	
  1684  0012D8                     
  1685                           ;LCD.c: 105:     LCD_Write_Instruction(LCD_DisplayOff);
  1686  0012D8  0E08               	movlw	8
  1687  0012DA  EC9B  F00C         	call	_LCD_Write_Instruction
  1688  0012DE                     
  1689                           ;LCD.c: 106:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1690  0012DE  0E21               	movlw	33
  1691  0012E0                     u2237:
  1692  0012E0  2EE8               	decfsz	wreg,f,c
  1693  0012E2  D7FE               	bra	u2237
  1694  0012E4  F000               	nop	
  1695  0012E6                     
  1696                           ;LCD.c: 109:     LCD_Write_Instruction(LCD_Clear);
  1697  0012E6  0E01               	movlw	1
  1698  0012E8  EC9B  F00C         	call	_LCD_Write_Instruction
  1699  0012EC                     
  1700                           ;LCD.c: 110:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1701  0012EC  0E06               	movlw	6
  1702  0012EE  0101               	movlb	1	; () banked
  1703  0012F0  6F5C               	movwf	??_LCD_Init& (0+255),b
  1704  0012F2  0E30               	movlw	48
  1705  0012F4                     u2247:
  1706  0012F4  2EE8               	decfsz	wreg,f,c
  1707  0012F6  D7FE               	bra	u2247
  1708  0012F8  2F5C               	decfsz	??_LCD_Init& (0+255),f,b
  1709  0012FA  D7FC               	bra	u2247
  1710  0012FC  F000               	nop	
  1711  0012FE                     
  1712                           ;LCD.c: 113:     LCD_Write_Instruction(LCD_EntryMode);
  1713  0012FE  0E06               	movlw	6
  1714  001300  EC9B  F00C         	call	_LCD_Write_Instruction
  1715  001304                     
  1716                           ;LCD.c: 114:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1717  001304  0E21               	movlw	33
  1718  001306                     u2257:
  1719  001306  2EE8               	decfsz	wreg,f,c
  1720  001308  D7FE               	bra	u2257
  1721  00130A  F000               	nop	
  1722  00130C                     
  1723                           ;LCD.c: 119:     LCD_Write_Instruction(LCD_DisplayOn);
  1724  00130C  0E0C               	movlw	12
  1725  00130E  EC9B  F00C         	call	_LCD_Write_Instruction
  1726  001312                     
  1727                           ;LCD.c: 120:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1728  001312  0E21               	movlw	33
  1729  001314                     u2267:
  1730  001314  2EE8               	decfsz	wreg,f,c
  1731  001316  D7FE               	bra	u2267
  1732  001318  F000               	nop	
  1733  00131A                     
  1734                           ;LCD.c: 122:     LCD_Init_Custom_Sym();
  1735  00131A  ECC1  F004         	call	_LCD_Init_Custom_Sym	;wreg free
  1736  00131E  0012               	return		;funcret
  1737  001320                     __end_of_LCD_Init:
  1738                           	opt callstack 0
  1739                           
  1740 ;; *************** function _LCD_Init_Custom_Sym *****************
  1741 ;; Defined at:
  1742 ;;		line 351 in file "LCD.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  data            8    2[BANK1 ] unsigned char [8]
  1747 ;;  i               2   10[BANK1 ] int 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0      10       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0      10       0       0       0       0       0       0
  1761 ;;Total ram usage:       10 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    8
  1764 ;; This function calls:
  1765 ;;		_LCD_SetCGRAM
  1766 ;;		_LCD_Write_Symbol
  1767 ;; This function is called by:
  1768 ;;		_LCD_Init
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text10
  1773  000982                     __ptext10:
  1774                           	opt callstack 0
  1775  000982                     _LCD_Init_Custom_Sym:
  1776                           	opt callstack 21
  1777  000982                     
  1778                           ;LCD.c: 354:     int i;;LCD.c: 355:     uint8 data[8] = { 0x00,
  1779  000982  EE20  F0F5         	lfsr	2,LCD_Init_Custom_Sym@F3257
  1780  000986  EE11  F052         	lfsr	1,LCD_Init_Custom_Sym@data
  1781  00098A  0E07               	movlw	7
  1782  00098C                     u2021:
  1783  00098C  CFDB FFE3          	movff	plusw2,plusw1
  1784  000990  06E8               	decf	wreg,f,c
  1785  000992  E2FC               	bc	u2021
  1786  000994                     
  1787                           ;LCD.c: 363:     LCD_SetCGRAM(LCD_MOTOR1*8);
  1788  000994  0E00               	movlw	0
  1789  000996  ECE7  F00C         	call	_LCD_SetCGRAM
  1790  00099A                     
  1791                           ;LCD.c: 364:     for(i =0;i<8;i++){
  1792  00099A  0E00               	movlw	0
  1793  00099C  0101               	movlb	1	; () banked
  1794  00099E  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  1795  0009A0  0E00               	movlw	0
  1796  0009A2  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  1797  0009A4                     l2466:
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;LCD.c: 365:         LCD_Write_Symbol(data[i]);
  1801  0009A4  0E52               	movlw	low LCD_Init_Custom_Sym@data
  1802  0009A6  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1803  0009A8  6ED9               	movwf	fsr2l,c
  1804  0009AA  0E01               	movlw	high LCD_Init_Custom_Sym@data
  1805  0009AC  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1806  0009AE  6EDA               	movwf	fsr2h,c
  1807  0009B0  50DF               	movf	indf2,w,c
  1808  0009B2  EC75  F00C         	call	_LCD_Write_Symbol
  1809  0009B6                     
  1810                           ;LCD.c: 366:     }
  1811  0009B6  0101               	movlb	1	; () banked
  1812  0009B8  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  1813  0009BA  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  1814  0009BC                     
  1815                           ; BSR set to: 1
  1816  0009BC  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  1817  0009BE  EFEA  F004         	goto	u2031
  1818  0009C2  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1819  0009C4  E109               	bnz	u2030
  1820  0009C6  0E08               	movlw	8
  1821  0009C8  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1822  0009CA  A0D8               	btfss	status,0,c
  1823  0009CC  EFEA  F004         	goto	u2031
  1824  0009D0  EFEC  F004         	goto	u2030
  1825  0009D4                     u2031:
  1826  0009D4  EFD2  F004         	goto	l2466
  1827  0009D8                     u2030:
  1828  0009D8                     
  1829                           ; BSR set to: 1
  1830                           ;LCD.c: 368:     data[0] = 0x00;
  1831  0009D8  0E00               	movlw	0
  1832  0009DA  6F52               	movwf	LCD_Init_Custom_Sym@data& (0+255),b
  1833                           
  1834                           ;LCD.c: 369:     data[1] = 0xF8;
  1835  0009DC  0EF8               	movlw	248
  1836  0009DE  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  1837                           
  1838                           ;LCD.c: 370:     data[2] = 0xF8;
  1839  0009E0  0EF8               	movlw	248
  1840  0009E2  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  1841                           
  1842                           ;LCD.c: 371:     data[3] = 0x00;
  1843  0009E4  0E00               	movlw	0
  1844  0009E6  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  1845                           
  1846                           ;LCD.c: 372:     data[4] = 0x00;
  1847  0009E8  0E00               	movlw	0
  1848  0009EA  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  1849                           
  1850                           ;LCD.c: 373:     data[5] = 0x00;
  1851  0009EC  0E00               	movlw	0
  1852  0009EE  6F57               	movwf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  1853                           
  1854                           ;LCD.c: 374:     data[6] = 0x00;
  1855  0009F0  0E00               	movlw	0
  1856  0009F2  6F58               	movwf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  1857                           
  1858                           ;LCD.c: 375:     data[7] = 0x00;
  1859  0009F4  0E00               	movlw	0
  1860  0009F6  6F59               	movwf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  1861  0009F8                     
  1862                           ; BSR set to: 1
  1863                           ;LCD.c: 376:     LCD_SetCGRAM(LCD_MOTOR2*8);
  1864  0009F8  0E08               	movlw	8
  1865  0009FA  ECE7  F00C         	call	_LCD_SetCGRAM
  1866  0009FE                     
  1867                           ;LCD.c: 377:     for(i =0;i<8;i++){
  1868  0009FE  0E00               	movlw	0
  1869  000A00  0101               	movlb	1	; () banked
  1870  000A02  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  1871  000A04  0E00               	movlw	0
  1872  000A06  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  1873  000A08                     l2482:
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;LCD.c: 378:         LCD_Write_Symbol(data[i]);
  1877  000A08  0E52               	movlw	low LCD_Init_Custom_Sym@data
  1878  000A0A  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1879  000A0C  6ED9               	movwf	fsr2l,c
  1880  000A0E  0E01               	movlw	high LCD_Init_Custom_Sym@data
  1881  000A10  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1882  000A12  6EDA               	movwf	fsr2h,c
  1883  000A14  50DF               	movf	indf2,w,c
  1884  000A16  EC75  F00C         	call	_LCD_Write_Symbol
  1885  000A1A                     
  1886                           ;LCD.c: 379:     }
  1887  000A1A  0101               	movlb	1	; () banked
  1888  000A1C  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  1889  000A1E  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  1890  000A20                     
  1891                           ; BSR set to: 1
  1892  000A20  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  1893  000A22  EF1C  F005         	goto	u2041
  1894  000A26  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1895  000A28  E109               	bnz	u2040
  1896  000A2A  0E08               	movlw	8
  1897  000A2C  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1898  000A2E  A0D8               	btfss	status,0,c
  1899  000A30  EF1C  F005         	goto	u2041
  1900  000A34  EF1E  F005         	goto	u2040
  1901  000A38                     u2041:
  1902  000A38  EF04  F005         	goto	l2482
  1903  000A3C                     u2040:
  1904  000A3C                     
  1905                           ; BSR set to: 1
  1906                           ;LCD.c: 381:     data[0] = 0x00;
  1907  000A3C  0E00               	movlw	0
  1908  000A3E  6F52               	movwf	LCD_Init_Custom_Sym@data& (0+255),b
  1909                           
  1910                           ;LCD.c: 382:     data[1] = 0x03;
  1911  000A40  0E03               	movlw	3
  1912  000A42  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  1913                           
  1914                           ;LCD.c: 383:     data[2] = 0x03;
  1915  000A44  0E03               	movlw	3
  1916  000A46  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  1917                           
  1918                           ;LCD.c: 384:     data[3] = 0x00;
  1919  000A48  0E00               	movlw	0
  1920  000A4A  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  1921                           
  1922                           ;LCD.c: 385:     data[4] = 0x00;
  1923  000A4C  0E00               	movlw	0
  1924  000A4E  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  1925                           
  1926                           ;LCD.c: 386:     data[5] = 0x00;
  1927  000A50  0E00               	movlw	0
  1928  000A52  6F57               	movwf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  1929                           
  1930                           ;LCD.c: 387:     data[6] = 0x00;
  1931  000A54  0E00               	movlw	0
  1932  000A56  6F58               	movwf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  1933                           
  1934                           ;LCD.c: 388:     data[7] = 0x00;
  1935  000A58  0E00               	movlw	0
  1936  000A5A  6F59               	movwf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  1937  000A5C                     
  1938                           ; BSR set to: 1
  1939                           ;LCD.c: 389:     LCD_SetCGRAM(LCD_MOTOR3*8);
  1940  000A5C  0E10               	movlw	16
  1941  000A5E  ECE7  F00C         	call	_LCD_SetCGRAM
  1942  000A62                     
  1943                           ;LCD.c: 390:     for(i =0;i<8;i++){
  1944  000A62  0E00               	movlw	0
  1945  000A64  0101               	movlb	1	; () banked
  1946  000A66  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  1947  000A68  0E00               	movlw	0
  1948  000A6A  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  1949  000A6C                     l2498:
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;LCD.c: 391:         LCD_Write_Symbol(data[i]);
  1953  000A6C  0E52               	movlw	low LCD_Init_Custom_Sym@data
  1954  000A6E  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1955  000A70  6ED9               	movwf	fsr2l,c
  1956  000A72  0E01               	movlw	high LCD_Init_Custom_Sym@data
  1957  000A74  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1958  000A76  6EDA               	movwf	fsr2h,c
  1959  000A78  50DF               	movf	indf2,w,c
  1960  000A7A  EC75  F00C         	call	_LCD_Write_Symbol
  1961  000A7E                     
  1962                           ;LCD.c: 392:     }
  1963  000A7E  0101               	movlb	1	; () banked
  1964  000A80  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  1965  000A82  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  1966  000A84                     
  1967                           ; BSR set to: 1
  1968  000A84  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  1969  000A86  EF4E  F005         	goto	u2051
  1970  000A8A  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  1971  000A8C  E109               	bnz	u2050
  1972  000A8E  0E08               	movlw	8
  1973  000A90  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  1974  000A92  A0D8               	btfss	status,0,c
  1975  000A94  EF4E  F005         	goto	u2051
  1976  000A98  EF50  F005         	goto	u2050
  1977  000A9C                     u2051:
  1978  000A9C  EF36  F005         	goto	l2498
  1979  000AA0                     u2050:
  1980  000AA0                     
  1981                           ; BSR set to: 1
  1982                           ;LCD.c: 395:     data[0] = 0x00;
  1983  000AA0  0E00               	movlw	0
  1984  000AA2  6F52               	movwf	LCD_Init_Custom_Sym@data& (0+255),b
  1985                           
  1986                           ;LCD.c: 396:     data[1] = 0x00;
  1987  000AA4  0E00               	movlw	0
  1988  000AA6  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  1989                           
  1990                           ;LCD.c: 397:     data[2] = 0x00;
  1991  000AA8  0E00               	movlw	0
  1992  000AAA  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  1993                           
  1994                           ;LCD.c: 398:     data[3] = 0x00;
  1995  000AAC  0E00               	movlw	0
  1996  000AAE  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  1997                           
  1998                           ;LCD.c: 399:     data[4] = 0x00;
  1999  000AB0  0E00               	movlw	0
  2000  000AB2  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  2001                           
  2002                           ;LCD.c: 400:     data[5] = 0x03;
  2003  000AB4  0E03               	movlw	3
  2004  000AB6  6F57               	movwf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  2005                           
  2006                           ;LCD.c: 401:     data[6] = 0x03;
  2007  000AB8  0E03               	movlw	3
  2008  000ABA  6F58               	movwf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  2009                           
  2010                           ;LCD.c: 402:     data[7] = 0x00;
  2011  000ABC  0E00               	movlw	0
  2012  000ABE  6F59               	movwf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  2013  000AC0                     
  2014                           ; BSR set to: 1
  2015                           ;LCD.c: 403:     LCD_SetCGRAM(LCD_MOTOR4*8);
  2016  000AC0  0E18               	movlw	24
  2017  000AC2  ECE7  F00C         	call	_LCD_SetCGRAM
  2018  000AC6                     
  2019                           ;LCD.c: 404:     for(i =0;i<8;i++){
  2020  000AC6  0E00               	movlw	0
  2021  000AC8  0101               	movlb	1	; () banked
  2022  000ACA  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  2023  000ACC  0E00               	movlw	0
  2024  000ACE  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  2025  000AD0                     l2514:
  2026                           
  2027                           ; BSR set to: 1
  2028                           ;LCD.c: 405:         LCD_Write_Symbol(data[i]);
  2029  000AD0  0E52               	movlw	low LCD_Init_Custom_Sym@data
  2030  000AD2  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2031  000AD4  6ED9               	movwf	fsr2l,c
  2032  000AD6  0E01               	movlw	high LCD_Init_Custom_Sym@data
  2033  000AD8  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2034  000ADA  6EDA               	movwf	fsr2h,c
  2035  000ADC  50DF               	movf	indf2,w,c
  2036  000ADE  EC75  F00C         	call	_LCD_Write_Symbol
  2037  000AE2                     
  2038                           ;LCD.c: 406:     }
  2039  000AE2  0101               	movlb	1	; () banked
  2040  000AE4  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  2041  000AE6  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  2042  000AE8                     
  2043                           ; BSR set to: 1
  2044  000AE8  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  2045  000AEA  EF80  F005         	goto	u2061
  2046  000AEE  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2047  000AF0  E109               	bnz	u2060
  2048  000AF2  0E08               	movlw	8
  2049  000AF4  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2050  000AF6  A0D8               	btfss	status,0,c
  2051  000AF8  EF80  F005         	goto	u2061
  2052  000AFC  EF82  F005         	goto	u2060
  2053  000B00                     u2061:
  2054  000B00  EF68  F005         	goto	l2514
  2055  000B04                     u2060:
  2056  000B04                     
  2057                           ; BSR set to: 1
  2058                           ;LCD.c: 409:     data[0] = 0xFF;
  2059  000B04  6952               	setf	LCD_Init_Custom_Sym@data& (0+255),b
  2060  000B06                     
  2061                           ; BSR set to: 1
  2062                           ;LCD.c: 410:     data[1] = 0x11;
  2063  000B06  0E11               	movlw	17
  2064  000B08  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  2065                           
  2066                           ;LCD.c: 411:     data[2] = 0x15;
  2067  000B0A  0E15               	movlw	21
  2068  000B0C  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  2069                           
  2070                           ;LCD.c: 412:     data[3] = 0x15;
  2071  000B0E  0E15               	movlw	21
  2072  000B10  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  2073                           
  2074                           ;LCD.c: 413:     data[4] = 0x15;
  2075  000B12  0E15               	movlw	21
  2076  000B14  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  2077  000B16                     
  2078                           ; BSR set to: 1
  2079                           ;LCD.c: 414:     data[5] = 0xFF;
  2080  000B16  6957               	setf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  2081  000B18                     
  2082                           ; BSR set to: 1
  2083                           ;LCD.c: 415:     data[6] = 0xFF;
  2084  000B18  6958               	setf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  2085                           
  2086                           ;LCD.c: 416:     data[7] = 0x04;
  2087  000B1A  0E04               	movlw	4
  2088  000B1C  6F59               	movwf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  2089  000B1E                     
  2090                           ; BSR set to: 1
  2091                           ;LCD.c: 417:     LCD_SetCGRAM(LCD_LAMP*8);
  2092  000B1E  0E20               	movlw	32
  2093  000B20  ECE7  F00C         	call	_LCD_SetCGRAM
  2094  000B24                     
  2095                           ;LCD.c: 418:     for(i =0;i<8;i++){
  2096  000B24  0E00               	movlw	0
  2097  000B26  0101               	movlb	1	; () banked
  2098  000B28  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  2099  000B2A  0E00               	movlw	0
  2100  000B2C  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  2101  000B2E                     l2534:
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;LCD.c: 419:         LCD_Write_Symbol(data[i]);
  2105  000B2E  0E52               	movlw	low LCD_Init_Custom_Sym@data
  2106  000B30  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2107  000B32  6ED9               	movwf	fsr2l,c
  2108  000B34  0E01               	movlw	high LCD_Init_Custom_Sym@data
  2109  000B36  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2110  000B38  6EDA               	movwf	fsr2h,c
  2111  000B3A  50DF               	movf	indf2,w,c
  2112  000B3C  EC75  F00C         	call	_LCD_Write_Symbol
  2113  000B40                     
  2114                           ;LCD.c: 420:     }
  2115  000B40  0101               	movlb	1	; () banked
  2116  000B42  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  2117  000B44  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  2118  000B46                     
  2119                           ; BSR set to: 1
  2120  000B46  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  2121  000B48  EFAF  F005         	goto	u2071
  2122  000B4C  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2123  000B4E  E109               	bnz	u2070
  2124  000B50  0E08               	movlw	8
  2125  000B52  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2126  000B54  A0D8               	btfss	status,0,c
  2127  000B56  EFAF  F005         	goto	u2071
  2128  000B5A  EFB1  F005         	goto	u2070
  2129  000B5E                     u2071:
  2130  000B5E  EF97  F005         	goto	l2534
  2131  000B62                     u2070:
  2132  000B62                     
  2133                           ; BSR set to: 1
  2134                           ;LCD.c: 426:     data[0] = 0xE9;
  2135  000B62  0EE9               	movlw	233
  2136  000B64  6F52               	movwf	LCD_Init_Custom_Sym@data& (0+255),b
  2137                           
  2138                           ;LCD.c: 427:     data[1] = 0xF2;
  2139  000B66  0EF2               	movlw	242
  2140  000B68  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  2141                           
  2142                           ;LCD.c: 428:     data[2] = 0xE9;
  2143  000B6A  0EE9               	movlw	233
  2144  000B6C  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  2145                           
  2146                           ;LCD.c: 429:     data[3] = 0xF2;
  2147  000B6E  0EF2               	movlw	242
  2148  000B70  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  2149                           
  2150                           ;LCD.c: 430:     data[4] = 0x00;
  2151  000B72  0E00               	movlw	0
  2152  000B74  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  2153  000B76                     
  2154                           ; BSR set to: 1
  2155                           ;LCD.c: 431:     data[5] = 0xFF;
  2156  000B76  6957               	setf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  2157  000B78                     
  2158                           ; BSR set to: 1
  2159                           ;LCD.c: 432:     data[6] = 0xFF;
  2160  000B78  6958               	setf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  2161                           
  2162                           ;LCD.c: 433:     data[7] = 0x0E;
  2163  000B7A  0E0E               	movlw	14
  2164  000B7C  6F59               	movwf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  2165  000B7E                     
  2166                           ; BSR set to: 1
  2167                           ;LCD.c: 434:     LCD_SetCGRAM(LCD_HEATER*8);
  2168  000B7E  0E28               	movlw	40
  2169  000B80  ECE7  F00C         	call	_LCD_SetCGRAM
  2170  000B84                     
  2171                           ;LCD.c: 435:     for(i =0;i<8;i++){
  2172  000B84  0E00               	movlw	0
  2173  000B86  0101               	movlb	1	; () banked
  2174  000B88  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  2175  000B8A  0E00               	movlw	0
  2176  000B8C  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  2177  000B8E                     l2554:
  2178                           
  2179                           ; BSR set to: 1
  2180                           ;LCD.c: 436:         LCD_Write_Symbol(data[i]);
  2181  000B8E  0E52               	movlw	low LCD_Init_Custom_Sym@data
  2182  000B90  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2183  000B92  6ED9               	movwf	fsr2l,c
  2184  000B94  0E01               	movlw	high LCD_Init_Custom_Sym@data
  2185  000B96  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2186  000B98  6EDA               	movwf	fsr2h,c
  2187  000B9A  50DF               	movf	indf2,w,c
  2188  000B9C  EC75  F00C         	call	_LCD_Write_Symbol
  2189  000BA0                     
  2190                           ;LCD.c: 437:     }
  2191  000BA0  0101               	movlb	1	; () banked
  2192  000BA2  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  2193  000BA4  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  2194  000BA6                     
  2195                           ; BSR set to: 1
  2196  000BA6  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  2197  000BA8  EFDF  F005         	goto	u2081
  2198  000BAC  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2199  000BAE  E109               	bnz	u2080
  2200  000BB0  0E08               	movlw	8
  2201  000BB2  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2202  000BB4  A0D8               	btfss	status,0,c
  2203  000BB6  EFDF  F005         	goto	u2081
  2204  000BBA  EFE1  F005         	goto	u2080
  2205  000BBE                     u2081:
  2206  000BBE  EFC7  F005         	goto	l2554
  2207  000BC2                     u2080:
  2208  000BC2                     
  2209                           ; BSR set to: 1
  2210                           ;LCD.c: 441:     data[0] = 0xFF;
  2211  000BC2  6952               	setf	LCD_Init_Custom_Sym@data& (0+255),b
  2212  000BC4                     
  2213                           ; BSR set to: 1
  2214                           ;LCD.c: 442:     data[1] = 0x11;
  2215  000BC4  0E11               	movlw	17
  2216  000BC6  6F53               	movwf	(LCD_Init_Custom_Sym@data+1)& (0+255),b
  2217                           
  2218                           ;LCD.c: 443:     data[2] = 0x11;
  2219  000BC8  0E11               	movlw	17
  2220  000BCA  6F54               	movwf	(LCD_Init_Custom_Sym@data+2)& (0+255),b
  2221                           
  2222                           ;LCD.c: 444:     data[3] = 0x11;
  2223  000BCC  0E11               	movlw	17
  2224  000BCE  6F55               	movwf	(LCD_Init_Custom_Sym@data+3)& (0+255),b
  2225                           
  2226                           ;LCD.c: 445:     data[4] = 0x19;
  2227  000BD0  0E19               	movlw	25
  2228  000BD2  6F56               	movwf	(LCD_Init_Custom_Sym@data+4)& (0+255),b
  2229                           
  2230                           ;LCD.c: 446:     data[5] = 0x11;
  2231  000BD4  0E11               	movlw	17
  2232  000BD6  6F57               	movwf	(LCD_Init_Custom_Sym@data+5)& (0+255),b
  2233                           
  2234                           ;LCD.c: 447:     data[6] = 0x11;
  2235  000BD8  0E11               	movlw	17
  2236  000BDA  6F58               	movwf	(LCD_Init_Custom_Sym@data+6)& (0+255),b
  2237  000BDC                     
  2238                           ; BSR set to: 1
  2239                           ;LCD.c: 448:     data[7] = 0xFF;
  2240  000BDC  6959               	setf	(LCD_Init_Custom_Sym@data+7)& (0+255),b
  2241  000BDE                     
  2242                           ; BSR set to: 1
  2243                           ;LCD.c: 449:     LCD_SetCGRAM(LCD_DOOR*8);
  2244  000BDE  0E30               	movlw	48
  2245  000BE0  ECE7  F00C         	call	_LCD_SetCGRAM
  2246  000BE4                     
  2247                           ;LCD.c: 450:     for(i =0;i<8;i++){
  2248  000BE4  0E00               	movlw	0
  2249  000BE6  0101               	movlb	1	; () banked
  2250  000BE8  6F5B               	movwf	(LCD_Init_Custom_Sym@i+1)& (0+255),b
  2251  000BEA  0E00               	movlw	0
  2252  000BEC  6F5A               	movwf	LCD_Init_Custom_Sym@i& (0+255),b
  2253  000BEE                     l2572:
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;LCD.c: 451:         LCD_Write_Symbol(data[i]);
  2257  000BEE  0E52               	movlw	low LCD_Init_Custom_Sym@data
  2258  000BF0  255A               	addwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2259  000BF2  6ED9               	movwf	fsr2l,c
  2260  000BF4  0E01               	movlw	high LCD_Init_Custom_Sym@data
  2261  000BF6  215B               	addwfc	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2262  000BF8  6EDA               	movwf	fsr2h,c
  2263  000BFA  50DF               	movf	indf2,w,c
  2264  000BFC  EC75  F00C         	call	_LCD_Write_Symbol
  2265  000C00                     
  2266                           ;LCD.c: 452:     }
  2267  000C00  0101               	movlb	1	; () banked
  2268  000C02  4B5A               	infsnz	LCD_Init_Custom_Sym@i& (0+255),f,b
  2269  000C04  2B5B               	incf	(LCD_Init_Custom_Sym@i+1)& (0+255),f,b
  2270  000C06                     
  2271                           ; BSR set to: 1
  2272  000C06  BF5B               	btfsc	(LCD_Init_Custom_Sym@i+1)& (0+255),7,b
  2273  000C08  EF0F  F006         	goto	u2091
  2274  000C0C  515B               	movf	(LCD_Init_Custom_Sym@i+1)& (0+255),w,b
  2275  000C0E  E109               	bnz	u2090
  2276  000C10  0E08               	movlw	8
  2277  000C12  5D5A               	subwf	LCD_Init_Custom_Sym@i& (0+255),w,b
  2278  000C14  A0D8               	btfss	status,0,c
  2279  000C16  EF0F  F006         	goto	u2091
  2280  000C1A  EF11  F006         	goto	u2090
  2281  000C1E                     u2091:
  2282  000C1E  EFF7  F005         	goto	l2572
  2283  000C22                     u2090:
  2284  000C22                     
  2285                           ; BSR set to: 1
  2286  000C22  0012               	return		;funcret
  2287  000C24                     __end_of_LCD_Init_Custom_Sym:
  2288                           	opt callstack 0
  2289                           
  2290 ;; *************** function _LCD_Write_Symbol *****************
  2291 ;; Defined at:
  2292 ;;		line 170 in file "LCD.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  sym             1    wreg     unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  sym             1    0[BANK1 ] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2310 ;;Total ram usage:        1 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    6
  2313 ;; This function calls:
  2314 ;;		_LCD_Data_Out
  2315 ;; This function is called by:
  2316 ;;		_LCD_Init_Custom_Sym
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text11
  2321  0018EA                     __ptext11:
  2322                           	opt callstack 0
  2323  0018EA                     _LCD_Write_Symbol:
  2324                           	opt callstack 22
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;incstack = 0
  2328                           ;LCD_Write_Symbol@sym stored from wreg
  2329  0018EA  0101               	movlb	1	; () banked
  2330  0018EC  6F50               	movwf	LCD_Write_Symbol@sym& (0+255),b
  2331  0018EE                     
  2332                           ;LCD.c: 170: static void LCD_Write_Symbol(uint8 sym);LCD.c: 171: {;LCD.c: 173:     (((PO
      +                          RTE))=((PORTE) & ~(1<<(2)))|(1<<(2)));
  2333  0018EE  5084               	movf	132,w,c	;volatile
  2334  0018F0  0BFB               	andlw	251
  2335  0018F2  0904               	iorlw	4
  2336  0018F4  6E84               	movwf	132,c	;volatile
  2337                           
  2338                           ;LCD.c: 175:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2339  0018F6  5084               	movf	132,w,c	;volatile
  2340  0018F8  0BFD               	andlw	253
  2341  0018FA  6E84               	movwf	132,c	;volatile
  2342  0018FC                     
  2343                           ;LCD.c: 179:     LCD_Data_Out((sym>>4));
  2344  0018FC  0101               	movlb	1	; () banked
  2345  0018FE  3950               	swapf	LCD_Write_Symbol@sym& (0+255),w,b
  2346  001900  0B0F               	andlw	15
  2347  001902  EC47  F00C         	call	_LCD_Data_Out
  2348  001906                     
  2349                           ;LCD.c: 181:     LCD_Data_Out(sym);
  2350  001906  0101               	movlb	1	; () banked
  2351  001908  5150               	movf	LCD_Write_Symbol@sym& (0+255),w,b
  2352  00190A  EC47  F00C         	call	_LCD_Data_Out
  2353  00190E  0012               	return		;funcret
  2354  001910                     __end_of_LCD_Write_Symbol:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _LCD_SetCGRAM *****************
  2358 ;; Defined at:
  2359 ;;		line 454 in file "LCD.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  ADDRESS         1    wreg     unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  ADDRESS         1    1[BANK1 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0
  2374 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2376 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2377 ;;Total ram usage:        1 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    7
  2380 ;; This function calls:
  2381 ;;		_LCD_Write_Instruction
  2382 ;; This function is called by:
  2383 ;;		_LCD_Init_Custom_Sym
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text12
  2388  0019CE                     __ptext12:
  2389                           	opt callstack 0
  2390  0019CE                     _LCD_SetCGRAM:
  2391                           	opt callstack 21
  2392                           
  2393                           ;incstack = 0
  2394                           ;LCD_SetCGRAM@ADDRESS stored from wreg
  2395  0019CE  0101               	movlb	1	; () banked
  2396  0019D0  6F51               	movwf	LCD_SetCGRAM@ADDRESS& (0+255),b
  2397  0019D2                     
  2398                           ;LCD.c: 454: static void LCD_SetCGRAM(uint8 ADDRESS);LCD.c: 455: {;LCD.c: 456:     ADDRE
      +                          SS &= 0x3f;
  2399  0019D2  0E3F               	movlw	63
  2400  0019D4  0101               	movlb	1	; () banked
  2401  0019D6  1751               	andwf	LCD_SetCGRAM@ADDRESS& (0+255),f,b
  2402  0019D8                     
  2403                           ; BSR set to: 1
  2404                           ;LCD.c: 457:     ADDRESS |= 0x40;
  2405  0019D8  8D51               	bsf	LCD_SetCGRAM@ADDRESS& (0+255),6,b
  2406  0019DA                     
  2407                           ; BSR set to: 1
  2408                           ;LCD.c: 458:     LCD_Write_Instruction(ADDRESS);
  2409  0019DA  5151               	movf	LCD_SetCGRAM@ADDRESS& (0+255),w,b
  2410  0019DC  EC9B  F00C         	call	_LCD_Write_Instruction
  2411  0019E0  0012               	return		;funcret
  2412  0019E2                     __end_of_LCD_SetCGRAM:
  2413                           	opt callstack 0
  2414                           
  2415 ;; *************** function _LCD_Write_Instruction *****************
  2416 ;; Defined at:
  2417 ;;		line 208 in file "LCD.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  inst            1    wreg     enum E3182
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  inst            1    0[BANK1 ] enum E3182
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2435 ;;Total ram usage:        1 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    6
  2438 ;; This function calls:
  2439 ;;		_LCD_Data_Out
  2440 ;; This function is called by:
  2441 ;;		_LCD_Init
  2442 ;;		_LCD_SetCGRAM
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text13
  2447  001936                     __ptext13:
  2448                           	opt callstack 0
  2449  001936                     _LCD_Write_Instruction:
  2450                           	opt callstack 23
  2451                           
  2452                           ;incstack = 0
  2453                           ;LCD_Write_Instruction@inst stored from wreg
  2454  001936  0101               	movlb	1	; () banked
  2455  001938  6F50               	movwf	LCD_Write_Instruction@inst& (0+255),b
  2456  00193A                     
  2457                           ;LCD.c: 208: static void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 209: {;LCD
      +                          .c: 211:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  2458  00193A  5084               	movf	132,w,c	;volatile
  2459  00193C  0BFB               	andlw	251
  2460  00193E  6E84               	movwf	132,c	;volatile
  2461                           
  2462                           ;LCD.c: 213:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2463  001940  5084               	movf	132,w,c	;volatile
  2464  001942  0BFD               	andlw	253
  2465  001944  6E84               	movwf	132,c	;volatile
  2466  001946                     
  2467                           ;LCD.c: 215:     LCD_Data_Out((inst>>4));
  2468  001946  0101               	movlb	1	; () banked
  2469  001948  3950               	swapf	LCD_Write_Instruction@inst& (0+255),w,b
  2470  00194A  0B0F               	andlw	15
  2471  00194C  EC47  F00C         	call	_LCD_Data_Out
  2472  001950                     
  2473                           ;LCD.c: 216:     LCD_Data_Out(inst);
  2474  001950  0101               	movlb	1	; () banked
  2475  001952  5150               	movf	LCD_Write_Instruction@inst& (0+255),w,b
  2476  001954  EC47  F00C         	call	_LCD_Data_Out
  2477  001958  0012               	return		;funcret
  2478  00195A                     __end_of_LCD_Write_Instruction:
  2479                           	opt callstack 0
  2480                           
  2481 ;; *************** function _LCD_Data_Out *****************
  2482 ;; Defined at:
  2483 ;;		line 230 in file "LCD.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  byte            1    wreg     unsigned char 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  byte            1    0[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0
  2498 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2500 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2501 ;;Total ram usage:        1 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    5
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_LCD_Init
  2508 ;;		_LCD_Write_Symbol
  2509 ;;		_LCD_Write_Instruction
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text14
  2514  00188E                     __ptext14:
  2515                           	opt callstack 0
  2516  00188E                     _LCD_Data_Out:
  2517                           	opt callstack 23
  2518                           
  2519                           ;incstack = 0
  2520                           ;LCD_Data_Out@byte stored from wreg
  2521  00188E  0100               	movlb	0	; () banked
  2522  001890  6FFF               	movwf	LCD_Data_Out@byte& (0+255),b
  2523  001892                     
  2524                           ;LCD.c: 230: static void LCD_Data_Out(uint8 byte);LCD.c: 231: {;LCD.c: 234:        (((PO
      +                          RTD))=(((PORTD))&~(0xF<<((1)*4)))); (((PORTD))=(((PORTD))|((byte<<((1)*4))&(0xF<<((1)*4)
      +                          ))));
  2525  001892  5083               	movf	131,w,c	;volatile
  2526  001894  0B0F               	andlw	15
  2527  001896  6E83               	movwf	131,c	;volatile
  2528  001898  0100               	movlb	0	; () banked
  2529  00189A  39FF               	swapf	LCD_Data_Out@byte& (0+255),w,b
  2530  00189C  0BF0               	andlw	240
  2531  00189E  0BF0               	andlw	240
  2532  0018A0  1083               	iorwf	131,w,c	;volatile
  2533  0018A2  6E83               	movwf	131,c	;volatile
  2534                           
  2535                           ;LCD.c: 237:        (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
  2536  0018A4  5084               	movf	132,w,c	;volatile
  2537  0018A6  0BFD               	andlw	253
  2538  0018A8  0902               	iorlw	2
  2539  0018AA  6E84               	movwf	132,c	;volatile
  2540  0018AC                     
  2541                           ; BSR set to: 0
  2542                           ;LCD.c: 239:        _delay((unsigned long)((100)*(8000000/4000000.0)));
  2543  0018AC  0E42               	movlw	66
  2544  0018AE                     u2277:
  2545  0018AE  2EE8               	decfsz	wreg,f,c
  2546  0018B0  D7FE               	bra	u2277
  2547  0018B2  D000               	nop2	
  2548  0018B4                     
  2549                           ;LCD.c: 241:        (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  2550  0018B4  5084               	movf	132,w,c	;volatile
  2551  0018B6  0BFD               	andlw	253
  2552  0018B8  6E84               	movwf	132,c	;volatile
  2553  0018BA                     
  2554                           ;LCD.c: 243:        _delay((unsigned long)((1)*(8000000/4000000.0)));
  2555  0018BA  D000               	nop2		;2 cycle nop
  2556  0018BC  0012               	return		;funcret
  2557  0018BE                     __end_of_LCD_Data_Out:
  2558                           	opt callstack 0
  2559                           
  2560 ;; *************** function _GPIO_Init_Pin *****************
  2561 ;; Defined at:
  2562 ;;		line 30 in file "GPIO.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  DirRegAddres    2    0[BANK1 ] PTR volatile unsigned ch
  2565 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  2566 ;;  pin_number      1    2[BANK1 ] unsigned char 
  2567 ;;  dir             1    3[BANK1 ] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  ret             1    0        unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2579 ;;      Params:         0       0       4       0       0       0       0       0       0
  2580 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       5       0       0       0       0       0       0
  2582 ;;      Totals:         0       1       9       0       0       0       0       0       0
  2583 ;;Total ram usage:       10 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    5
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_SW_Init
  2590 ;;		_DO_Init
  2591 ;;		_LCD_Init
  2592 ;;		_keypad_Init
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text15
  2597  001320                     __ptext15:
  2598                           	opt callstack 0
  2599  001320                     _GPIO_Init_Pin:
  2600                           	opt callstack 24
  2601  001320                     
  2602                           ;GPIO.c: 34:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2603  001320  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2604  001324  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2605  001328  5092               	movf	146,w,c	;volatile
  2606  00132A  18DE               	xorwf	postinc2,w,c
  2607  00132C  B4D8               	btfsc	status,2,c
  2608  00132E  EF9B  F009         	goto	u1851
  2609  001332  EF9D  F009         	goto	u1850
  2610  001336                     u1851:
  2611  001336  EFD3  F009         	goto	l2398
  2612  00133A                     u1850:
  2613  00133A  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2614  00133E  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2615  001342  5093               	movf	147,w,c	;volatile
  2616  001344  18DE               	xorwf	postinc2,w,c
  2617  001346  B4D8               	btfsc	status,2,c
  2618  001348  EFA8  F009         	goto	u1861
  2619  00134C  EFAA  F009         	goto	u1860
  2620  001350                     u1861:
  2621  001350  EFD3  F009         	goto	l2398
  2622  001354                     u1860:
  2623  001354  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2624  001358  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2625  00135C  5094               	movf	148,w,c	;volatile
  2626  00135E  18DE               	xorwf	postinc2,w,c
  2627  001360  B4D8               	btfsc	status,2,c
  2628  001362  EFB5  F009         	goto	u1871
  2629  001366  EFB7  F009         	goto	u1870
  2630  00136A                     u1871:
  2631  00136A  EFD3  F009         	goto	l2398
  2632  00136E                     u1870:
  2633  00136E  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2634  001372  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2635  001376  5095               	movf	149,w,c	;volatile
  2636  001378  18DE               	xorwf	postinc2,w,c
  2637  00137A  B4D8               	btfsc	status,2,c
  2638  00137C  EFC2  F009         	goto	u1881
  2639  001380  EFC4  F009         	goto	u1880
  2640  001384                     u1881:
  2641  001384  EFD3  F009         	goto	l2398
  2642  001388                     u1880:
  2643  001388  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2644  00138C  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2645  001390  5096               	movf	150,w,c	;volatile
  2646  001392  18DE               	xorwf	postinc2,w,c
  2647  001394  B4D8               	btfsc	status,2,c
  2648  001396  EFCF  F009         	goto	u1891
  2649  00139A  EFD1  F009         	goto	u1890
  2650  00139E                     u1891:
  2651  00139E  EFD3  F009         	goto	l2398
  2652  0013A2                     u1890:
  2653  0013A2                     
  2654                           ;GPIO.c: 40:     }
  2655  0013A2  EFFD  F009         	goto	l24
  2656  0013A6                     l2398:
  2657                           
  2658                           ;GPIO.c: 42:     {;GPIO.c: 43:         ((*DirRegAddress)=(*DirRegAddress & ~(1<<pin_numb
      +                          er))|(dir<<pin_number));
  2659  0013A6  C152  F154         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin
  2660  0013AA  C153  F155         	movff	GPIO_Init_Pin@dir,??_GPIO_Init_Pin+1
  2661  0013AE  0101               	movlb	1	; () banked
  2662  0013B0  2B54               	incf	??_GPIO_Init_Pin& (0+255),f,b
  2663  0013B2  EFDD  F009         	goto	u1904
  2664  0013B6                     u1905:
  2665  0013B6  90D8               	bcf	status,0,c
  2666  0013B8  3755               	rlcf	(??_GPIO_Init_Pin+1)& (0+255),f,b
  2667  0013BA                     u1904:
  2668  0013BA  2F54               	decfsz	??_GPIO_Init_Pin& (0+255),f,b
  2669  0013BC  EFDB  F009         	goto	u1905
  2670  0013C0  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2671  0013C4  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2672  0013C8  50DF               	movf	indf2,w,c
  2673  0013CA  0101               	movlb	1	; () banked
  2674  0013CC  6F56               	movwf	(??_GPIO_Init_Pin+2)& (0+255),b
  2675  0013CE  C152  F157         	movff	GPIO_Init_Pin@pin_number,??_GPIO_Init_Pin+3
  2676  0013D2  0E01               	movlw	1
  2677  0013D4  6F58               	movwf	(??_GPIO_Init_Pin+4)& (0+255),b
  2678  0013D6  2B57               	incf	(??_GPIO_Init_Pin+3)& (0+255),f,b
  2679  0013D8  EFF0  F009         	goto	u1914
  2680  0013DC                     u1915:
  2681  0013DC  90D8               	bcf	status,0,c
  2682  0013DE  3758               	rlcf	(??_GPIO_Init_Pin+4)& (0+255),f,b
  2683  0013E0                     u1914:
  2684  0013E0  2F57               	decfsz	(??_GPIO_Init_Pin+3)& (0+255),f,b
  2685  0013E2  EFEE  F009         	goto	u1915
  2686  0013E6  0101               	movlb	1	; () banked
  2687  0013E8  5158               	movf	(??_GPIO_Init_Pin+4)& (0+255),w,b
  2688  0013EA  0AFF               	xorlw	255
  2689  0013EC  1556               	andwf	(??_GPIO_Init_Pin+2)& (0+255),w,b
  2690  0013EE  1155               	iorwf	(??_GPIO_Init_Pin+1)& (0+255),w,b
  2691  0013F0  C150  FFD9         	movff	GPIO_Init_Pin@DirRegAddress,fsr2l
  2692  0013F4  C151  FFDA         	movff	GPIO_Init_Pin@DirRegAddress+1,fsr2h
  2693  0013F8  6EDF               	movwf	indf2,c
  2694  0013FA                     l24:
  2695  0013FA  0012               	return		;funcret
  2696  0013FC                     __end_of_GPIO_Init_Pin:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function _GPIO_Init_Nibble *****************
  2700 ;; Defined at:
  2701 ;;		line 49 in file "GPIO.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  DirRegAddres    2    0[BANK1 ] PTR volatile unsigned ch
  2704 ;;		 -> TRISD(1), 
  2705 ;;  nibble_num      1    2[BANK1 ] unsigned char 
  2706 ;;  dir             1    3[BANK1 ] unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  ret             1    0        unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         0       0       4       0       0       0       0       0       0
  2719 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       3       0       0       0       0       0       0
  2721 ;;      Totals:         0       0      10       0       0       0       0       0       0
  2722 ;;Total ram usage:       10 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    5
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_LCD_Init
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text16
  2733  001116                     __ptext16:
  2734                           	opt callstack 0
  2735  001116                     _GPIO_Init_Nibble:
  2736                           	opt callstack 24
  2737  001116                     
  2738                           ;GPIO.c: 53:     if(*DirRegAddress != (TRISA) && *DirRegAddress != (TRISB) &&
  2739  001116  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2740  00111A  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2741  00111E  5092               	movf	146,w,c	;volatile
  2742  001120  18DE               	xorwf	postinc2,w,c
  2743  001122  B4D8               	btfsc	status,2,c
  2744  001124  EF96  F008         	goto	u1921
  2745  001128  EF98  F008         	goto	u1920
  2746  00112C                     u1921:
  2747  00112C  EFCE  F008         	goto	l2428
  2748  001130                     u1920:
  2749  001130  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2750  001134  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2751  001138  5093               	movf	147,w,c	;volatile
  2752  00113A  18DE               	xorwf	postinc2,w,c
  2753  00113C  B4D8               	btfsc	status,2,c
  2754  00113E  EFA3  F008         	goto	u1931
  2755  001142  EFA5  F008         	goto	u1930
  2756  001146                     u1931:
  2757  001146  EFCE  F008         	goto	l2428
  2758  00114A                     u1930:
  2759  00114A  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2760  00114E  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2761  001152  5094               	movf	148,w,c	;volatile
  2762  001154  18DE               	xorwf	postinc2,w,c
  2763  001156  B4D8               	btfsc	status,2,c
  2764  001158  EFB0  F008         	goto	u1941
  2765  00115C  EFB2  F008         	goto	u1940
  2766  001160                     u1941:
  2767  001160  EFCE  F008         	goto	l2428
  2768  001164                     u1940:
  2769  001164  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2770  001168  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2771  00116C  5095               	movf	149,w,c	;volatile
  2772  00116E  18DE               	xorwf	postinc2,w,c
  2773  001170  B4D8               	btfsc	status,2,c
  2774  001172  EFBD  F008         	goto	u1951
  2775  001176  EFBF  F008         	goto	u1950
  2776  00117A                     u1951:
  2777  00117A  EFCE  F008         	goto	l2428
  2778  00117E                     u1950:
  2779  00117E  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2780  001182  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2781  001186  5096               	movf	150,w,c	;volatile
  2782  001188  18DE               	xorwf	postinc2,w,c
  2783  00118A  B4D8               	btfsc	status,2,c
  2784  00118C  EFCA  F008         	goto	u1961
  2785  001190  EFCC  F008         	goto	u1960
  2786  001194                     u1961:
  2787  001194  EFCE  F008         	goto	l2428
  2788  001198                     u1960:
  2789  001198                     
  2790                           ;GPIO.c: 59:     }
  2791  001198  EF19  F009         	goto	l33
  2792  00119C                     l2428:
  2793                           
  2794                           ;GPIO.c: 61:     {;GPIO.c: 62:         ((*DirRegAddress)= ((*DirRegAddress)& ~(0xF<<(nib
      +                          ble_num*4)))); ((*DirRegAddress)=((*DirRegAddress)|(((dir)?(~0):(0))&(0xF<<(nibble_num*4
      +                          )))));
  2795  00119C  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2796  0011A0  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2797  0011A4  50DF               	movf	indf2,w,c
  2798  0011A6  0101               	movlb	1	; () banked
  2799  0011A8  6F54               	movwf	??_GPIO_Init_Nibble& (0+255),b
  2800  0011AA  5152               	movf	GPIO_Init_Nibble@nibble_num& (0+255),w,b
  2801  0011AC  0D04               	mullw	4
  2802  0011AE  CFF3 F155          	movff	prodl,??_GPIO_Init_Nibble+1
  2803  0011B2  0E0F               	movlw	15
  2804  0011B4  6F56               	movwf	(??_GPIO_Init_Nibble+2)& (0+255),b
  2805  0011B6  2B55               	incf	(??_GPIO_Init_Nibble+1)& (0+255),f,b
  2806  0011B8  EFE0  F008         	goto	u1974
  2807  0011BC                     u1975:
  2808  0011BC  90D8               	bcf	status,0,c
  2809  0011BE  3756               	rlcf	(??_GPIO_Init_Nibble+2)& (0+255),f,b
  2810  0011C0                     u1974:
  2811  0011C0  2F55               	decfsz	(??_GPIO_Init_Nibble+1)& (0+255),f,b
  2812  0011C2  EFDE  F008         	goto	u1975
  2813  0011C6  0101               	movlb	1	; () banked
  2814  0011C8  5156               	movf	(??_GPIO_Init_Nibble+2)& (0+255),w,b
  2815  0011CA  0AFF               	xorlw	255
  2816  0011CC  1554               	andwf	??_GPIO_Init_Nibble& (0+255),w,b
  2817  0011CE  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2818  0011D2  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2819  0011D6  6EDF               	movwf	indf2,c
  2820  0011D8                     
  2821                           ; BSR set to: 1
  2822  0011D8  5153               	movf	GPIO_Init_Nibble@dir& (0+255),w,b
  2823  0011DA  A4D8               	btfss	status,2,c
  2824  0011DC  EFF2  F008         	goto	u1981
  2825  0011E0  EFF4  F008         	goto	u1980
  2826  0011E4                     u1981:
  2827  0011E4  EFFA  F008         	goto	l30
  2828  0011E8                     u1980:
  2829  0011E8                     
  2830                           ; BSR set to: 1
  2831  0011E8  0E00               	movlw	0
  2832  0011EA  6F59               	movwf	(_GPIO_Init_Nibble$44+1)& (0+255),b
  2833  0011EC  0E00               	movlw	0
  2834  0011EE  6F58               	movwf	_GPIO_Init_Nibble$44& (0+255),b
  2835  0011F0  EFFC  F008         	goto	l2434
  2836  0011F4                     l30:
  2837                           
  2838                           ; BSR set to: 1
  2839  0011F4  6958               	setf	_GPIO_Init_Nibble$44& (0+255),b
  2840  0011F6  6959               	setf	(_GPIO_Init_Nibble$44+1)& (0+255),b
  2841  0011F8                     l2434:
  2842                           
  2843                           ; BSR set to: 1
  2844  0011F8  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2845  0011FC  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2846  001200  50DF               	movf	indf2,w,c
  2847  001202  6F54               	movwf	??_GPIO_Init_Nibble& (0+255),b
  2848  001204  5152               	movf	GPIO_Init_Nibble@nibble_num& (0+255),w,b
  2849  001206  0D04               	mullw	4
  2850  001208  CFF3 F155          	movff	prodl,??_GPIO_Init_Nibble+1
  2851  00120C  0E0F               	movlw	15
  2852  00120E  6F56               	movwf	(??_GPIO_Init_Nibble+2)& (0+255),b
  2853  001210  2B55               	incf	(??_GPIO_Init_Nibble+1)& (0+255),f,b
  2854  001212  EF0D  F009         	goto	u1994
  2855  001216                     u1995:
  2856  001216  90D8               	bcf	status,0,c
  2857  001218  3756               	rlcf	(??_GPIO_Init_Nibble+2)& (0+255),f,b
  2858  00121A                     u1994:
  2859  00121A  2F55               	decfsz	(??_GPIO_Init_Nibble+1)& (0+255),f,b
  2860  00121C  EF0B  F009         	goto	u1995
  2861  001220  0101               	movlb	1	; () banked
  2862  001222  5156               	movf	(??_GPIO_Init_Nibble+2)& (0+255),w,b
  2863  001224  1558               	andwf	_GPIO_Init_Nibble$44& (0+255),w,b
  2864  001226  1154               	iorwf	??_GPIO_Init_Nibble& (0+255),w,b
  2865  001228  C150  FFD9         	movff	GPIO_Init_Nibble@DirRegAddress,fsr2l
  2866  00122C  C151  FFDA         	movff	GPIO_Init_Nibble@DirRegAddress+1,fsr2h
  2867  001230  6EDF               	movwf	indf2,c
  2868  001232                     l33:
  2869  001232  0012               	return		;funcret
  2870  001234                     __end_of_GPIO_Init_Nibble:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function _TMR0_ISR *****************
  2874 ;; Defined at:
  2875 ;;		line 40 in file "OSTimer.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        6 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    4
  2896 ;; This function calls:
  2897 ;;		_LCD_SetSymbol
  2898 ;;		_LCD_Update
  2899 ;;		_SW_GetState
  2900 ;;		_SW_Update
  2901 ;;		_keypad_Update
  2902 ;; This function is called by:
  2903 ;;		Interrupt level 2
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	intcode
  2908  000008                     __pintcode:
  2909                           	opt callstack 0
  2910  000008                     _TMR0_ISR:
  2911                           	opt callstack 21
  2912                           
  2913                           ;incstack = 0
  2914  000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2915  00000A  EDC0  F00A         	call	int_func,f	;refresh shadow registers
  2916                           
  2917                           	psect	intcode_body
  2918  001580                     __pintcode_body:
  2919                           	opt callstack 21
  2920  001580                     int_func:
  2921                           	opt callstack 21
  2922  001580  0006               	pop		; remove dummy address from shadow register refresh
  2923  001582  CFE1 F042          	movff	fsr1l,??_TMR0_ISR
  2924  001586  CFE2 F043          	movff	fsr1h,??_TMR0_ISR+1
  2925  00158A  CFD9 F044          	movff	fsr2l,??_TMR0_ISR+2
  2926  00158E  CFDA F045          	movff	fsr2h,??_TMR0_ISR+3
  2927  001592  CFF3 F046          	movff	prodl,??_TMR0_ISR+4
  2928  001596  CFF4 F047          	movff	prodh,??_TMR0_ISR+5
  2929  00159A                     
  2930                           ;OSTimer.c: 42:     static uint8 index = 0;;OSTimer.c: 44:     static uint16 counter = 0
      +                          ;;OSTimer.c: 47:     tempCounter+=(5);
  2931  00159A  0E05               	movlw	5
  2932  00159C  0100               	movlb	0	; () banked
  2933  00159E  27F3               	addwf	_tempCounter& (0+255),f,b
  2934  0015A0  0E00               	movlw	0
  2935  0015A2  23F4               	addwfc	(_tempCounter+1)& (0+255),f,b
  2936  0015A4                     
  2937                           ; BSR set to: 0
  2938                           ;OSTimer.c: 49:     keypad_Update();
  2939  0015A4  EC09  F000         	call	_keypad_Update	;wreg free
  2940  0015A8                     
  2941                           ;OSTimer.c: 50:     SW_Update();
  2942  0015A8  ECFB  F007         	call	_SW_Update	;wreg free
  2943  0015AC                     
  2944                           ;OSTimer.c: 51:     LCD_Update();
  2945  0015AC  EC12  F006         	call	_LCD_Update	;wreg free
  2946  0015B0                     
  2947                           ;OSTimer.c: 55:     if(tempCounter >= 20){
  2948  0015B0  0100               	movlb	0	; () banked
  2949  0015B2  51F4               	movf	(_tempCounter+1)& (0+255),w,b
  2950  0015B4  E109               	bnz	i2u182_40
  2951  0015B6  0E14               	movlw	20
  2952  0015B8  5DF3               	subwf	_tempCounter& (0+255),w,b
  2953  0015BA  A0D8               	btfss	status,0,c
  2954  0015BC  EFE2  F00A         	goto	i2u182_41
  2955  0015C0  EFE4  F00A         	goto	i2u182_40
  2956  0015C4                     i2u182_41:
  2957  0015C4  EF0C  F00B         	goto	i2l2310
  2958  0015C8                     i2u182_40:
  2959  0015C8                     
  2960                           ; BSR set to: 0
  2961                           ;OSTimer.c: 56:         tempCounter = 0;
  2962  0015C8  0E00               	movlw	0
  2963  0015CA  6FF4               	movwf	(_tempCounter+1)& (0+255),b
  2964  0015CC  0E00               	movlw	0
  2965  0015CE  6FF3               	movwf	_tempCounter& (0+255),b
  2966  0015D0                     
  2967                           ; BSR set to: 0
  2968                           ;OSTimer.c: 58:         if(SW_GetState(SW_WEIGHT_SENSOR) == SW_PRE_PRESSED)
  2969  0015D0  0E01               	movlw	1
  2970  0015D2  ECDA  F00C         	call	_SW_GetState
  2971  0015D6  06E8               	decf	wreg,f,c
  2972  0015D8  A4D8               	btfss	status,2,c
  2973  0015DA  EFF1  F00A         	goto	i2u183_41
  2974  0015DE  EFF3  F00A         	goto	i2u183_40
  2975  0015E2                     i2u183_41:
  2976  0015E2  EFFA  F00A         	goto	i2l228
  2977  0015E6                     i2u183_40:
  2978  0015E6                     
  2979                           ;OSTimer.c: 59:             LCD_SetSymbol(LCD_DOOR,0,0);
  2980  0015E6  0E00               	movlw	0
  2981  0015E8  6E39               	movwf	LCD_SetSymbol@row^0,c
  2982  0015EA  0E00               	movlw	0
  2983  0015EC  6E3A               	movwf	LCD_SetSymbol@column^0,c
  2984  0015EE  0E06               	movlw	6
  2985  0015F0  EC79  F00B         	call	_LCD_SetSymbol
  2986  0015F4                     i2l228:
  2987                           
  2988                           ;OSTimer.c: 60:         if(SW_GetState(SW_WEIGHT_SENSOR) == SW_PRE_RELEASED)
  2989  0015F4  0E01               	movlw	1
  2990  0015F6  ECDA  F00C         	call	_SW_GetState
  2991  0015FA  0A03               	xorlw	3
  2992  0015FC  A4D8               	btfss	status,2,c
  2993  0015FE  EF03  F00B         	goto	i2u184_41
  2994  001602  EF05  F00B         	goto	i2u184_40
  2995  001606                     i2u184_41:
  2996  001606  EF0C  F00B         	goto	i2l2310
  2997  00160A                     i2u184_40:
  2998  00160A                     
  2999                           ;OSTimer.c: 61:             LCD_SetSymbol(' ',0,0);
  3000  00160A  0E00               	movlw	0
  3001  00160C  6E39               	movwf	LCD_SetSymbol@row^0,c
  3002  00160E  0E00               	movlw	0
  3003  001610  6E3A               	movwf	LCD_SetSymbol@column^0,c
  3004  001612  0E20               	movlw	32
  3005  001614  EC79  F00B         	call	_LCD_SetSymbol
  3006  001618                     i2l2310:
  3007                           
  3008                           ;OSTimer.c: 66:     ((TMR0IF) = 0);
  3009  001618  94F2               	bcf	4082,2,c	;volatile
  3010  00161A                     
  3011                           ;OSTimer.c: 68:     ((TMR0) = 65,536 - ((5000)));
  3012  00161A  0E00               	movlw	0
  3013  00161C  6ED7               	movwf	215,c	;volatile
  3014  00161E  0E41               	movlw	65
  3015  001620  6ED6               	movwf	214,c	;volatile
  3016  001622  C047  FFF4         	movff	??_TMR0_ISR+5,prodh
  3017  001626  C046  FFF3         	movff	??_TMR0_ISR+4,prodl
  3018  00162A  C045  FFDA         	movff	??_TMR0_ISR+3,fsr2h
  3019  00162E  C044  FFD9         	movff	??_TMR0_ISR+2,fsr2l
  3020  001632  C043  FFE2         	movff	??_TMR0_ISR+1,fsr1h
  3021  001636  C042  FFE1         	movff	??_TMR0_ISR,fsr1l
  3022  00163A  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3023  00163C  0011               	retfie		f
  3024  00163E                     __end_of_TMR0_ISR:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _keypad_Update *****************
  3028 ;; Defined at:
  3029 ;;		line 152 in file "Keypad.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  i               2   15[COMRAM] int 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0
  3044 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3045 ;;      Temps:          9       0       0       0       0       0       0       0       0
  3046 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:       11 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    1
  3050 ;; This function calls:
  3051 ;;		___wmul
  3052 ;; This function is called by:
  3053 ;;		_TMR0_ISR
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text18
  3058  000012                     __ptext18:
  3059                           	opt callstack 0
  3060  000012                     _keypad_Update:
  3061                           	opt callstack 23
  3062  000012                     
  3063                           ;Keypad.c: 154:     int i;;Keypad.c: 155:     tick_counter += (5);
  3064  000012  0E05               	movlw	5
  3065  000014  262C               	addwf	Keypad@tick_counter^0,f,c
  3066                           
  3067                           ;Keypad.c: 156:     if(tick_counter != (10)){
  3068  000016  0E0A               	movlw	10
  3069  000018  182C               	xorwf	Keypad@tick_counter^0,w,c
  3070  00001A  B4D8               	btfsc	status,2,c
  3071  00001C  EF12  F000         	goto	i2u151_41
  3072  000020  EF14  F000         	goto	i2u151_40
  3073  000024                     i2u151_41:
  3074  000024  EF65  F000         	goto	i2l2152
  3075  000028                     i2u151_40:
  3076  000028                     
  3077                           ;Keypad.c: 158:         ((*keypad.KP_O_Pins[current_column].portRegPtr)=(*keypad.KP_O_Pi
      +                          ns[current_column].portRegPtr & ~(1<<keypad.KP_O_Pins[current_column].pin))|((0)<<keypad
      +                          .KP_O_Pins[current_column].pin));
  3078  000028  502D               	movf	_current_column^0,w,c
  3079  00002A  0D05               	mullw	5
  3080  00002C  0E01               	movlw	low _keypad
  3081  00002E  24F3               	addwf	243,w,c
  3082  000030  6ED9               	movwf	fsr2l,c
  3083  000032  0E00               	movlw	high _keypad
  3084  000034  20F4               	addwfc	prodh,w,c
  3085  000036  6EDA               	movwf	fsr2h,c
  3086  000038  CFDE F037          	movff	postinc2,??_keypad_Update
  3087  00003C  CFDD F038          	movff	postdec2,??_keypad_Update+1
  3088  000040  C037  FFD9         	movff	??_keypad_Update,fsr2l
  3089  000044  C038  FFDA         	movff	??_keypad_Update+1,fsr2h
  3090  000048  502D               	movf	_current_column^0,w,c
  3091  00004A  0D05               	mullw	5
  3092  00004C  0E05               	movlw	low (_keypad+4)
  3093  00004E  24F3               	addwf	243,w,c
  3094  000050  6EE1               	movwf	fsr1l,c
  3095  000052  0E00               	movlw	high (_keypad+4)
  3096  000054  20F4               	addwfc	prodh,w,c
  3097  000056  6EE2               	movwf	fsr1h,c
  3098  000058  50E7               	movf	indf1,w,c
  3099  00005A  6E39               	movwf	(??_keypad_Update+2)^0,c
  3100  00005C  0E00               	movlw	0
  3101  00005E  6E3A               	movwf	(??_keypad_Update+3)^0,c
  3102  000060  2A39               	incf	(??_keypad_Update+2)^0,f,c
  3103  000062  EF35  F000         	goto	i2u152_44
  3104  000066                     i2u152_45:
  3105  000066  90D8               	bcf	status,0,c
  3106  000068  363A               	rlcf	(??_keypad_Update+3)^0,f,c
  3107  00006A                     i2u152_44:
  3108  00006A  2E39               	decfsz	(??_keypad_Update+2)^0,f,c
  3109  00006C  EF33  F000         	goto	i2u152_45
  3110  000070  502D               	movf	_current_column^0,w,c
  3111  000072  0D05               	mullw	5
  3112  000074  0E01               	movlw	low _keypad
  3113  000076  24F3               	addwf	243,w,c
  3114  000078  6EE1               	movwf	fsr1l,c
  3115  00007A  0E00               	movlw	high _keypad
  3116  00007C  20F4               	addwfc	prodh,w,c
  3117  00007E  6EE2               	movwf	fsr1h,c
  3118  000080  CFE6 F03B          	movff	postinc1,??_keypad_Update+4
  3119  000084  CFE5 F03C          	movff	postdec1,??_keypad_Update+5
  3120  000088  C03B  FFE1         	movff	??_keypad_Update+4,fsr1l
  3121  00008C  C03C  FFE2         	movff	??_keypad_Update+5,fsr1h
  3122  000090  50E7               	movf	indf1,w,c
  3123  000092  6E3D               	movwf	(??_keypad_Update+6)^0,c
  3124  000094  502D               	movf	_current_column^0,w,c
  3125  000096  0D05               	mullw	5
  3126  000098  0E05               	movlw	low (_keypad+4)
  3127  00009A  24F3               	addwf	243,w,c
  3128  00009C  6EE1               	movwf	fsr1l,c
  3129  00009E  0E00               	movlw	high (_keypad+4)
  3130  0000A0  20F4               	addwfc	prodh,w,c
  3131  0000A2  6EE2               	movwf	fsr1h,c
  3132  0000A4  50E7               	movf	indf1,w,c
  3133  0000A6  6E3E               	movwf	(??_keypad_Update+7)^0,c
  3134  0000A8  0E01               	movlw	1
  3135  0000AA  6E3F               	movwf	(??_keypad_Update+8)^0,c
  3136  0000AC  2A3E               	incf	(??_keypad_Update+7)^0,f,c
  3137  0000AE  EF5B  F000         	goto	i2u153_44
  3138  0000B2                     i2u153_45:
  3139  0000B2  90D8               	bcf	status,0,c
  3140  0000B4  363F               	rlcf	(??_keypad_Update+8)^0,f,c
  3141  0000B6                     i2u153_44:
  3142  0000B6  2E3E               	decfsz	(??_keypad_Update+7)^0,f,c
  3143  0000B8  EF59  F000         	goto	i2u153_45
  3144  0000BC  503F               	movf	(??_keypad_Update+8)^0,w,c
  3145  0000BE  0AFF               	xorlw	255
  3146  0000C0  143D               	andwf	(??_keypad_Update+6)^0,w,c
  3147  0000C2  103A               	iorwf	(??_keypad_Update+3)^0,w,c
  3148  0000C4  6EDF               	movwf	indf2,c
  3149  0000C6  EF5E  F003         	goto	i2l312
  3150  0000CA                     i2l2152:
  3151                           
  3152                           ;Keypad.c: 161:     tick_counter = 0;
  3153  0000CA  0E00               	movlw	0
  3154  0000CC  6E2C               	movwf	Keypad@tick_counter^0,c
  3155                           
  3156                           ;Keypad.c: 166:     for(i =0; i<(4);i++)
  3157  0000CE  0E00               	movlw	0
  3158  0000D0  6E41               	movwf	(keypad_Update@i+1)^0,c
  3159  0000D2  0E00               	movlw	0
  3160  0000D4  6E40               	movwf	keypad_Update@i^0,c
  3161  0000D6                     i2l2158:
  3162                           
  3163                           ;Keypad.c: 167:     {;Keypad.c: 170:         KP_Btn_Data[current_column + 3*i].samples[0
      +                          ] = KP_Btn_Data[current_column+ 3*i].samples[1];
  3164  0000D6  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3165  0000DA  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3166  0000DE  0E00               	movlw	0
  3167  0000E0  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3168  0000E2  0E09               	movlw	9
  3169  0000E4  6E33               	movwf	___wmul@multiplicand^0,c
  3170  0000E6  EC88  F00C         	call	___wmul	;wreg free
  3171  0000EA  502D               	movf	_current_column^0,w,c
  3172  0000EC  0D03               	mullw	3
  3173  0000EE  0EB4               	movlw	low _KP_Btn_Data
  3174  0000F0  6E37               	movwf	??_keypad_Update^0,c
  3175  0000F2  0E00               	movlw	high _KP_Btn_Data
  3176  0000F4  6E38               	movwf	(??_keypad_Update+1)^0,c
  3177  0000F6  0E01               	movlw	1
  3178  0000F8  2637               	addwf	??_keypad_Update^0,f,c
  3179  0000FA  0E00               	movlw	0
  3180  0000FC  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3181  0000FE  50F3               	movf	243,w,c
  3182  000100  2637               	addwf	??_keypad_Update^0,f,c
  3183  000102  50F4               	movf	244,w,c
  3184  000104  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3185  000106  5031               	movf	?___wmul^0,w,c
  3186  000108  2437               	addwf	??_keypad_Update^0,w,c
  3187  00010A  6ED9               	movwf	fsr2l,c
  3188  00010C  5032               	movf	(?___wmul+1)^0,w,c
  3189  00010E  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3190  000110  6EDA               	movwf	fsr2h,c
  3191  000112  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3192  000116  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3193  00011A  0E00               	movlw	0
  3194  00011C  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3195  00011E  0E09               	movlw	9
  3196  000120  6E33               	movwf	___wmul@multiplicand^0,c
  3197  000122  EC88  F00C         	call	___wmul	;wreg free
  3198  000126  502D               	movf	_current_column^0,w,c
  3199  000128  0D03               	mullw	3
  3200  00012A  0EB4               	movlw	low _KP_Btn_Data
  3201  00012C  6E39               	movwf	(??_keypad_Update+2)^0,c
  3202  00012E  0E00               	movlw	high _KP_Btn_Data
  3203  000130  6E3A               	movwf	(??_keypad_Update+3)^0,c
  3204  000132  50F3               	movf	243,w,c
  3205  000134  2639               	addwf	(??_keypad_Update+2)^0,f,c
  3206  000136  50F4               	movf	244,w,c
  3207  000138  223A               	addwfc	(??_keypad_Update+3)^0,f,c
  3208  00013A  5031               	movf	?___wmul^0,w,c
  3209  00013C  2439               	addwf	(??_keypad_Update+2)^0,w,c
  3210  00013E  6EE1               	movwf	fsr1l,c
  3211  000140  5032               	movf	(?___wmul+1)^0,w,c
  3212  000142  203A               	addwfc	(??_keypad_Update+3)^0,w,c
  3213  000144  6EE2               	movwf	fsr1h,c
  3214  000146  CFDF FFE7          	movff	indf2,indf1
  3215                           
  3216                           ;Keypad.c: 172:         KP_Btn_Data[current_column+ 3*i].samples[1] = ((*keypad.KP_I_Pin
      +                          s[i].portRegPtr >> keypad.KP_I_Pins[i].pin)& 1);
  3217  00014A  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3218  00014E  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3219  000152  0E00               	movlw	0
  3220  000154  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3221  000156  0E09               	movlw	9
  3222  000158  6E33               	movwf	___wmul@multiplicand^0,c
  3223  00015A  EC88  F00C         	call	___wmul	;wreg free
  3224  00015E  502D               	movf	_current_column^0,w,c
  3225  000160  0D03               	mullw	3
  3226  000162  0EB4               	movlw	low _KP_Btn_Data
  3227  000164  6E37               	movwf	??_keypad_Update^0,c
  3228  000166  0E00               	movlw	high _KP_Btn_Data
  3229  000168  6E38               	movwf	(??_keypad_Update+1)^0,c
  3230  00016A  0E01               	movlw	1
  3231  00016C  2637               	addwf	??_keypad_Update^0,f,c
  3232  00016E  0E00               	movlw	0
  3233  000170  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3234  000172  50F3               	movf	243,w,c
  3235  000174  2637               	addwf	??_keypad_Update^0,f,c
  3236  000176  50F4               	movf	244,w,c
  3237  000178  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3238  00017A  5031               	movf	?___wmul^0,w,c
  3239  00017C  2437               	addwf	??_keypad_Update^0,w,c
  3240  00017E  6ED9               	movwf	fsr2l,c
  3241  000180  5032               	movf	(?___wmul+1)^0,w,c
  3242  000182  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3243  000184  6EDA               	movwf	fsr2h,c
  3244  000186  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3245  00018A  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3246  00018E  0E00               	movlw	0
  3247  000190  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3248  000192  0E05               	movlw	5
  3249  000194  6E33               	movwf	___wmul@multiplicand^0,c
  3250  000196  EC88  F00C         	call	___wmul	;wreg free
  3251  00019A  0E14               	movlw	low (_keypad+19)
  3252  00019C  2431               	addwf	?___wmul^0,w,c
  3253  00019E  6EE1               	movwf	fsr1l,c
  3254  0001A0  0E00               	movlw	high (_keypad+19)
  3255  0001A2  2032               	addwfc	(?___wmul+1)^0,w,c
  3256  0001A4  6EE2               	movwf	fsr1h,c
  3257  0001A6  50E7               	movf	indf1,w,c
  3258  0001A8  6E39               	movwf	(??_keypad_Update+2)^0,c
  3259  0001AA  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3260  0001AE  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3261  0001B2  0E00               	movlw	0
  3262  0001B4  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3263  0001B6  0E05               	movlw	5
  3264  0001B8  6E33               	movwf	___wmul@multiplicand^0,c
  3265  0001BA  EC88  F00C         	call	___wmul	;wreg free
  3266  0001BE  0E10               	movlw	low (_keypad+15)
  3267  0001C0  2431               	addwf	?___wmul^0,w,c
  3268  0001C2  6EE1               	movwf	fsr1l,c
  3269  0001C4  0E00               	movlw	high (_keypad+15)
  3270  0001C6  2032               	addwfc	(?___wmul+1)^0,w,c
  3271  0001C8  6EE2               	movwf	fsr1h,c
  3272  0001CA  CFE6 F03A          	movff	postinc1,??_keypad_Update+3
  3273  0001CE  CFE5 F03B          	movff	postdec1,??_keypad_Update+4
  3274  0001D2  C03A  FFE1         	movff	??_keypad_Update+3,fsr1l
  3275  0001D6  C03B  FFE2         	movff	??_keypad_Update+4,fsr1h
  3276  0001DA  50E7               	movf	indf1,w,c
  3277  0001DC  6E3C               	movwf	(??_keypad_Update+5)^0,c
  3278  0001DE  2A39               	incf	(??_keypad_Update+2)^0,f,c
  3279  0001E0  EFF4  F000         	goto	i2u154_44
  3280  0001E4                     i2u154_45:
  3281  0001E4  90D8               	bcf	status,0,c
  3282  0001E6  323C               	rrcf	(??_keypad_Update+5)^0,f,c
  3283  0001E8                     i2u154_44:
  3284  0001E8  2E39               	decfsz	(??_keypad_Update+2)^0,f,c
  3285  0001EA  EFF2  F000         	goto	i2u154_45
  3286  0001EE  503C               	movf	(??_keypad_Update+5)^0,w,c
  3287  0001F0  0B01               	andlw	1
  3288  0001F2  6EDF               	movwf	indf2,c
  3289  0001F4                     
  3290                           ;Keypad.c: 173:     }
  3291  0001F4  4A40               	infsnz	keypad_Update@i^0,f,c
  3292  0001F6  2A41               	incf	(keypad_Update@i+1)^0,f,c
  3293  0001F8  BE41               	btfsc	(keypad_Update@i+1)^0,7,c
  3294  0001FA  EF08  F001         	goto	i2u155_41
  3295  0001FE  5041               	movf	(keypad_Update@i+1)^0,w,c
  3296  000200  E109               	bnz	i2u155_40
  3297  000202  0E04               	movlw	4
  3298  000204  5C40               	subwf	keypad_Update@i^0,w,c
  3299  000206  A0D8               	btfss	status,0,c
  3300  000208  EF08  F001         	goto	i2u155_41
  3301  00020C  EF0A  F001         	goto	i2u155_40
  3302  000210                     i2u155_41:
  3303  000210  EF6B  F000         	goto	i2l2158
  3304  000214                     i2u155_40:
  3305  000214                     
  3306                           ;Keypad.c: 179:     for(i =0; i<(4);i++)
  3307  000214  0E00               	movlw	0
  3308  000216  6E41               	movwf	(keypad_Update@i+1)^0,c
  3309  000218  0E00               	movlw	0
  3310  00021A  6E40               	movwf	keypad_Update@i^0,c
  3311  00021C  EFB8  F002         	goto	i2l2196
  3312  000220                     i2l2170:
  3313                           
  3314                           ;Keypad.c: 185:                 if(KP_Btn_Data[current_column + 3*i].samples[0] == (1) &
      +                          & KP_Btn_Data[current_column + 3*i].samples[1] == (1))
  3315  000220  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3316  000224  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3317  000228  0E00               	movlw	0
  3318  00022A  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3319  00022C  0E09               	movlw	9
  3320  00022E  6E33               	movwf	___wmul@multiplicand^0,c
  3321  000230  EC88  F00C         	call	___wmul	;wreg free
  3322  000234  502D               	movf	_current_column^0,w,c
  3323  000236  0D03               	mullw	3
  3324  000238  0EB4               	movlw	low _KP_Btn_Data
  3325  00023A  6E37               	movwf	??_keypad_Update^0,c
  3326  00023C  0E00               	movlw	high _KP_Btn_Data
  3327  00023E  6E38               	movwf	(??_keypad_Update+1)^0,c
  3328  000240  50F3               	movf	243,w,c
  3329  000242  2637               	addwf	??_keypad_Update^0,f,c
  3330  000244  50F4               	movf	244,w,c
  3331  000246  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3332  000248  5031               	movf	?___wmul^0,w,c
  3333  00024A  2437               	addwf	??_keypad_Update^0,w,c
  3334  00024C  6ED9               	movwf	fsr2l,c
  3335  00024E  5032               	movf	(?___wmul+1)^0,w,c
  3336  000250  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3337  000252  6EDA               	movwf	fsr2h,c
  3338  000254  04DE               	decf	postinc2,w,c
  3339  000256  A4D8               	btfss	status,2,c
  3340  000258  EF30  F001         	goto	i2u156_41
  3341  00025C  EF32  F001         	goto	i2u156_40
  3342  000260                     i2u156_41:
  3343  000260  EFF3  F002         	goto	i2l2198
  3344  000264                     i2u156_40:
  3345  000264  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3346  000268  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3347  00026C  0E00               	movlw	0
  3348  00026E  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3349  000270  0E09               	movlw	9
  3350  000272  6E33               	movwf	___wmul@multiplicand^0,c
  3351  000274  EC88  F00C         	call	___wmul	;wreg free
  3352  000278  502D               	movf	_current_column^0,w,c
  3353  00027A  0D03               	mullw	3
  3354  00027C  0EB4               	movlw	low _KP_Btn_Data
  3355  00027E  6E37               	movwf	??_keypad_Update^0,c
  3356  000280  0E00               	movlw	high _KP_Btn_Data
  3357  000282  6E38               	movwf	(??_keypad_Update+1)^0,c
  3358  000284  0E01               	movlw	1
  3359  000286  2637               	addwf	??_keypad_Update^0,f,c
  3360  000288  0E00               	movlw	0
  3361  00028A  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3362  00028C  50F3               	movf	243,w,c
  3363  00028E  2637               	addwf	??_keypad_Update^0,f,c
  3364  000290  50F4               	movf	244,w,c
  3365  000292  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3366  000294  5031               	movf	?___wmul^0,w,c
  3367  000296  2437               	addwf	??_keypad_Update^0,w,c
  3368  000298  6ED9               	movwf	fsr2l,c
  3369  00029A  5032               	movf	(?___wmul+1)^0,w,c
  3370  00029C  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3371  00029E  6EDA               	movwf	fsr2h,c
  3372  0002A0  04DE               	decf	postinc2,w,c
  3373  0002A2  A4D8               	btfss	status,2,c
  3374  0002A4  EF56  F001         	goto	i2u157_41
  3375  0002A8  EF58  F001         	goto	i2u157_40
  3376  0002AC                     i2u157_41:
  3377  0002AC  EFF3  F002         	goto	i2l2198
  3378  0002B0                     i2u157_40:
  3379  0002B0                     
  3380                           ;Keypad.c: 186:                     KP_Btn_Data[current_column + 3*i].state = SW_RELEASE
      +                          D;
  3381  0002B0  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3382  0002B4  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3383  0002B8  0E00               	movlw	0
  3384  0002BA  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3385  0002BC  0E09               	movlw	9
  3386  0002BE  6E33               	movwf	___wmul@multiplicand^0,c
  3387  0002C0  EC88  F00C         	call	___wmul	;wreg free
  3388  0002C4  502D               	movf	_current_column^0,w,c
  3389  0002C6  0D03               	mullw	3
  3390  0002C8  0EB4               	movlw	low _KP_Btn_Data
  3391  0002CA  6E37               	movwf	??_keypad_Update^0,c
  3392  0002CC  0E00               	movlw	high _KP_Btn_Data
  3393  0002CE  6E38               	movwf	(??_keypad_Update+1)^0,c
  3394  0002D0  0E02               	movlw	2
  3395  0002D2  2637               	addwf	??_keypad_Update^0,f,c
  3396  0002D4  0E00               	movlw	0
  3397  0002D6  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3398  0002D8  50F3               	movf	243,w,c
  3399  0002DA  2637               	addwf	??_keypad_Update^0,f,c
  3400  0002DC  50F4               	movf	244,w,c
  3401  0002DE  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3402  0002E0  5031               	movf	?___wmul^0,w,c
  3403  0002E2  2437               	addwf	??_keypad_Update^0,w,c
  3404  0002E4  6ED9               	movwf	fsr2l,c
  3405  0002E6  5032               	movf	(?___wmul+1)^0,w,c
  3406  0002E8  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3407  0002EA  6EDA               	movwf	fsr2h,c
  3408  0002EC  0E00               	movlw	0
  3409  0002EE  6EDF               	movwf	indf2,c
  3410  0002F0  EFF3  F002         	goto	i2l2198
  3411  0002F4                     i2l2176:
  3412                           
  3413                           ;Keypad.c: 189:                 if(KP_Btn_Data[current_column + 3*i].samples[0] == (0) &
      +                          & KP_Btn_Data[current_column + 3*i].samples[1] == (0))
  3414  0002F4  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3415  0002F8  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3416  0002FC  0E00               	movlw	0
  3417  0002FE  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3418  000300  0E09               	movlw	9
  3419  000302  6E33               	movwf	___wmul@multiplicand^0,c
  3420  000304  EC88  F00C         	call	___wmul	;wreg free
  3421  000308  502D               	movf	_current_column^0,w,c
  3422  00030A  0D03               	mullw	3
  3423  00030C  0EB4               	movlw	low _KP_Btn_Data
  3424  00030E  6E37               	movwf	??_keypad_Update^0,c
  3425  000310  0E00               	movlw	high _KP_Btn_Data
  3426  000312  6E38               	movwf	(??_keypad_Update+1)^0,c
  3427  000314  50F3               	movf	243,w,c
  3428  000316  2637               	addwf	??_keypad_Update^0,f,c
  3429  000318  50F4               	movf	244,w,c
  3430  00031A  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3431  00031C  5031               	movf	?___wmul^0,w,c
  3432  00031E  2437               	addwf	??_keypad_Update^0,w,c
  3433  000320  6ED9               	movwf	fsr2l,c
  3434  000322  5032               	movf	(?___wmul+1)^0,w,c
  3435  000324  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3436  000326  6EDA               	movwf	fsr2h,c
  3437  000328  50DF               	movf	indf2,w,c
  3438  00032A  A4D8               	btfss	status,2,c
  3439  00032C  EF9A  F001         	goto	i2u158_41
  3440  000330  EF9C  F001         	goto	i2u158_40
  3441  000334                     i2u158_41:
  3442  000334  EFF3  F002         	goto	i2l2198
  3443  000338                     i2u158_40:
  3444  000338  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3445  00033C  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3446  000340  0E00               	movlw	0
  3447  000342  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3448  000344  0E09               	movlw	9
  3449  000346  6E33               	movwf	___wmul@multiplicand^0,c
  3450  000348  EC88  F00C         	call	___wmul	;wreg free
  3451  00034C  502D               	movf	_current_column^0,w,c
  3452  00034E  0D03               	mullw	3
  3453  000350  0EB4               	movlw	low _KP_Btn_Data
  3454  000352  6E37               	movwf	??_keypad_Update^0,c
  3455  000354  0E00               	movlw	high _KP_Btn_Data
  3456  000356  6E38               	movwf	(??_keypad_Update+1)^0,c
  3457  000358  0E01               	movlw	1
  3458  00035A  2637               	addwf	??_keypad_Update^0,f,c
  3459  00035C  0E00               	movlw	0
  3460  00035E  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3461  000360  50F3               	movf	243,w,c
  3462  000362  2637               	addwf	??_keypad_Update^0,f,c
  3463  000364  50F4               	movf	244,w,c
  3464  000366  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3465  000368  5031               	movf	?___wmul^0,w,c
  3466  00036A  2437               	addwf	??_keypad_Update^0,w,c
  3467  00036C  6ED9               	movwf	fsr2l,c
  3468  00036E  5032               	movf	(?___wmul+1)^0,w,c
  3469  000370  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3470  000372  6EDA               	movwf	fsr2h,c
  3471  000374  50DF               	movf	indf2,w,c
  3472  000376  A4D8               	btfss	status,2,c
  3473  000378  EFC0  F001         	goto	i2u159_41
  3474  00037C  EFC2  F001         	goto	i2u159_40
  3475  000380                     i2u159_41:
  3476  000380  EFF3  F002         	goto	i2l2198
  3477  000384                     i2u159_40:
  3478  000384                     
  3479                           ;Keypad.c: 190:                     KP_Btn_Data[current_column + 3*i].state = SW_PRE_PRE
      +                          SSED;
  3480  000384  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3481  000388  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3482  00038C  0E00               	movlw	0
  3483  00038E  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3484  000390  0E09               	movlw	9
  3485  000392  6E33               	movwf	___wmul@multiplicand^0,c
  3486  000394  EC88  F00C         	call	___wmul	;wreg free
  3487  000398  502D               	movf	_current_column^0,w,c
  3488  00039A  0D03               	mullw	3
  3489  00039C  0EB4               	movlw	low _KP_Btn_Data
  3490  00039E  6E37               	movwf	??_keypad_Update^0,c
  3491  0003A0  0E00               	movlw	high _KP_Btn_Data
  3492  0003A2  6E38               	movwf	(??_keypad_Update+1)^0,c
  3493  0003A4  0E02               	movlw	2
  3494  0003A6  2637               	addwf	??_keypad_Update^0,f,c
  3495  0003A8  0E00               	movlw	0
  3496  0003AA  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3497  0003AC  50F3               	movf	243,w,c
  3498  0003AE  2637               	addwf	??_keypad_Update^0,f,c
  3499  0003B0  50F4               	movf	244,w,c
  3500  0003B2  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3501  0003B4  5031               	movf	?___wmul^0,w,c
  3502  0003B6  2437               	addwf	??_keypad_Update^0,w,c
  3503  0003B8  6ED9               	movwf	fsr2l,c
  3504  0003BA  5032               	movf	(?___wmul+1)^0,w,c
  3505  0003BC  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3506  0003BE  6EDA               	movwf	fsr2h,c
  3507  0003C0  0E01               	movlw	1
  3508  0003C2  6EDF               	movwf	indf2,c
  3509  0003C4  EFF3  F002         	goto	i2l2198
  3510  0003C8                     i2l2182:
  3511                           
  3512                           ;Keypad.c: 193:                 if(KP_Btn_Data[current_column + 3*i].samples[0] == (0) &
      +                          & KP_Btn_Data[current_column + 3*i].samples[1] == (0))
  3513  0003C8  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3514  0003CC  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3515  0003D0  0E00               	movlw	0
  3516  0003D2  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3517  0003D4  0E09               	movlw	9
  3518  0003D6  6E33               	movwf	___wmul@multiplicand^0,c
  3519  0003D8  EC88  F00C         	call	___wmul	;wreg free
  3520  0003DC  502D               	movf	_current_column^0,w,c
  3521  0003DE  0D03               	mullw	3
  3522  0003E0  0EB4               	movlw	low _KP_Btn_Data
  3523  0003E2  6E37               	movwf	??_keypad_Update^0,c
  3524  0003E4  0E00               	movlw	high _KP_Btn_Data
  3525  0003E6  6E38               	movwf	(??_keypad_Update+1)^0,c
  3526  0003E8  50F3               	movf	243,w,c
  3527  0003EA  2637               	addwf	??_keypad_Update^0,f,c
  3528  0003EC  50F4               	movf	244,w,c
  3529  0003EE  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3530  0003F0  5031               	movf	?___wmul^0,w,c
  3531  0003F2  2437               	addwf	??_keypad_Update^0,w,c
  3532  0003F4  6ED9               	movwf	fsr2l,c
  3533  0003F6  5032               	movf	(?___wmul+1)^0,w,c
  3534  0003F8  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3535  0003FA  6EDA               	movwf	fsr2h,c
  3536  0003FC  50DF               	movf	indf2,w,c
  3537  0003FE  A4D8               	btfss	status,2,c
  3538  000400  EF04  F002         	goto	i2u160_41
  3539  000404  EF06  F002         	goto	i2u160_40
  3540  000408                     i2u160_41:
  3541  000408  EFF3  F002         	goto	i2l2198
  3542  00040C                     i2u160_40:
  3543  00040C  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3544  000410  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3545  000414  0E00               	movlw	0
  3546  000416  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3547  000418  0E09               	movlw	9
  3548  00041A  6E33               	movwf	___wmul@multiplicand^0,c
  3549  00041C  EC88  F00C         	call	___wmul	;wreg free
  3550  000420  502D               	movf	_current_column^0,w,c
  3551  000422  0D03               	mullw	3
  3552  000424  0EB4               	movlw	low _KP_Btn_Data
  3553  000426  6E37               	movwf	??_keypad_Update^0,c
  3554  000428  0E00               	movlw	high _KP_Btn_Data
  3555  00042A  6E38               	movwf	(??_keypad_Update+1)^0,c
  3556  00042C  0E01               	movlw	1
  3557  00042E  2637               	addwf	??_keypad_Update^0,f,c
  3558  000430  0E00               	movlw	0
  3559  000432  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3560  000434  50F3               	movf	243,w,c
  3561  000436  2637               	addwf	??_keypad_Update^0,f,c
  3562  000438  50F4               	movf	244,w,c
  3563  00043A  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3564  00043C  5031               	movf	?___wmul^0,w,c
  3565  00043E  2437               	addwf	??_keypad_Update^0,w,c
  3566  000440  6ED9               	movwf	fsr2l,c
  3567  000442  5032               	movf	(?___wmul+1)^0,w,c
  3568  000444  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3569  000446  6EDA               	movwf	fsr2h,c
  3570  000448  50DF               	movf	indf2,w,c
  3571  00044A  A4D8               	btfss	status,2,c
  3572  00044C  EF2A  F002         	goto	i2u161_41
  3573  000450  EF2C  F002         	goto	i2u161_40
  3574  000454                     i2u161_41:
  3575  000454  EFF3  F002         	goto	i2l2198
  3576  000458                     i2u161_40:
  3577  000458                     
  3578                           ;Keypad.c: 194:                     KP_Btn_Data[current_column + 3*i].state = SW_PRESSED
      +                          ;
  3579  000458  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3580  00045C  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3581  000460  0E00               	movlw	0
  3582  000462  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3583  000464  0E09               	movlw	9
  3584  000466  6E33               	movwf	___wmul@multiplicand^0,c
  3585  000468  EC88  F00C         	call	___wmul	;wreg free
  3586  00046C  502D               	movf	_current_column^0,w,c
  3587  00046E  0D03               	mullw	3
  3588  000470  0EB4               	movlw	low _KP_Btn_Data
  3589  000472  6E37               	movwf	??_keypad_Update^0,c
  3590  000474  0E00               	movlw	high _KP_Btn_Data
  3591  000476  6E38               	movwf	(??_keypad_Update+1)^0,c
  3592  000478  0E02               	movlw	2
  3593  00047A  2637               	addwf	??_keypad_Update^0,f,c
  3594  00047C  0E00               	movlw	0
  3595  00047E  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3596  000480  50F3               	movf	243,w,c
  3597  000482  2637               	addwf	??_keypad_Update^0,f,c
  3598  000484  50F4               	movf	244,w,c
  3599  000486  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3600  000488  5031               	movf	?___wmul^0,w,c
  3601  00048A  2437               	addwf	??_keypad_Update^0,w,c
  3602  00048C  6ED9               	movwf	fsr2l,c
  3603  00048E  5032               	movf	(?___wmul+1)^0,w,c
  3604  000490  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3605  000492  6EDA               	movwf	fsr2h,c
  3606  000494  0E02               	movlw	2
  3607  000496  6EDF               	movwf	indf2,c
  3608  000498  EFF3  F002         	goto	i2l2198
  3609  00049C                     i2l2188:
  3610                           
  3611                           ;Keypad.c: 197:                 if(KP_Btn_Data[current_column + 3*i].samples[0] == (1) &
      +                          & KP_Btn_Data[current_column + 3*i].samples[1] == (1))
  3612  00049C  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3613  0004A0  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3614  0004A4  0E00               	movlw	0
  3615  0004A6  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3616  0004A8  0E09               	movlw	9
  3617  0004AA  6E33               	movwf	___wmul@multiplicand^0,c
  3618  0004AC  EC88  F00C         	call	___wmul	;wreg free
  3619  0004B0  502D               	movf	_current_column^0,w,c
  3620  0004B2  0D03               	mullw	3
  3621  0004B4  0EB4               	movlw	low _KP_Btn_Data
  3622  0004B6  6E37               	movwf	??_keypad_Update^0,c
  3623  0004B8  0E00               	movlw	high _KP_Btn_Data
  3624  0004BA  6E38               	movwf	(??_keypad_Update+1)^0,c
  3625  0004BC  50F3               	movf	243,w,c
  3626  0004BE  2637               	addwf	??_keypad_Update^0,f,c
  3627  0004C0  50F4               	movf	244,w,c
  3628  0004C2  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3629  0004C4  5031               	movf	?___wmul^0,w,c
  3630  0004C6  2437               	addwf	??_keypad_Update^0,w,c
  3631  0004C8  6ED9               	movwf	fsr2l,c
  3632  0004CA  5032               	movf	(?___wmul+1)^0,w,c
  3633  0004CC  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3634  0004CE  6EDA               	movwf	fsr2h,c
  3635  0004D0  04DE               	decf	postinc2,w,c
  3636  0004D2  A4D8               	btfss	status,2,c
  3637  0004D4  EF6E  F002         	goto	i2u162_41
  3638  0004D8  EF70  F002         	goto	i2u162_40
  3639  0004DC                     i2u162_41:
  3640  0004DC  EFF3  F002         	goto	i2l2198
  3641  0004E0                     i2u162_40:
  3642  0004E0  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3643  0004E4  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3644  0004E8  0E00               	movlw	0
  3645  0004EA  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3646  0004EC  0E09               	movlw	9
  3647  0004EE  6E33               	movwf	___wmul@multiplicand^0,c
  3648  0004F0  EC88  F00C         	call	___wmul	;wreg free
  3649  0004F4  502D               	movf	_current_column^0,w,c
  3650  0004F6  0D03               	mullw	3
  3651  0004F8  0EB4               	movlw	low _KP_Btn_Data
  3652  0004FA  6E37               	movwf	??_keypad_Update^0,c
  3653  0004FC  0E00               	movlw	high _KP_Btn_Data
  3654  0004FE  6E38               	movwf	(??_keypad_Update+1)^0,c
  3655  000500  0E01               	movlw	1
  3656  000502  2637               	addwf	??_keypad_Update^0,f,c
  3657  000504  0E00               	movlw	0
  3658  000506  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3659  000508  50F3               	movf	243,w,c
  3660  00050A  2637               	addwf	??_keypad_Update^0,f,c
  3661  00050C  50F4               	movf	244,w,c
  3662  00050E  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3663  000510  5031               	movf	?___wmul^0,w,c
  3664  000512  2437               	addwf	??_keypad_Update^0,w,c
  3665  000514  6ED9               	movwf	fsr2l,c
  3666  000516  5032               	movf	(?___wmul+1)^0,w,c
  3667  000518  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3668  00051A  6EDA               	movwf	fsr2h,c
  3669  00051C  04DE               	decf	postinc2,w,c
  3670  00051E  A4D8               	btfss	status,2,c
  3671  000520  EF94  F002         	goto	i2u163_41
  3672  000524  EF96  F002         	goto	i2u163_40
  3673  000528                     i2u163_41:
  3674  000528  EFF3  F002         	goto	i2l2198
  3675  00052C                     i2u163_40:
  3676  00052C                     
  3677                           ;Keypad.c: 198:                     KP_Btn_Data[current_column + 3*i].state = SW_PRE_REL
      +                          EASED;
  3678  00052C  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3679  000530  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3680  000534  0E00               	movlw	0
  3681  000536  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3682  000538  0E09               	movlw	9
  3683  00053A  6E33               	movwf	___wmul@multiplicand^0,c
  3684  00053C  EC88  F00C         	call	___wmul	;wreg free
  3685  000540  502D               	movf	_current_column^0,w,c
  3686  000542  0D03               	mullw	3
  3687  000544  0EB4               	movlw	low _KP_Btn_Data
  3688  000546  6E37               	movwf	??_keypad_Update^0,c
  3689  000548  0E00               	movlw	high _KP_Btn_Data
  3690  00054A  6E38               	movwf	(??_keypad_Update+1)^0,c
  3691  00054C  0E02               	movlw	2
  3692  00054E  2637               	addwf	??_keypad_Update^0,f,c
  3693  000550  0E00               	movlw	0
  3694  000552  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3695  000554  50F3               	movf	243,w,c
  3696  000556  2637               	addwf	??_keypad_Update^0,f,c
  3697  000558  50F4               	movf	244,w,c
  3698  00055A  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3699  00055C  5031               	movf	?___wmul^0,w,c
  3700  00055E  2437               	addwf	??_keypad_Update^0,w,c
  3701  000560  6ED9               	movwf	fsr2l,c
  3702  000562  5032               	movf	(?___wmul+1)^0,w,c
  3703  000564  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3704  000566  6EDA               	movwf	fsr2h,c
  3705  000568  0E03               	movlw	3
  3706  00056A  6EDF               	movwf	indf2,c
  3707  00056C  EFF3  F002         	goto	i2l2198
  3708  000570                     i2l2196:
  3709  000570  C040  F031         	movff	keypad_Update@i,___wmul@multiplier
  3710  000574  C041  F032         	movff	keypad_Update@i+1,___wmul@multiplier+1
  3711  000578  0E00               	movlw	0
  3712  00057A  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3713  00057C  0E09               	movlw	9
  3714  00057E  6E33               	movwf	___wmul@multiplicand^0,c
  3715  000580  EC88  F00C         	call	___wmul	;wreg free
  3716  000584  502D               	movf	_current_column^0,w,c
  3717  000586  0D03               	mullw	3
  3718  000588  0EB4               	movlw	low _KP_Btn_Data
  3719  00058A  6E37               	movwf	??_keypad_Update^0,c
  3720  00058C  0E00               	movlw	high _KP_Btn_Data
  3721  00058E  6E38               	movwf	(??_keypad_Update+1)^0,c
  3722  000590  0E02               	movlw	2
  3723  000592  2637               	addwf	??_keypad_Update^0,f,c
  3724  000594  0E00               	movlw	0
  3725  000596  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3726  000598  50F3               	movf	243,w,c
  3727  00059A  2637               	addwf	??_keypad_Update^0,f,c
  3728  00059C  50F4               	movf	244,w,c
  3729  00059E  2238               	addwfc	(??_keypad_Update+1)^0,f,c
  3730  0005A0  5031               	movf	?___wmul^0,w,c
  3731  0005A2  2437               	addwf	??_keypad_Update^0,w,c
  3732  0005A4  6ED9               	movwf	fsr2l,c
  3733  0005A6  5032               	movf	(?___wmul+1)^0,w,c
  3734  0005A8  2038               	addwfc	(??_keypad_Update+1)^0,w,c
  3735  0005AA  6EDA               	movwf	fsr2h,c
  3736  0005AC  50DF               	movf	indf2,w,c
  3737  0005AE  6E39               	movwf	(??_keypad_Update+2)^0,c
  3738  0005B0  6A3A               	clrf	(??_keypad_Update+3)^0,c
  3739                           
  3740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3741                           ; Switch size 1, requested type "simple"
  3742                           ; Number of cases is 1, Range of values is 0 to 0
  3743                           ; switch strategies available:
  3744                           ; Name         Instructions Cycles
  3745                           ; simple_byte            4     3 (average)
  3746                           ;	Chosen strategy is simple_byte
  3747  0005B2  503A               	movf	(??_keypad_Update+3)^0,w,c
  3748  0005B4  0A00               	xorlw	0	; case 0
  3749  0005B6  B4D8               	btfsc	status,2,c
  3750  0005B8  EFE0  F002         	goto	i2l2730
  3751  0005BC  EFF3  F002         	goto	i2l2198
  3752  0005C0                     i2l2730:
  3753                           
  3754                           ; Switch size 1, requested type "simple"
  3755                           ; Number of cases is 4, Range of values is 0 to 3
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte           13     7 (average)
  3759                           ;	Chosen strategy is simple_byte
  3760  0005C0  5039               	movf	(??_keypad_Update+2)^0,w,c
  3761  0005C2  0A00               	xorlw	0	; case 0
  3762  0005C4  B4D8               	btfsc	status,2,c
  3763  0005C6  EF7A  F001         	goto	i2l2176
  3764  0005CA  0A01               	xorlw	1	; case 1
  3765  0005CC  B4D8               	btfsc	status,2,c
  3766  0005CE  EFE4  F001         	goto	i2l2182
  3767  0005D2  0A03               	xorlw	3	; case 2
  3768  0005D4  B4D8               	btfsc	status,2,c
  3769  0005D6  EF4E  F002         	goto	i2l2188
  3770  0005DA  0A01               	xorlw	1	; case 3
  3771  0005DC  B4D8               	btfsc	status,2,c
  3772  0005DE  EF10  F001         	goto	i2l2170
  3773  0005E2  EFF3  F002         	goto	i2l2198
  3774  0005E6                     i2l2198:
  3775                           
  3776                           ;Keypad.c: 203:     }
  3777  0005E6  4A40               	infsnz	keypad_Update@i^0,f,c
  3778  0005E8  2A41               	incf	(keypad_Update@i+1)^0,f,c
  3779  0005EA  BE41               	btfsc	(keypad_Update@i+1)^0,7,c
  3780  0005EC  EF01  F003         	goto	i2u164_41
  3781  0005F0  5041               	movf	(keypad_Update@i+1)^0,w,c
  3782  0005F2  E109               	bnz	i2u164_40
  3783  0005F4  0E04               	movlw	4
  3784  0005F6  5C40               	subwf	keypad_Update@i^0,w,c
  3785  0005F8  A0D8               	btfss	status,0,c
  3786  0005FA  EF01  F003         	goto	i2u164_41
  3787  0005FE  EF03  F003         	goto	i2u164_40
  3788  000602                     i2u164_41:
  3789  000602  EFB8  F002         	goto	i2l2196
  3790  000606                     i2u164_40:
  3791  000606                     
  3792                           ;Keypad.c: 207:     ((*keypad.KP_O_Pins[current_column].portRegPtr)=(*keypad.KP_O_Pins[c
      +                          urrent_column].portRegPtr & ~(1<<keypad.KP_O_Pins[current_column].pin))|((1)<<keypad.KP_
      +                          O_Pins[current_column].pin));
  3793  000606  502D               	movf	_current_column^0,w,c
  3794  000608  0D05               	mullw	5
  3795  00060A  0E01               	movlw	low _keypad
  3796  00060C  24F3               	addwf	243,w,c
  3797  00060E  6ED9               	movwf	fsr2l,c
  3798  000610  0E00               	movlw	high _keypad
  3799  000612  20F4               	addwfc	prodh,w,c
  3800  000614  6EDA               	movwf	fsr2h,c
  3801  000616  CFDE F037          	movff	postinc2,??_keypad_Update
  3802  00061A  CFDD F038          	movff	postdec2,??_keypad_Update+1
  3803  00061E  C037  FFD9         	movff	??_keypad_Update,fsr2l
  3804  000622  C038  FFDA         	movff	??_keypad_Update+1,fsr2h
  3805  000626  502D               	movf	_current_column^0,w,c
  3806  000628  0D05               	mullw	5
  3807  00062A  0E05               	movlw	low (_keypad+4)
  3808  00062C  24F3               	addwf	243,w,c
  3809  00062E  6EE1               	movwf	fsr1l,c
  3810  000630  0E00               	movlw	high (_keypad+4)
  3811  000632  20F4               	addwfc	prodh,w,c
  3812  000634  6EE2               	movwf	fsr1h,c
  3813  000636  50E7               	movf	indf1,w,c
  3814  000638  6E39               	movwf	(??_keypad_Update+2)^0,c
  3815  00063A  0E01               	movlw	1
  3816  00063C  6E3A               	movwf	(??_keypad_Update+3)^0,c
  3817  00063E  2A39               	incf	(??_keypad_Update+2)^0,f,c
  3818  000640  EF24  F003         	goto	i2u165_44
  3819  000644                     i2u165_45:
  3820  000644  90D8               	bcf	status,0,c
  3821  000646  363A               	rlcf	(??_keypad_Update+3)^0,f,c
  3822  000648                     i2u165_44:
  3823  000648  2E39               	decfsz	(??_keypad_Update+2)^0,f,c
  3824  00064A  EF22  F003         	goto	i2u165_45
  3825  00064E  502D               	movf	_current_column^0,w,c
  3826  000650  0D05               	mullw	5
  3827  000652  0E01               	movlw	low _keypad
  3828  000654  24F3               	addwf	243,w,c
  3829  000656  6EE1               	movwf	fsr1l,c
  3830  000658  0E00               	movlw	high _keypad
  3831  00065A  20F4               	addwfc	prodh,w,c
  3832  00065C  6EE2               	movwf	fsr1h,c
  3833  00065E  CFE6 F03B          	movff	postinc1,??_keypad_Update+4
  3834  000662  CFE5 F03C          	movff	postdec1,??_keypad_Update+5
  3835  000666  C03B  FFE1         	movff	??_keypad_Update+4,fsr1l
  3836  00066A  C03C  FFE2         	movff	??_keypad_Update+5,fsr1h
  3837  00066E  50E7               	movf	indf1,w,c
  3838  000670  6E3D               	movwf	(??_keypad_Update+6)^0,c
  3839  000672  502D               	movf	_current_column^0,w,c
  3840  000674  0D05               	mullw	5
  3841  000676  0E05               	movlw	low (_keypad+4)
  3842  000678  24F3               	addwf	243,w,c
  3843  00067A  6EE1               	movwf	fsr1l,c
  3844  00067C  0E00               	movlw	high (_keypad+4)
  3845  00067E  20F4               	addwfc	prodh,w,c
  3846  000680  6EE2               	movwf	fsr1h,c
  3847  000682  50E7               	movf	indf1,w,c
  3848  000684  6E3E               	movwf	(??_keypad_Update+7)^0,c
  3849  000686  0E01               	movlw	1
  3850  000688  6E3F               	movwf	(??_keypad_Update+8)^0,c
  3851  00068A  2A3E               	incf	(??_keypad_Update+7)^0,f,c
  3852  00068C  EF4A  F003         	goto	i2u166_44
  3853  000690                     i2u166_45:
  3854  000690  90D8               	bcf	status,0,c
  3855  000692  363F               	rlcf	(??_keypad_Update+8)^0,f,c
  3856  000694                     i2u166_44:
  3857  000694  2E3E               	decfsz	(??_keypad_Update+7)^0,f,c
  3858  000696  EF48  F003         	goto	i2u166_45
  3859  00069A  503F               	movf	(??_keypad_Update+8)^0,w,c
  3860  00069C  0AFF               	xorlw	255
  3861  00069E  143D               	andwf	(??_keypad_Update+6)^0,w,c
  3862  0006A0  103A               	iorwf	(??_keypad_Update+3)^0,w,c
  3863  0006A2  6EDF               	movwf	indf2,c
  3864  0006A4                     
  3865                           ;Keypad.c: 210:     current_column++;
  3866  0006A4  2A2D               	incf	_current_column^0,f,c
  3867  0006A6                     
  3868                           ;Keypad.c: 211:     if(current_column == (3))current_column = 0;
  3869  0006A6  0E03               	movlw	3
  3870  0006A8  182D               	xorwf	_current_column^0,w,c
  3871  0006AA  A4D8               	btfss	status,2,c
  3872  0006AC  EF5A  F003         	goto	i2u167_41
  3873  0006B0  EF5C  F003         	goto	i2u167_40
  3874  0006B4                     i2u167_41:
  3875  0006B4  EF5E  F003         	goto	i2l312
  3876  0006B8                     i2u167_40:
  3877  0006B8  0E00               	movlw	0
  3878  0006BA  6E2D               	movwf	_current_column^0,c
  3879  0006BC                     i2l312:
  3880  0006BC  0012               	return		;funcret
  3881  0006BE                     __end_of_keypad_Update:
  3882                           	opt callstack 0
  3883                           
  3884 ;; *************** function _SW_Update *****************
  3885 ;; Defined at:
  3886 ;;		line 94 in file "SW.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  i               2   10[COMRAM] int 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3902 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3904 ;;Total ram usage:        6 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    1
  3907 ;; This function calls:
  3908 ;;		_SW_UpdateState
  3909 ;;		___wmul
  3910 ;; This function is called by:
  3911 ;;		_TMR0_ISR
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text19
  3916  000FF6                     __ptext19:
  3917                           	opt callstack 0
  3918  000FF6                     _SW_Update:
  3919                           	opt callstack 23
  3920  000FF6                     
  3921                           ;SW.c: 100:     static uint8 SW_Time_Counter = 0;;SW.c: 101:     SW_Time_Counter += (5);
  3922  000FF6  0E05               	movlw	5
  3923  000FF8  2630               	addwf	SW_Update@SW_Time_Counter^0,f,c
  3924  000FFA                     
  3925                           ;SW.c: 103:     if(SW_Time_Counter != (20))
  3926  000FFA  0E14               	movlw	20
  3927  000FFC  1830               	xorwf	SW_Update@SW_Time_Counter^0,w,c
  3928  000FFE  B4D8               	btfsc	status,2,c
  3929  001000  EF04  F008         	goto	i2u135_41
  3930  001004  EF06  F008         	goto	i2u135_40
  3931  001008                     i2u135_41:
  3932  001008  EF08  F008         	goto	i2l2024
  3933  00100C                     i2u135_40:
  3934  00100C  EF8A  F008         	goto	i2l55
  3935  001010                     i2l2024:
  3936                           
  3937                           ;SW.c: 107:     SW_Time_Counter = 0;
  3938  001010  0E00               	movlw	0
  3939  001012  6E30               	movwf	SW_Update@SW_Time_Counter^0,c
  3940                           
  3941                           ;SW.c: 109:     for(i =0;i<(2);i++)
  3942  001014  0E00               	movlw	0
  3943  001016  6E3C               	movwf	(SW_Update@i+1)^0,c
  3944  001018  0E00               	movlw	0
  3945  00101A  6E3B               	movwf	SW_Update@i^0,c
  3946  00101C                     i2l2030:
  3947                           
  3948                           ;SW.c: 110:     {;SW.c: 112:         SW_DATA[i].samples[0] = SW_DATA[i].samples[1];
  3949  00101C  C03B  F031         	movff	SW_Update@i,___wmul@multiplier
  3950  001020  C03C  F032         	movff	SW_Update@i+1,___wmul@multiplier+1
  3951  001024  0E00               	movlw	0
  3952  001026  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3953  001028  0E03               	movlw	3
  3954  00102A  6E33               	movwf	___wmul@multiplicand^0,c
  3955  00102C  EC88  F00C         	call	___wmul	;wreg free
  3956  001030  0E25               	movlw	low (_SW_DATA+1)
  3957  001032  2431               	addwf	?___wmul^0,w,c
  3958  001034  6ED9               	movwf	fsr2l,c
  3959  001036  0E00               	movlw	high (_SW_DATA+1)
  3960  001038  2032               	addwfc	(?___wmul+1)^0,w,c
  3961  00103A  6EDA               	movwf	fsr2h,c
  3962  00103C  C03B  F031         	movff	SW_Update@i,___wmul@multiplier
  3963  001040  C03C  F032         	movff	SW_Update@i+1,___wmul@multiplier+1
  3964  001044  0E00               	movlw	0
  3965  001046  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3966  001048  0E03               	movlw	3
  3967  00104A  6E33               	movwf	___wmul@multiplicand^0,c
  3968  00104C  EC88  F00C         	call	___wmul	;wreg free
  3969  001050  0E24               	movlw	low _SW_DATA
  3970  001052  2431               	addwf	?___wmul^0,w,c
  3971  001054  6EE1               	movwf	fsr1l,c
  3972  001056  0E00               	movlw	high _SW_DATA
  3973  001058  2032               	addwfc	(?___wmul+1)^0,w,c
  3974  00105A  6EE2               	movwf	fsr1h,c
  3975  00105C  CFDF FFE7          	movff	indf2,indf1
  3976                           
  3977                           ;SW.c: 113:         SW_DATA[i].samples[1] = ((*SW[i].portRegPtr >> SW[i].pin)& 1);
  3978  001060  C03B  F031         	movff	SW_Update@i,___wmul@multiplier
  3979  001064  C03C  F032         	movff	SW_Update@i+1,___wmul@multiplier+1
  3980  001068  0E00               	movlw	0
  3981  00106A  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3982  00106C  0E03               	movlw	3
  3983  00106E  6E33               	movwf	___wmul@multiplicand^0,c
  3984  001070  EC88  F00C         	call	___wmul	;wreg free
  3985  001074  0E25               	movlw	low (_SW_DATA+1)
  3986  001076  2431               	addwf	?___wmul^0,w,c
  3987  001078  6ED9               	movwf	fsr2l,c
  3988  00107A  0E00               	movlw	high (_SW_DATA+1)
  3989  00107C  2032               	addwfc	(?___wmul+1)^0,w,c
  3990  00107E  6EDA               	movwf	fsr2h,c
  3991  001080  C03B  F031         	movff	SW_Update@i,___wmul@multiplier
  3992  001084  C03C  F032         	movff	SW_Update@i+1,___wmul@multiplier+1
  3993  001088  0E00               	movlw	0
  3994  00108A  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  3995  00108C  0E05               	movlw	5
  3996  00108E  6E33               	movwf	___wmul@multiplicand^0,c
  3997  001090  EC88  F00C         	call	___wmul	;wreg free
  3998  001094  0EEB               	movlw	low (_SW+4)
  3999  001096  2431               	addwf	?___wmul^0,w,c
  4000  001098  6EE1               	movwf	fsr1l,c
  4001  00109A  0E00               	movlw	high (_SW+4)
  4002  00109C  2032               	addwfc	(?___wmul+1)^0,w,c
  4003  00109E  6EE2               	movwf	fsr1h,c
  4004  0010A0  50E7               	movf	indf1,w,c
  4005  0010A2  6E37               	movwf	??_SW_Update^0,c
  4006  0010A4  C03B  F031         	movff	SW_Update@i,___wmul@multiplier
  4007  0010A8  C03C  F032         	movff	SW_Update@i+1,___wmul@multiplier+1
  4008  0010AC  0E00               	movlw	0
  4009  0010AE  6E34               	movwf	(___wmul@multiplicand+1)^0,c
  4010  0010B0  0E05               	movlw	5
  4011  0010B2  6E33               	movwf	___wmul@multiplicand^0,c
  4012  0010B4  EC88  F00C         	call	___wmul	;wreg free
  4013  0010B8  0EE7               	movlw	low _SW
  4014  0010BA  2431               	addwf	?___wmul^0,w,c
  4015  0010BC  6EE1               	movwf	fsr1l,c
  4016  0010BE  0E00               	movlw	high _SW
  4017  0010C0  2032               	addwfc	(?___wmul+1)^0,w,c
  4018  0010C2  6EE2               	movwf	fsr1h,c
  4019  0010C4  CFE6 F038          	movff	postinc1,??_SW_Update+1
  4020  0010C8  CFE5 F039          	movff	postdec1,??_SW_Update+2
  4021  0010CC  C038  FFE1         	movff	??_SW_Update+1,fsr1l
  4022  0010D0  C039  FFE2         	movff	??_SW_Update+2,fsr1h
  4023  0010D4  50E7               	movf	indf1,w,c
  4024  0010D6  6E3A               	movwf	(??_SW_Update+3)^0,c
  4025  0010D8  2A37               	incf	??_SW_Update^0,f,c
  4026  0010DA  EF71  F008         	goto	i2u136_44
  4027  0010DE                     i2u136_45:
  4028  0010DE  90D8               	bcf	status,0,c
  4029  0010E0  323A               	rrcf	(??_SW_Update+3)^0,f,c
  4030  0010E2                     i2u136_44:
  4031  0010E2  2E37               	decfsz	??_SW_Update^0,f,c
  4032  0010E4  EF6F  F008         	goto	i2u136_45
  4033  0010E8  503A               	movf	(??_SW_Update+3)^0,w,c
  4034  0010EA  0B01               	andlw	1
  4035  0010EC  6EDF               	movwf	indf2,c
  4036  0010EE                     
  4037                           ;SW.c: 115:         SW_UpdateState(i);
  4038  0010EE  503B               	movf	SW_Update@i^0,w,c
  4039  0010F0  EC22  F007         	call	_SW_UpdateState
  4040  0010F4                     
  4041                           ;SW.c: 116:     }
  4042  0010F4  4A3B               	infsnz	SW_Update@i^0,f,c
  4043  0010F6  2A3C               	incf	(SW_Update@i+1)^0,f,c
  4044  0010F8  BE3C               	btfsc	(SW_Update@i+1)^0,7,c
  4045  0010FA  EF88  F008         	goto	i2u137_41
  4046  0010FE  503C               	movf	(SW_Update@i+1)^0,w,c
  4047  001100  E109               	bnz	i2u137_40
  4048  001102  0E02               	movlw	2
  4049  001104  5C3B               	subwf	SW_Update@i^0,w,c
  4050  001106  A0D8               	btfss	status,0,c
  4051  001108  EF88  F008         	goto	i2u137_41
  4052  00110C  EF8A  F008         	goto	i2u137_40
  4053  001110                     i2u137_41:
  4054  001110  EF0E  F008         	goto	i2l2030
  4055  001114                     i2u137_40:
  4056  001114                     i2l55:
  4057  001114  0012               	return		;funcret
  4058  001116                     __end_of_SW_Update:
  4059                           	opt callstack 0
  4060                           
  4061 ;; *************** function ___wmul *****************
  4062 ;; Defined at:
  4063 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  multiplier      2    0[COMRAM] unsigned int 
  4066 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  product         2    4[COMRAM] unsigned int 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2    0[COMRAM] unsigned int 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, prodl, prodh
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4078 ;;      Params:         4       0       0       0       0       0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4081 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4082 ;;Total ram usage:        6 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_SW_Update
  4088 ;;		_keypad_Update
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text20
  4093  001910                     __ptext20:
  4094                           	opt callstack 0
  4095  001910                     ___wmul:
  4096                           	opt callstack 23
  4097  001910  5031               	movf	___wmul@multiplier^0,w,c
  4098  001912  0233               	mulwf	___wmul@multiplicand^0,c
  4099  001914  CFF3 F035          	movff	prodl,___wmul@product
  4100  001918  CFF4 F036          	movff	prodh,___wmul@product+1
  4101  00191C  5031               	movf	___wmul@multiplier^0,w,c
  4102  00191E  0234               	mulwf	(___wmul@multiplicand+1)^0,c
  4103  001920  50F3               	movf	243,w,c
  4104  001922  2636               	addwf	(___wmul@product+1)^0,f,c
  4105  001924  5032               	movf	(___wmul@multiplier+1)^0,w,c
  4106  001926  0233               	mulwf	___wmul@multiplicand^0,c
  4107  001928  50F3               	movf	243,w,c
  4108  00192A  2636               	addwf	(___wmul@product+1)^0,f,c
  4109  00192C  C035  F031         	movff	___wmul@product,?___wmul
  4110  001930  C036  F032         	movff	___wmul@product+1,?___wmul+1
  4111  001934  0012               	return		;funcret
  4112  001936                     __end_of___wmul:
  4113                           	opt callstack 0
  4114                           
  4115 ;; *************** function _SW_UpdateState *****************
  4116 ;; Defined at:
  4117 ;;		line 120 in file "SW.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  sw              1    wreg     enum E3162
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  sw              1    2[COMRAM] enum E3162
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4131 ;;      Params:         0       0       0       0       0       0       0       0       0
  4132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4133 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4134 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4135 ;;Total ram usage:        3 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_SW_Update
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text21
  4145  000E44                     __ptext21:
  4146                           	opt callstack 0
  4147  000E44                     _SW_UpdateState:
  4148                           	opt callstack 23
  4149                           
  4150                           ;incstack = 0
  4151                           ;SW_UpdateState@sw stored from wreg
  4152  000E44  6E33               	movwf	SW_UpdateState@sw^0,c
  4153  000E46                     
  4154                           ;SW.c: 120: void SW_UpdateState(SW_t sw);SW.c: 121: {;SW.c: 138:     switch(SW_DATA[sw].
      +                          state)
  4155  000E46  EFD5  F007         	goto	i2l1814
  4156  000E4A                     i2l1788:
  4157                           
  4158                           ;SW.c: 142:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1
      +                          ))
  4159  000E4A  5033               	movf	SW_UpdateState@sw^0,w,c
  4160  000E4C  0D03               	mullw	3
  4161  000E4E  0E24               	movlw	low _SW_DATA
  4162  000E50  24F3               	addwf	243,w,c
  4163  000E52  6ED9               	movwf	fsr2l,c
  4164  000E54  0E00               	movlw	high _SW_DATA
  4165  000E56  20F4               	addwfc	prodh,w,c
  4166  000E58  6EDA               	movwf	fsr2h,c
  4167  000E5A  04DE               	decf	postinc2,w,c
  4168  000E5C  A4D8               	btfss	status,2,c
  4169  000E5E  EF33  F007         	goto	i2u111_41
  4170  000E62  EF35  F007         	goto	i2u111_40
  4171  000E66                     i2u111_41:
  4172  000E66  EFFA  F007         	goto	i2l71
  4173  000E6A                     i2u111_40:
  4174  000E6A  5033               	movf	SW_UpdateState@sw^0,w,c
  4175  000E6C  0D03               	mullw	3
  4176  000E6E  0E25               	movlw	low (_SW_DATA+1)
  4177  000E70  24F3               	addwf	243,w,c
  4178  000E72  6ED9               	movwf	fsr2l,c
  4179  000E74  0E00               	movlw	high (_SW_DATA+1)
  4180  000E76  20F4               	addwfc	prodh,w,c
  4181  000E78  6EDA               	movwf	fsr2h,c
  4182  000E7A  04DE               	decf	postinc2,w,c
  4183  000E7C  A4D8               	btfss	status,2,c
  4184  000E7E  EF43  F007         	goto	i2u112_41
  4185  000E82  EF45  F007         	goto	i2u112_40
  4186  000E86                     i2u112_41:
  4187  000E86  EFFA  F007         	goto	i2l71
  4188  000E8A                     i2u112_40:
  4189  000E8A                     
  4190                           ;SW.c: 143:                 SW_DATA[sw].state = SW_RELEASED;
  4191  000E8A  5033               	movf	SW_UpdateState@sw^0,w,c
  4192  000E8C  0D03               	mullw	3
  4193  000E8E  0E26               	movlw	low (_SW_DATA+2)
  4194  000E90  24F3               	addwf	243,w,c
  4195  000E92  6ED9               	movwf	fsr2l,c
  4196  000E94  0E00               	movlw	high (_SW_DATA+2)
  4197  000E96  20F4               	addwfc	prodh,w,c
  4198  000E98  6EDA               	movwf	fsr2h,c
  4199  000E9A  0E00               	movlw	0
  4200  000E9C  6EDF               	movwf	indf2,c
  4201  000E9E  EFFA  F007         	goto	i2l71
  4202  000EA2                     i2l1794:
  4203                           
  4204                           ;SW.c: 146:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0
      +                          ))
  4205  000EA2  5033               	movf	SW_UpdateState@sw^0,w,c
  4206  000EA4  0D03               	mullw	3
  4207  000EA6  0E24               	movlw	low _SW_DATA
  4208  000EA8  24F3               	addwf	243,w,c
  4209  000EAA  6ED9               	movwf	fsr2l,c
  4210  000EAC  0E00               	movlw	high _SW_DATA
  4211  000EAE  20F4               	addwfc	prodh,w,c
  4212  000EB0  6EDA               	movwf	fsr2h,c
  4213  000EB2  50DF               	movf	indf2,w,c
  4214  000EB4  A4D8               	btfss	status,2,c
  4215  000EB6  EF5F  F007         	goto	i2u113_41
  4216  000EBA  EF61  F007         	goto	i2u113_40
  4217  000EBE                     i2u113_41:
  4218  000EBE  EFFA  F007         	goto	i2l71
  4219  000EC2                     i2u113_40:
  4220  000EC2  5033               	movf	SW_UpdateState@sw^0,w,c
  4221  000EC4  0D03               	mullw	3
  4222  000EC6  0E25               	movlw	low (_SW_DATA+1)
  4223  000EC8  24F3               	addwf	243,w,c
  4224  000ECA  6ED9               	movwf	fsr2l,c
  4225  000ECC  0E00               	movlw	high (_SW_DATA+1)
  4226  000ECE  20F4               	addwfc	prodh,w,c
  4227  000ED0  6EDA               	movwf	fsr2h,c
  4228  000ED2  50DF               	movf	indf2,w,c
  4229  000ED4  A4D8               	btfss	status,2,c
  4230  000ED6  EF6F  F007         	goto	i2u114_41
  4231  000EDA  EF71  F007         	goto	i2u114_40
  4232  000EDE                     i2u114_41:
  4233  000EDE  EFFA  F007         	goto	i2l71
  4234  000EE2                     i2u114_40:
  4235  000EE2                     
  4236                           ;SW.c: 147:                 SW_DATA[sw].state = SW_PRE_PRESSED;
  4237  000EE2  5033               	movf	SW_UpdateState@sw^0,w,c
  4238  000EE4  0D03               	mullw	3
  4239  000EE6  0E26               	movlw	low (_SW_DATA+2)
  4240  000EE8  24F3               	addwf	243,w,c
  4241  000EEA  6ED9               	movwf	fsr2l,c
  4242  000EEC  0E00               	movlw	high (_SW_DATA+2)
  4243  000EEE  20F4               	addwfc	prodh,w,c
  4244  000EF0  6EDA               	movwf	fsr2h,c
  4245  000EF2  0E01               	movlw	1
  4246  000EF4  6EDF               	movwf	indf2,c
  4247  000EF6  EFFA  F007         	goto	i2l71
  4248  000EFA                     i2l1800:
  4249                           
  4250                           ;SW.c: 150:             if(SW_DATA[sw].samples[0] == (0) && SW_DATA[sw].samples[1] == (0
      +                          ))
  4251  000EFA  5033               	movf	SW_UpdateState@sw^0,w,c
  4252  000EFC  0D03               	mullw	3
  4253  000EFE  0E24               	movlw	low _SW_DATA
  4254  000F00  24F3               	addwf	243,w,c
  4255  000F02  6ED9               	movwf	fsr2l,c
  4256  000F04  0E00               	movlw	high _SW_DATA
  4257  000F06  20F4               	addwfc	prodh,w,c
  4258  000F08  6EDA               	movwf	fsr2h,c
  4259  000F0A  50DF               	movf	indf2,w,c
  4260  000F0C  A4D8               	btfss	status,2,c
  4261  000F0E  EF8B  F007         	goto	i2u115_41
  4262  000F12  EF8D  F007         	goto	i2u115_40
  4263  000F16                     i2u115_41:
  4264  000F16  EFFA  F007         	goto	i2l71
  4265  000F1A                     i2u115_40:
  4266  000F1A  5033               	movf	SW_UpdateState@sw^0,w,c
  4267  000F1C  0D03               	mullw	3
  4268  000F1E  0E25               	movlw	low (_SW_DATA+1)
  4269  000F20  24F3               	addwf	243,w,c
  4270  000F22  6ED9               	movwf	fsr2l,c
  4271  000F24  0E00               	movlw	high (_SW_DATA+1)
  4272  000F26  20F4               	addwfc	prodh,w,c
  4273  000F28  6EDA               	movwf	fsr2h,c
  4274  000F2A  50DF               	movf	indf2,w,c
  4275  000F2C  A4D8               	btfss	status,2,c
  4276  000F2E  EF9B  F007         	goto	i2u116_41
  4277  000F32  EF9D  F007         	goto	i2u116_40
  4278  000F36                     i2u116_41:
  4279  000F36  EFFA  F007         	goto	i2l71
  4280  000F3A                     i2u116_40:
  4281  000F3A                     
  4282                           ;SW.c: 151:                 SW_DATA[sw].state = SW_PRESSED;
  4283  000F3A  5033               	movf	SW_UpdateState@sw^0,w,c
  4284  000F3C  0D03               	mullw	3
  4285  000F3E  0E26               	movlw	low (_SW_DATA+2)
  4286  000F40  24F3               	addwf	243,w,c
  4287  000F42  6ED9               	movwf	fsr2l,c
  4288  000F44  0E00               	movlw	high (_SW_DATA+2)
  4289  000F46  20F4               	addwfc	prodh,w,c
  4290  000F48  6EDA               	movwf	fsr2h,c
  4291  000F4A  0E02               	movlw	2
  4292  000F4C  6EDF               	movwf	indf2,c
  4293  000F4E  EFFA  F007         	goto	i2l71
  4294  000F52                     i2l1806:
  4295                           
  4296                           ;SW.c: 154:             if(SW_DATA[sw].samples[0] == (1) && SW_DATA[sw].samples[1] == (1
      +                          ))
  4297  000F52  5033               	movf	SW_UpdateState@sw^0,w,c
  4298  000F54  0D03               	mullw	3
  4299  000F56  0E24               	movlw	low _SW_DATA
  4300  000F58  24F3               	addwf	243,w,c
  4301  000F5A  6ED9               	movwf	fsr2l,c
  4302  000F5C  0E00               	movlw	high _SW_DATA
  4303  000F5E  20F4               	addwfc	prodh,w,c
  4304  000F60  6EDA               	movwf	fsr2h,c
  4305  000F62  04DE               	decf	postinc2,w,c
  4306  000F64  A4D8               	btfss	status,2,c
  4307  000F66  EFB7  F007         	goto	i2u117_41
  4308  000F6A  EFB9  F007         	goto	i2u117_40
  4309  000F6E                     i2u117_41:
  4310  000F6E  EFFA  F007         	goto	i2l71
  4311  000F72                     i2u117_40:
  4312  000F72  5033               	movf	SW_UpdateState@sw^0,w,c
  4313  000F74  0D03               	mullw	3
  4314  000F76  0E25               	movlw	low (_SW_DATA+1)
  4315  000F78  24F3               	addwf	243,w,c
  4316  000F7A  6ED9               	movwf	fsr2l,c
  4317  000F7C  0E00               	movlw	high (_SW_DATA+1)
  4318  000F7E  20F4               	addwfc	prodh,w,c
  4319  000F80  6EDA               	movwf	fsr2h,c
  4320  000F82  04DE               	decf	postinc2,w,c
  4321  000F84  A4D8               	btfss	status,2,c
  4322  000F86  EFC7  F007         	goto	i2u118_41
  4323  000F8A  EFC9  F007         	goto	i2u118_40
  4324  000F8E                     i2u118_41:
  4325  000F8E  EFFA  F007         	goto	i2l71
  4326  000F92                     i2u118_40:
  4327  000F92                     
  4328                           ;SW.c: 155:                 SW_DATA[sw].state = SW_PRE_RELEASED;
  4329  000F92  5033               	movf	SW_UpdateState@sw^0,w,c
  4330  000F94  0D03               	mullw	3
  4331  000F96  0E26               	movlw	low (_SW_DATA+2)
  4332  000F98  24F3               	addwf	243,w,c
  4333  000F9A  6ED9               	movwf	fsr2l,c
  4334  000F9C  0E00               	movlw	high (_SW_DATA+2)
  4335  000F9E  20F4               	addwfc	prodh,w,c
  4336  000FA0  6EDA               	movwf	fsr2h,c
  4337  000FA2  0E03               	movlw	3
  4338  000FA4  6EDF               	movwf	indf2,c
  4339  000FA6  EFFA  F007         	goto	i2l71
  4340  000FAA                     i2l1814:
  4341  000FAA  5033               	movf	SW_UpdateState@sw^0,w,c
  4342  000FAC  0D03               	mullw	3
  4343  000FAE  0E26               	movlw	low (_SW_DATA+2)
  4344  000FB0  24F3               	addwf	243,w,c
  4345  000FB2  6ED9               	movwf	fsr2l,c
  4346  000FB4  0E00               	movlw	high (_SW_DATA+2)
  4347  000FB6  20F4               	addwfc	prodh,w,c
  4348  000FB8  6EDA               	movwf	fsr2h,c
  4349  000FBA  50DF               	movf	indf2,w,c
  4350  000FBC  6E31               	movwf	??_SW_UpdateState^0,c
  4351  000FBE  6A32               	clrf	(??_SW_UpdateState+1)^0,c
  4352                           
  4353                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4354                           ; Switch size 1, requested type "simple"
  4355                           ; Number of cases is 1, Range of values is 0 to 0
  4356                           ; switch strategies available:
  4357                           ; Name         Instructions Cycles
  4358                           ; simple_byte            4     3 (average)
  4359                           ;	Chosen strategy is simple_byte
  4360  000FC0  5032               	movf	(??_SW_UpdateState+1)^0,w,c
  4361  000FC2  0A00               	xorlw	0	; case 0
  4362  000FC4  B4D8               	btfsc	status,2,c
  4363  000FC6  EFE7  F007         	goto	i2l2732
  4364  000FCA  EFFA  F007         	goto	i2l71
  4365  000FCE                     i2l2732:
  4366                           
  4367                           ; Switch size 1, requested type "simple"
  4368                           ; Number of cases is 4, Range of values is 0 to 3
  4369                           ; switch strategies available:
  4370                           ; Name         Instructions Cycles
  4371                           ; simple_byte           13     7 (average)
  4372                           ;	Chosen strategy is simple_byte
  4373  000FCE  5031               	movf	??_SW_UpdateState^0,w,c
  4374  000FD0  0A00               	xorlw	0	; case 0
  4375  000FD2  B4D8               	btfsc	status,2,c
  4376  000FD4  EF51  F007         	goto	i2l1794
  4377  000FD8  0A01               	xorlw	1	; case 1
  4378  000FDA  B4D8               	btfsc	status,2,c
  4379  000FDC  EF7D  F007         	goto	i2l1800
  4380  000FE0  0A03               	xorlw	3	; case 2
  4381  000FE2  B4D8               	btfsc	status,2,c
  4382  000FE4  EFA9  F007         	goto	i2l1806
  4383  000FE8  0A01               	xorlw	1	; case 3
  4384  000FEA  B4D8               	btfsc	status,2,c
  4385  000FEC  EF25  F007         	goto	i2l1788
  4386  000FF0  EFFA  F007         	goto	i2l71
  4387  000FF4                     i2l71:
  4388  000FF4  0012               	return		;funcret
  4389  000FF6                     __end_of_SW_UpdateState:
  4390                           	opt callstack 0
  4391                           
  4392 ;; *************** function _SW_GetState *****************
  4393 ;; Defined at:
  4394 ;;		line 85 in file "SW.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  sw              1    wreg     enum E3162
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  sw              1    0[COMRAM] enum E3162
  4399 ;;  ret             1    1[COMRAM] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      unsigned char 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4412 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4413 ;;Total ram usage:        2 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_TMR0_ISR
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text22
  4423  0019B4                     __ptext22:
  4424                           	opt callstack 0
  4425  0019B4                     _SW_GetState:
  4426                           	opt callstack 24
  4427                           
  4428                           ;incstack = 0
  4429                           ;SW_GetState@sw stored from wreg
  4430  0019B4  6E31               	movwf	SW_GetState@sw^0,c
  4431  0019B6                     
  4432                           ;SW.c: 90:     ret = SW_DATA[sw].state;
  4433  0019B6  5031               	movf	SW_GetState@sw^0,w,c
  4434  0019B8  0D03               	mullw	3
  4435  0019BA  0E26               	movlw	low (_SW_DATA+2)
  4436  0019BC  24F3               	addwf	243,w,c
  4437  0019BE  6ED9               	movwf	fsr2l,c
  4438  0019C0  0E00               	movlw	high (_SW_DATA+2)
  4439  0019C2  20F4               	addwfc	prodh,w,c
  4440  0019C4  6EDA               	movwf	fsr2h,c
  4441  0019C6  50DF               	movf	indf2,w,c
  4442  0019C8  6E32               	movwf	SW_GetState@ret^0,c
  4443  0019CA                     
  4444                           ;SW.c: 92:     return ret;
  4445  0019CA  5032               	movf	SW_GetState@ret^0,w,c
  4446  0019CC  0012               	return		;funcret
  4447  0019CE                     __end_of_SW_GetState:
  4448                           	opt callstack 0
  4449                           
  4450 ;; *************** function _LCD_Update *****************
  4451 ;; Defined at:
  4452 ;;		line 313 in file "LCD.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  address         1   12[COMRAM] unsigned char 
  4457 ;;  j               1   15[COMRAM] unsigned char 
  4458 ;;  i               1   14[COMRAM] unsigned char 
  4459 ;;  updated         1   13[COMRAM] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          9       0       0       0       0       0       0       0       0
  4472 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:       13 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    3
  4476 ;; This function calls:
  4477 ;;		_LCD_SetDDRAM
  4478 ;;		i2_LCD_Write_Symbol
  4479 ;; This function is called by:
  4480 ;;		_TMR0_ISR
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text23
  4485  000C24                     __ptext23:
  4486                           	opt callstack 0
  4487  000C24                     _LCD_Update:
  4488                           	opt callstack 21
  4489  000C24                     
  4490                           ;LCD.c: 315:     uint8 j,i,updated = 0;
  4491  000C24  0E00               	movlw	0
  4492  000C26  6E3E               	movwf	LCD_Update@updated^0,c
  4493  000C28                     
  4494                           ;LCD.c: 316:     tick_counter += (5);
  4495  000C28  0E05               	movlw	5
  4496  000C2A  262A               	addwf	_tick_counter^0,f,c
  4497  000C2C  0E00               	movlw	0
  4498  000C2E  222B               	addwfc	(_tick_counter+1)^0,f,c
  4499  000C30                     
  4500                           ;LCD.c: 317:     if(tick_counter != (5))return;
  4501  000C30  0E05               	movlw	5
  4502  000C32  182A               	xorwf	_tick_counter^0,w,c
  4503  000C34  102B               	iorwf	(_tick_counter+1)^0,w,c
  4504  000C36  B4D8               	btfsc	status,2,c
  4505  000C38  EF20  F006         	goto	i2u141_41
  4506  000C3C  EF22  F006         	goto	i2u141_40
  4507  000C40                     i2u141_41:
  4508  000C40  EF24  F006         	goto	i2l2102
  4509  000C44                     i2u141_40:
  4510  000C44  EF21  F007         	goto	i2l149
  4511  000C48                     i2l2102:
  4512                           
  4513                           ;LCD.c: 319:     tick_counter = 0;
  4514  000C48  0E00               	movlw	0
  4515  000C4A  6E2B               	movwf	(_tick_counter+1)^0,c
  4516  000C4C  0E00               	movlw	0
  4517  000C4E  6E2A               	movwf	_tick_counter^0,c
  4518                           
  4519                           ;LCD.c: 321:     for(j = 0;j<(((40)/16)+1);j++)
  4520  000C50  0E00               	movlw	0
  4521  000C52  6E40               	movwf	LCD_Update@j^0,c
  4522  000C54                     i2l2108:
  4523                           
  4524                           ;LCD.c: 322:     {;LCD.c: 323:         if(update_flag[line_counter][j]!=0)
  4525  000C54  5040               	movf	LCD_Update@j^0,w,c
  4526  000C56  0D02               	mullw	2
  4527  000C58  CFF3 F034          	movff	prodl,??_LCD_Update
  4528  000C5C  CFF4 F035          	movff	prodh,??_LCD_Update+1
  4529  000C60  502F               	movf	_line_counter^0,w,c
  4530  000C62  0D2A               	mullw	42
  4531  000C64  0E60               	movlw	low _update_flag
  4532  000C66  6E36               	movwf	(??_LCD_Update+2)^0,c
  4533  000C68  0E00               	movlw	high _update_flag
  4534  000C6A  6E37               	movwf	(??_LCD_Update+3)^0,c
  4535  000C6C  50F3               	movf	243,w,c
  4536  000C6E  2636               	addwf	(??_LCD_Update+2)^0,f,c
  4537  000C70  50F4               	movf	244,w,c
  4538  000C72  2237               	addwfc	(??_LCD_Update+3)^0,f,c
  4539  000C74  5034               	movf	??_LCD_Update^0,w,c
  4540  000C76  2436               	addwf	(??_LCD_Update+2)^0,w,c
  4541  000C78  6ED9               	movwf	fsr2l,c
  4542  000C7A  5035               	movf	(??_LCD_Update+1)^0,w,c
  4543  000C7C  2037               	addwfc	(??_LCD_Update+3)^0,w,c
  4544  000C7E  6EDA               	movwf	fsr2h,c
  4545  000C80  50DE               	movf	postinc2,w,c
  4546  000C82  10DE               	iorwf	postinc2,w,c
  4547  000C84  B4D8               	btfsc	status,2,c
  4548  000C86  EF47  F006         	goto	i2u142_41
  4549  000C8A  EF49  F006         	goto	i2u142_40
  4550  000C8E                     i2u142_41:
  4551  000C8E  EF0C  F007         	goto	i2l2136
  4552  000C92                     i2u142_40:
  4553  000C92                     
  4554                           ;LCD.c: 324:         {;LCD.c: 326:             for(i=0;i<16;i++)
  4555  000C92  0E00               	movlw	0
  4556  000C94  6E3F               	movwf	LCD_Update@i^0,c
  4557  000C96                     i2l2116:
  4558                           
  4559                           ;LCD.c: 327:             {;LCD.c: 329:                 if((update_flag[line_counter][j])
      +                          &(0x0001<<i))
  4560  000C96  5040               	movf	LCD_Update@j^0,w,c
  4561  000C98  0D02               	mullw	2
  4562  000C9A  CFF3 F034          	movff	prodl,??_LCD_Update
  4563  000C9E  CFF4 F035          	movff	prodh,??_LCD_Update+1
  4564  000CA2  502F               	movf	_line_counter^0,w,c
  4565  000CA4  0D2A               	mullw	42
  4566  000CA6  0E60               	movlw	low _update_flag
  4567  000CA8  6E36               	movwf	(??_LCD_Update+2)^0,c
  4568  000CAA  0E00               	movlw	high _update_flag
  4569  000CAC  6E37               	movwf	(??_LCD_Update+3)^0,c
  4570  000CAE  50F3               	movf	243,w,c
  4571  000CB0  2636               	addwf	(??_LCD_Update+2)^0,f,c
  4572  000CB2  50F4               	movf	244,w,c
  4573  000CB4  2237               	addwfc	(??_LCD_Update+3)^0,f,c
  4574  000CB6  5034               	movf	??_LCD_Update^0,w,c
  4575  000CB8  2436               	addwf	(??_LCD_Update+2)^0,w,c
  4576  000CBA  6ED9               	movwf	fsr2l,c
  4577  000CBC  5035               	movf	(??_LCD_Update+1)^0,w,c
  4578  000CBE  2037               	addwfc	(??_LCD_Update+3)^0,w,c
  4579  000CC0  6EDA               	movwf	fsr2h,c
  4580  000CC2  CFDE F038          	movff	postinc2,??_LCD_Update+4
  4581  000CC6  CFDD F039          	movff	postdec2,??_LCD_Update+5
  4582  000CCA  C03F  F03A         	movff	LCD_Update@i,??_LCD_Update+6
  4583  000CCE  0E01               	movlw	1
  4584  000CD0  6E3B               	movwf	(??_LCD_Update+7)^0,c
  4585  000CD2  0E00               	movlw	0
  4586  000CD4  6E3C               	movwf	(??_LCD_Update+8)^0,c
  4587  000CD6  2A3A               	incf	(??_LCD_Update+6)^0,f,c
  4588  000CD8  EF71  F006         	goto	i2u143_44
  4589  000CDC                     i2u143_45:
  4590  000CDC  90D8               	bcf	status,0,c
  4591  000CDE  363B               	rlcf	(??_LCD_Update+7)^0,f,c
  4592  000CE0  363C               	rlcf	(??_LCD_Update+8)^0,f,c
  4593  000CE2                     i2u143_44:
  4594  000CE2  2E3A               	decfsz	(??_LCD_Update+6)^0,f,c
  4595  000CE4  EF6E  F006         	goto	i2u143_45
  4596  000CE8  5038               	movf	(??_LCD_Update+4)^0,w,c
  4597  000CEA  163B               	andwf	(??_LCD_Update+7)^0,f,c
  4598  000CEC  5039               	movf	(??_LCD_Update+5)^0,w,c
  4599  000CEE  163C               	andwf	(??_LCD_Update+8)^0,f,c
  4600  000CF0  503B               	movf	(??_LCD_Update+7)^0,w,c
  4601  000CF2  103C               	iorwf	(??_LCD_Update+8)^0,w,c
  4602  000CF4  B4D8               	btfsc	status,2,c
  4603  000CF6  EF7F  F006         	goto	i2u144_41
  4604  000CFA  EF81  F006         	goto	i2u144_40
  4605  000CFE                     i2u144_41:
  4606  000CFE  EF03  F007         	goto	i2l2132
  4607  000D02                     i2u144_40:
  4608  000D02                     
  4609                           ;LCD.c: 330:                 {;LCD.c: 332:                     uint8 address = lines_off
      +                          set_adresses[line_counter] + ((j*16)+i);
  4610  000D02  0EFD               	movlw	low _lines_offset_adresses
  4611  000D04  242F               	addwf	_line_counter^0,w,c
  4612  000D06  6ED9               	movwf	fsr2l,c
  4613  000D08  6ADA               	clrf	fsr2h,c
  4614  000D0A  0E00               	movlw	high _lines_offset_adresses
  4615  000D0C  22DA               	addwfc	fsr2h,f,c
  4616  000D0E  50DF               	movf	indf2,w,c
  4617  000D10  6E34               	movwf	??_LCD_Update^0,c
  4618  000D12  5040               	movf	LCD_Update@j^0,w,c
  4619  000D14  0D10               	mullw	16
  4620  000D16  50F3               	movf	243,w,c
  4621  000D18  2434               	addwf	??_LCD_Update^0,w,c
  4622  000D1A  243F               	addwf	LCD_Update@i^0,w,c
  4623  000D1C  6E3D               	movwf	LCD_Update@address^0,c
  4624  000D1E                     
  4625                           ;LCD.c: 334:                     LCD_SetDDRAM(address);
  4626  000D1E  503D               	movf	LCD_Update@address^0,w,c
  4627  000D20  EC02  F00D         	call	_LCD_SetDDRAM
  4628  000D24                     
  4629                           ;LCD.c: 336:                     LCD_Write_Symbol(LCD_Data_Buffer[line_counter][((j*16)+
      +                          i)]);
  4630  000D24  502F               	movf	_line_counter^0,w,c
  4631  000D26  0D28               	mullw	40
  4632  000D28  0E00               	movlw	low _LCD_Data_Buffer
  4633  000D2A  6E34               	movwf	??_LCD_Update^0,c
  4634  000D2C  0E01               	movlw	high _LCD_Data_Buffer
  4635  000D2E  6E35               	movwf	(??_LCD_Update+1)^0,c
  4636  000D30  50F3               	movf	243,w,c
  4637  000D32  2634               	addwf	??_LCD_Update^0,f,c
  4638  000D34  50F4               	movf	244,w,c
  4639  000D36  2235               	addwfc	(??_LCD_Update+1)^0,f,c
  4640  000D38  5040               	movf	LCD_Update@j^0,w,c
  4641  000D3A  0D10               	mullw	16
  4642  000D3C  50F3               	movf	243,w,c
  4643  000D3E  2634               	addwf	??_LCD_Update^0,f,c
  4644  000D40  50F4               	movf	244,w,c
  4645  000D42  2235               	addwfc	(??_LCD_Update+1)^0,f,c
  4646  000D44  503F               	movf	LCD_Update@i^0,w,c
  4647  000D46  2434               	addwf	??_LCD_Update^0,w,c
  4648  000D48  6ED9               	movwf	fsr2l,c
  4649  000D4A  0E00               	movlw	0
  4650  000D4C  2035               	addwfc	(??_LCD_Update+1)^0,w,c
  4651  000D4E  6EDA               	movwf	fsr2h,c
  4652  000D50  50DF               	movf	indf2,w,c
  4653  000D52  ECAD  F00C         	call	i2_LCD_Write_Symbol
  4654  000D56                     
  4655                           ;LCD.c: 338:                     update_flag[line_counter][j] &= ~(1<<i);
  4656  000D56  C03F  F034         	movff	LCD_Update@i,??_LCD_Update
  4657  000D5A  0E01               	movlw	1
  4658  000D5C  6E35               	movwf	(??_LCD_Update+1)^0,c
  4659  000D5E  0E00               	movlw	0
  4660  000D60  6E36               	movwf	(??_LCD_Update+2)^0,c
  4661  000D62  2A34               	incf	??_LCD_Update^0,f,c
  4662  000D64  EFB7  F006         	goto	i2u145_44
  4663  000D68                     i2u145_45:
  4664  000D68  90D8               	bcf	status,0,c
  4665  000D6A  3635               	rlcf	(??_LCD_Update+1)^0,f,c
  4666  000D6C  3636               	rlcf	(??_LCD_Update+2)^0,f,c
  4667  000D6E                     i2u145_44:
  4668  000D6E  2E34               	decfsz	??_LCD_Update^0,f,c
  4669  000D70  EFB4  F006         	goto	i2u145_45
  4670  000D74  1C35               	comf	(??_LCD_Update+1)^0,w,c
  4671  000D76  6E37               	movwf	(??_LCD_Update+3)^0,c
  4672  000D78  1C36               	comf	(??_LCD_Update+2)^0,w,c
  4673  000D7A  6E38               	movwf	(??_LCD_Update+4)^0,c
  4674  000D7C  5040               	movf	LCD_Update@j^0,w,c
  4675  000D7E  0D02               	mullw	2
  4676  000D80  CFF3 F039          	movff	prodl,??_LCD_Update+5
  4677  000D84  CFF4 F03A          	movff	prodh,??_LCD_Update+6
  4678  000D88  502F               	movf	_line_counter^0,w,c
  4679  000D8A  0D2A               	mullw	42
  4680  000D8C  0E60               	movlw	low _update_flag
  4681  000D8E  6E3B               	movwf	(??_LCD_Update+7)^0,c
  4682  000D90  0E00               	movlw	high _update_flag
  4683  000D92  6E3C               	movwf	(??_LCD_Update+8)^0,c
  4684  000D94  50F3               	movf	243,w,c
  4685  000D96  263B               	addwf	(??_LCD_Update+7)^0,f,c
  4686  000D98  50F4               	movf	244,w,c
  4687  000D9A  223C               	addwfc	(??_LCD_Update+8)^0,f,c
  4688  000D9C  5039               	movf	(??_LCD_Update+5)^0,w,c
  4689  000D9E  243B               	addwf	(??_LCD_Update+7)^0,w,c
  4690  000DA0  6ED9               	movwf	fsr2l,c
  4691  000DA2  503A               	movf	(??_LCD_Update+6)^0,w,c
  4692  000DA4  203C               	addwfc	(??_LCD_Update+8)^0,w,c
  4693  000DA6  6EDA               	movwf	fsr2h,c
  4694  000DA8  5037               	movf	(??_LCD_Update+3)^0,w,c
  4695  000DAA  16DE               	andwf	postinc2,f,c
  4696  000DAC  5038               	movf	(??_LCD_Update+4)^0,w,c
  4697  000DAE  16DD               	andwf	postdec2,f,c
  4698  000DB0                     
  4699                           ;LCD.c: 340:                     updated++;
  4700  000DB0  2A3E               	incf	LCD_Update@updated^0,f,c
  4701  000DB2                     
  4702                           ;LCD.c: 341:                     if(updated == (5) || update_flag[line_counter][j]==0 )b
      +                          reak;
  4703  000DB2  0E05               	movlw	5
  4704  000DB4  183E               	xorwf	LCD_Update@updated^0,w,c
  4705  000DB6  B4D8               	btfsc	status,2,c
  4706  000DB8  EFE0  F006         	goto	i2u146_41
  4707  000DBC  EFE2  F006         	goto	i2u146_40
  4708  000DC0                     i2u146_41:
  4709  000DC0  EF0C  F007         	goto	i2l2136
  4710  000DC4                     i2u146_40:
  4711  000DC4  5040               	movf	LCD_Update@j^0,w,c
  4712  000DC6  0D02               	mullw	2
  4713  000DC8  CFF3 F034          	movff	prodl,??_LCD_Update
  4714  000DCC  CFF4 F035          	movff	prodh,??_LCD_Update+1
  4715  000DD0  502F               	movf	_line_counter^0,w,c
  4716  000DD2  0D2A               	mullw	42
  4717  000DD4  0E60               	movlw	low _update_flag
  4718  000DD6  6E36               	movwf	(??_LCD_Update+2)^0,c
  4719  000DD8  0E00               	movlw	high _update_flag
  4720  000DDA  6E37               	movwf	(??_LCD_Update+3)^0,c
  4721  000DDC  50F3               	movf	243,w,c
  4722  000DDE  2636               	addwf	(??_LCD_Update+2)^0,f,c
  4723  000DE0  50F4               	movf	244,w,c
  4724  000DE2  2237               	addwfc	(??_LCD_Update+3)^0,f,c
  4725  000DE4  5034               	movf	??_LCD_Update^0,w,c
  4726  000DE6  2436               	addwf	(??_LCD_Update+2)^0,w,c
  4727  000DE8  6ED9               	movwf	fsr2l,c
  4728  000DEA  5035               	movf	(??_LCD_Update+1)^0,w,c
  4729  000DEC  2037               	addwfc	(??_LCD_Update+3)^0,w,c
  4730  000DEE  6EDA               	movwf	fsr2h,c
  4731  000DF0  50DE               	movf	postinc2,w,c
  4732  000DF2  10DE               	iorwf	postinc2,w,c
  4733  000DF4  A4D8               	btfss	status,2,c
  4734  000DF6  EFFF  F006         	goto	i2u147_41
  4735  000DFA  EF01  F007         	goto	i2u147_40
  4736  000DFE                     i2u147_41:
  4737  000DFE  EF03  F007         	goto	i2l2132
  4738  000E02                     i2u147_40:
  4739  000E02  EF0C  F007         	goto	i2l2136
  4740  000E06                     i2l2132:
  4741                           
  4742                           ;LCD.c: 343:             }
  4743  000E06  2A3F               	incf	LCD_Update@i^0,f,c
  4744  000E08  0E0F               	movlw	15
  4745  000E0A  643F               	cpfsgt	LCD_Update@i^0,c
  4746  000E0C  EF0A  F007         	goto	i2u148_41
  4747  000E10  EF0C  F007         	goto	i2u148_40
  4748  000E14                     i2u148_41:
  4749  000E14  EF4B  F006         	goto	i2l2116
  4750  000E18                     i2u148_40:
  4751  000E18                     i2l2136:
  4752                           
  4753                           ;LCD.c: 345:     }
  4754  000E18  2A40               	incf	LCD_Update@j^0,f,c
  4755  000E1A  0E02               	movlw	2
  4756  000E1C  6440               	cpfsgt	LCD_Update@j^0,c
  4757  000E1E  EF13  F007         	goto	i2u149_41
  4758  000E22  EF15  F007         	goto	i2u149_40
  4759  000E26                     i2u149_41:
  4760  000E26  EF2A  F006         	goto	i2l2108
  4761  000E2A                     i2u149_40:
  4762  000E2A                     
  4763                           ;LCD.c: 346:     line_counter++;
  4764  000E2A  2A2F               	incf	_line_counter^0,f,c
  4765  000E2C                     
  4766                           ;LCD.c: 347:     if(line_counter == (2))line_counter = 0;
  4767  000E2C  0E02               	movlw	2
  4768  000E2E  182F               	xorwf	_line_counter^0,w,c
  4769  000E30  A4D8               	btfss	status,2,c
  4770  000E32  EF1D  F007         	goto	i2u150_41
  4771  000E36  EF1F  F007         	goto	i2u150_40
  4772  000E3A                     i2u150_41:
  4773  000E3A  EF21  F007         	goto	i2l149
  4774  000E3E                     i2u150_40:
  4775  000E3E  0E00               	movlw	0
  4776  000E40  6E2F               	movwf	_line_counter^0,c
  4777  000E42                     i2l149:
  4778  000E42  0012               	return		;funcret
  4779  000E44                     __end_of_LCD_Update:
  4780                           	opt callstack 0
  4781                           
  4782 ;; *************** function i2_LCD_Write_Symbol *****************
  4783 ;; Defined at:
  4784 ;;		line 170 in file "LCD.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  sym             1    wreg     unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  sym             1    1[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:        1 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		i2_LCD_Data_Out
  4807 ;; This function is called by:
  4808 ;;		_LCD_Update
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text24
  4813  00195A                     __ptext24:
  4814                           	opt callstack 0
  4815  00195A                     i2_LCD_Write_Symbol:
  4816                           	opt callstack 22
  4817                           
  4818                           ;incstack = 0
  4819                           ;i2LCD_Write_Symbol@sym stored from wreg
  4820  00195A  6E32               	movwf	i2LCD_Write_Symbol@sym^0,c
  4821  00195C                     
  4822                           ;LCD.c: 170: static void LCD_Write_Symbol(uint8 sym);LCD.c: 171: {;LCD.c: 173:     (((PO
      +                          RTE))=((PORTE) & ~(1<<(2)))|(1<<(2)));
  4823  00195C  5084               	movf	132,w,c	;volatile
  4824  00195E  0BFB               	andlw	251
  4825  001960  0904               	iorlw	4
  4826  001962  6E84               	movwf	132,c	;volatile
  4827                           
  4828                           ;LCD.c: 175:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  4829  001964  5084               	movf	132,w,c	;volatile
  4830  001966  0BFD               	andlw	253
  4831  001968  6E84               	movwf	132,c	;volatile
  4832  00196A                     
  4833                           ;LCD.c: 179:     LCD_Data_Out((sym>>4));
  4834  00196A  3832               	swapf	i2LCD_Write_Symbol@sym^0,w,c
  4835  00196C  0B0F               	andlw	15
  4836  00196E  EC5F  F00C         	call	i2_LCD_Data_Out
  4837  001972                     
  4838                           ;LCD.c: 181:     LCD_Data_Out(sym);
  4839  001972  5032               	movf	i2LCD_Write_Symbol@sym^0,w,c
  4840  001974  EC5F  F00C         	call	i2_LCD_Data_Out
  4841  001978  0012               	return		;funcret
  4842  00197A                     __end_ofi2_LCD_Write_Symbol:
  4843                           	opt callstack 0
  4844                           
  4845 ;; *************** function _LCD_SetDDRAM *****************
  4846 ;; Defined at:
  4847 ;;		line 299 in file "LCD.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  ADDRESS         1    wreg     unsigned char 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  ADDRESS         1    2[COMRAM] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2, status,0, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0
  4862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4864 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4865 ;;Total ram usage:        1 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    2
  4868 ;; This function calls:
  4869 ;;		i2_LCD_Write_Instruction
  4870 ;; This function is called by:
  4871 ;;		_LCD_Update
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text25
  4876  001A04                     __ptext25:
  4877                           	opt callstack 0
  4878  001A04                     _LCD_SetDDRAM:
  4879                           	opt callstack 21
  4880                           
  4881                           ;incstack = 0
  4882                           ;LCD_SetDDRAM@ADDRESS stored from wreg
  4883  001A04  6E33               	movwf	LCD_SetDDRAM@ADDRESS^0,c
  4884  001A06                     
  4885                           ;LCD.c: 299: static void LCD_SetDDRAM(uint8 ADDRESS);LCD.c: 300: {;LCD.c: 301:     ADDRE
      +                          SS &= 0x7f;
  4886  001A06  9E33               	bcf	LCD_SetDDRAM@ADDRESS^0,7,c
  4887                           
  4888                           ;LCD.c: 302:     ADDRESS |= 0x80;
  4889  001A08  8E33               	bsf	LCD_SetDDRAM@ADDRESS^0,7,c
  4890  001A0A                     
  4891                           ;LCD.c: 303:     LCD_Write_Instruction(ADDRESS);
  4892  001A0A  5033               	movf	LCD_SetDDRAM@ADDRESS^0,w,c
  4893  001A0C  ECBD  F00C         	call	i2_LCD_Write_Instruction
  4894  001A10  0012               	return		;funcret
  4895  001A12                     __end_of_LCD_SetDDRAM:
  4896                           	opt callstack 0
  4897                           
  4898 ;; *************** function i2_LCD_Write_Instruction *****************
  4899 ;; Defined at:
  4900 ;;		line 208 in file "LCD.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  inst            1    wreg     enum E3182
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  inst            1    1[COMRAM] enum E3182
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        1 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		i2_LCD_Data_Out
  4923 ;; This function is called by:
  4924 ;;		_LCD_SetDDRAM
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text26
  4929  00197A                     __ptext26:
  4930                           	opt callstack 0
  4931  00197A                     i2_LCD_Write_Instruction:
  4932                           	opt callstack 21
  4933                           
  4934                           ;incstack = 0
  4935                           ;i2LCD_Write_Instruction@inst stored from wreg
  4936  00197A  6E32               	movwf	i2LCD_Write_Instruction@inst^0,c
  4937  00197C                     
  4938                           ;LCD.c: 208: static void LCD_Write_Instruction(LCD_Instruction_t inst);LCD.c: 209: {;LCD
      +                          .c: 211:     (((PORTE))=((PORTE) & ~(1<<(2)))|(0<<(2)));
  4939  00197C  5084               	movf	132,w,c	;volatile
  4940  00197E  0BFB               	andlw	251
  4941  001980  6E84               	movwf	132,c	;volatile
  4942                           
  4943                           ;LCD.c: 213:     (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  4944  001982  5084               	movf	132,w,c	;volatile
  4945  001984  0BFD               	andlw	253
  4946  001986  6E84               	movwf	132,c	;volatile
  4947  001988                     
  4948                           ;LCD.c: 215:     LCD_Data_Out((inst>>4));
  4949  001988  3832               	swapf	i2LCD_Write_Instruction@inst^0,w,c
  4950  00198A  0B0F               	andlw	15
  4951  00198C  EC5F  F00C         	call	i2_LCD_Data_Out
  4952  001990                     
  4953                           ;LCD.c: 216:     LCD_Data_Out(inst);
  4954  001990  5032               	movf	i2LCD_Write_Instruction@inst^0,w,c
  4955  001992  EC5F  F00C         	call	i2_LCD_Data_Out
  4956  001996  0012               	return		;funcret
  4957  001998                     __end_ofi2_LCD_Write_Instruction:
  4958                           	opt callstack 0
  4959                           
  4960 ;; *************** function i2_LCD_Data_Out *****************
  4961 ;; Defined at:
  4962 ;;		line 230 in file "LCD.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  byte            1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  byte            1    0[COMRAM] unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4979 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:        1 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		i2_LCD_Write_Symbol
  4986 ;;		i2_LCD_Write_Instruction
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text27
  4991  0018BE                     __ptext27:
  4992                           	opt callstack 0
  4993  0018BE                     i2_LCD_Data_Out:
  4994                           	opt callstack 22
  4995                           
  4996                           ;incstack = 0
  4997                           ;i2LCD_Data_Out@byte stored from wreg
  4998  0018BE  6E31               	movwf	i2LCD_Data_Out@byte^0,c
  4999  0018C0                     
  5000                           ;LCD.c: 230: static void LCD_Data_Out(uint8 byte);LCD.c: 231: {;LCD.c: 234:        (((PO
      +                          RTD))=(((PORTD))&~(0xF<<((1)*4)))); (((PORTD))=(((PORTD))|((byte<<((1)*4))&(0xF<<((1)*4)
      +                          ))));
  5001  0018C0  5083               	movf	131,w,c	;volatile
  5002  0018C2  0B0F               	andlw	15
  5003  0018C4  6E83               	movwf	131,c	;volatile
  5004  0018C6  3831               	swapf	i2LCD_Data_Out@byte^0,w,c
  5005  0018C8  0BF0               	andlw	240
  5006  0018CA  0BF0               	andlw	240
  5007  0018CC  1083               	iorwf	131,w,c	;volatile
  5008  0018CE  6E83               	movwf	131,c	;volatile
  5009                           
  5010                           ;LCD.c: 237:        (((PORTE))=((PORTE) & ~(1<<(1)))|(1<<(1)));
  5011  0018D0  5084               	movf	132,w,c	;volatile
  5012  0018D2  0BFD               	andlw	253
  5013  0018D4  0902               	iorlw	2
  5014  0018D6  6E84               	movwf	132,c	;volatile
  5015  0018D8                     
  5016                           ;LCD.c: 239:        _delay((unsigned long)((100)*(8000000/4000000.0)));
  5017  0018D8  0E42               	movlw	66
  5018  0018DA                     i2u228_47:
  5019  0018DA  2EE8               	decfsz	wreg,f,c
  5020  0018DC  D7FE               	bra	i2u228_47
  5021  0018DE  D000               	nop2	
  5022  0018E0                     
  5023                           ;LCD.c: 241:        (((PORTE))=((PORTE) & ~(1<<(1)))|(0<<(1)));
  5024  0018E0  5084               	movf	132,w,c	;volatile
  5025  0018E2  0BFD               	andlw	253
  5026  0018E4  6E84               	movwf	132,c	;volatile
  5027  0018E6                     
  5028                           ;LCD.c: 243:        _delay((unsigned long)((1)*(8000000/4000000.0)));
  5029  0018E6  D000               	nop2		;2 cycle nop
  5030  0018E8  0012               	return		;funcret
  5031  0018EA                     __end_ofi2_LCD_Data_Out:
  5032                           	opt callstack 0
  5033                           
  5034 ;; *************** function _LCD_SetSymbol *****************
  5035 ;; Defined at:
  5036 ;;		line 265 in file "LCD.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  sym             1    wreg     unsigned char 
  5039 ;;  row             1    8[COMRAM] unsigned char 
  5040 ;;  column          1    9[COMRAM] unsigned char 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  sym             1   15[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         2       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    1
  5059 ;; This function calls:
  5060 ;;		___awdiv
  5061 ;; This function is called by:
  5062 ;;		_TMR0_ISR
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text28
  5067  0016F2                     __ptext28:
  5068                           	opt callstack 0
  5069  0016F2                     _LCD_SetSymbol:
  5070                           	opt callstack 23
  5071                           
  5072                           ;incstack = 0
  5073                           ;LCD_SetSymbol@sym stored from wreg
  5074  0016F2  6E40               	movwf	LCD_SetSymbol@sym^0,c
  5075  0016F4                     
  5076                           ;LCD.c: 265: void LCD_SetSymbol(uint8 sym,uint8 row,uint8 column);LCD.c: 266: {;LCD.c: 2
      +                          67:     if(row >= (2) && column >= (40))return;
  5077  0016F4  0E01               	movlw	1
  5078  0016F6  6439               	cpfsgt	LCD_SetSymbol@row^0,c
  5079  0016F8  EF80  F00B         	goto	i2u138_41
  5080  0016FC  EF82  F00B         	goto	i2u138_40
  5081  001700                     i2u138_41:
  5082  001700  EF8C  F00B         	goto	i2l2090
  5083  001704                     i2u138_40:
  5084  001704  0E27               	movlw	39
  5085  001706  643A               	cpfsgt	LCD_SetSymbol@column^0,c
  5086  001708  EF88  F00B         	goto	i2u139_41
  5087  00170C  EF8A  F00B         	goto	i2u139_40
  5088  001710                     i2u139_41:
  5089  001710  EF8C  F00B         	goto	i2l2090
  5090  001714                     i2u139_40:
  5091  001714  EFCF  F00B         	goto	i2l135
  5092  001718                     i2l2090:
  5093                           
  5094                           ;LCD.c: 268:     LCD_Data_Buffer[row][column] = sym;
  5095  001718  5039               	movf	LCD_SetSymbol@row^0,w,c
  5096  00171A  0D28               	mullw	40
  5097  00171C  0E00               	movlw	low _LCD_Data_Buffer
  5098  00171E  6E3B               	movwf	??_LCD_SetSymbol^0,c
  5099  001720  0E01               	movlw	high _LCD_Data_Buffer
  5100  001722  6E3C               	movwf	(??_LCD_SetSymbol+1)^0,c
  5101  001724  50F3               	movf	243,w,c
  5102  001726  263B               	addwf	??_LCD_SetSymbol^0,f,c
  5103  001728  50F4               	movf	244,w,c
  5104  00172A  223C               	addwfc	(??_LCD_SetSymbol+1)^0,f,c
  5105  00172C  503A               	movf	LCD_SetSymbol@column^0,w,c
  5106  00172E  243B               	addwf	??_LCD_SetSymbol^0,w,c
  5107  001730  6ED9               	movwf	fsr2l,c
  5108  001732  0E00               	movlw	0
  5109  001734  203C               	addwfc	(??_LCD_SetSymbol+1)^0,w,c
  5110  001736  6EDA               	movwf	fsr2h,c
  5111  001738  C040  FFDF         	movff	LCD_SetSymbol@sym,indf2
  5112  00173C                     
  5113                           ;LCD.c: 269:     update_flag[row][column/16] |= (0x0001<<(column%16));
  5114  00173C  C03A  F03B         	movff	LCD_SetSymbol@column,??_LCD_SetSymbol
  5115  001740  0E0F               	movlw	15
  5116  001742  163B               	andwf	??_LCD_SetSymbol^0,f,c
  5117  001744  0E01               	movlw	1
  5118  001746  6E3C               	movwf	(??_LCD_SetSymbol+1)^0,c
  5119  001748  0E00               	movlw	0
  5120  00174A  6E3D               	movwf	(??_LCD_SetSymbol+2)^0,c
  5121  00174C  2A3B               	incf	??_LCD_SetSymbol^0,f,c
  5122  00174E  EFAC  F00B         	goto	i2u140_44
  5123  001752                     i2u140_45:
  5124  001752  90D8               	bcf	status,0,c
  5125  001754  363C               	rlcf	(??_LCD_SetSymbol+1)^0,f,c
  5126  001756  363D               	rlcf	(??_LCD_SetSymbol+2)^0,f,c
  5127  001758                     i2u140_44:
  5128  001758  2E3B               	decfsz	??_LCD_SetSymbol^0,f,c
  5129  00175A  EFA9  F00B         	goto	i2u140_45
  5130  00175E  C03A  F031         	movff	LCD_SetSymbol@column,___awdiv@dividend
  5131  001762  6A32               	clrf	(___awdiv@dividend+1)^0,c
  5132  001764  0E00               	movlw	0
  5133  001766  6E34               	movwf	(___awdiv@divisor+1)^0,c
  5134  001768  0E10               	movlw	16
  5135  00176A  6E33               	movwf	___awdiv@divisor^0,c
  5136  00176C  ECFE  F009         	call	___awdiv	;wreg free
  5137  001770  90D8               	bcf	status,0,c
  5138  001772  3631               	rlcf	?___awdiv^0,f,c
  5139  001774  3632               	rlcf	(?___awdiv+1)^0,f,c
  5140  001776  5039               	movf	LCD_SetSymbol@row^0,w,c
  5141  001778  0D2A               	mullw	42
  5142  00177A  0E60               	movlw	low _update_flag
  5143  00177C  6E3E               	movwf	(??_LCD_SetSymbol+3)^0,c
  5144  00177E  0E00               	movlw	high _update_flag
  5145  001780  6E3F               	movwf	(??_LCD_SetSymbol+4)^0,c
  5146  001782  50F3               	movf	243,w,c
  5147  001784  263E               	addwf	(??_LCD_SetSymbol+3)^0,f,c
  5148  001786  50F4               	movf	244,w,c
  5149  001788  223F               	addwfc	(??_LCD_SetSymbol+4)^0,f,c
  5150  00178A  5031               	movf	?___awdiv^0,w,c
  5151  00178C  243E               	addwf	(??_LCD_SetSymbol+3)^0,w,c
  5152  00178E  6ED9               	movwf	fsr2l,c
  5153  001790  5032               	movf	(?___awdiv+1)^0,w,c
  5154  001792  203F               	addwfc	(??_LCD_SetSymbol+4)^0,w,c
  5155  001794  6EDA               	movwf	fsr2h,c
  5156  001796  503C               	movf	(??_LCD_SetSymbol+1)^0,w,c
  5157  001798  12DE               	iorwf	postinc2,f,c
  5158  00179A  503D               	movf	(??_LCD_SetSymbol+2)^0,w,c
  5159  00179C  12DD               	iorwf	postdec2,f,c
  5160  00179E                     i2l135:
  5161  00179E  0012               	return		;funcret
  5162  0017A0                     __end_of_LCD_SetSymbol:
  5163                           	opt callstack 0
  5164                           
  5165 ;; *************** function ___awdiv *****************
  5166 ;; Defined at:
  5167 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  dividend        2    0[COMRAM] int 
  5170 ;;  divisor         2    2[COMRAM] int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  quotient        2    6[COMRAM] int 
  5173 ;;  sign            1    5[COMRAM] unsigned char 
  5174 ;;  counter         1    4[COMRAM] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  2    0[COMRAM] int 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5184 ;;      Params:         4       0       0       0       0       0       0       0       0
  5185 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5187 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5188 ;;Total ram usage:        8 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_LCD_SetSymbol
  5194 ;;		_LCD_SetString
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text29
  5199  0013FC                     __ptext29:
  5200                           	opt callstack 0
  5201  0013FC                     ___awdiv:
  5202                           	opt callstack 23
  5203  0013FC  0E00               	movlw	0
  5204  0013FE  6E36               	movwf	___awdiv@sign^0,c
  5205  001400  BE34               	btfsc	(___awdiv@divisor+1)^0,7,c
  5206  001402  EF07  F00A         	goto	i2u129_40
  5207  001406  EF05  F00A         	goto	i2u129_41
  5208  00140A                     i2u129_41:
  5209  00140A  EF0D  F00A         	goto	i2l1966
  5210  00140E                     i2u129_40:
  5211  00140E  6C33               	negf	___awdiv@divisor^0,c
  5212  001410  1E34               	comf	(___awdiv@divisor+1)^0,f,c
  5213  001412  B0D8               	btfsc	status,0,c
  5214  001414  2A34               	incf	(___awdiv@divisor+1)^0,f,c
  5215  001416  0E01               	movlw	1
  5216  001418  6E36               	movwf	___awdiv@sign^0,c
  5217  00141A                     i2l1966:
  5218  00141A  BE32               	btfsc	(___awdiv@dividend+1)^0,7,c
  5219  00141C  EF14  F00A         	goto	i2u130_40
  5220  001420  EF12  F00A         	goto	i2u130_41
  5221  001424                     i2u130_41:
  5222  001424  EF1A  F00A         	goto	i2l1972
  5223  001428                     i2u130_40:
  5224  001428  6C31               	negf	___awdiv@dividend^0,c
  5225  00142A  1E32               	comf	(___awdiv@dividend+1)^0,f,c
  5226  00142C  B0D8               	btfsc	status,0,c
  5227  00142E  2A32               	incf	(___awdiv@dividend+1)^0,f,c
  5228  001430  0E01               	movlw	1
  5229  001432  1A36               	xorwf	___awdiv@sign^0,f,c
  5230  001434                     i2l1972:
  5231  001434  0E00               	movlw	0
  5232  001436  6E38               	movwf	(___awdiv@quotient+1)^0,c
  5233  001438  0E00               	movlw	0
  5234  00143A  6E37               	movwf	___awdiv@quotient^0,c
  5235  00143C  5033               	movf	___awdiv@divisor^0,w,c
  5236  00143E  1034               	iorwf	(___awdiv@divisor+1)^0,w,c
  5237  001440  B4D8               	btfsc	status,2,c
  5238  001442  EF25  F00A         	goto	i2u131_41
  5239  001446  EF27  F00A         	goto	i2u131_40
  5240  00144A                     i2u131_41:
  5241  00144A  EF4F  F00A         	goto	i2l1994
  5242  00144E                     i2u131_40:
  5243  00144E  0E01               	movlw	1
  5244  001450  6E35               	movwf	___awdiv@counter^0,c
  5245  001452  EF2F  F00A         	goto	i2l1980
  5246  001456                     i2l1978:
  5247  001456  90D8               	bcf	status,0,c
  5248  001458  3633               	rlcf	___awdiv@divisor^0,f,c
  5249  00145A  3634               	rlcf	(___awdiv@divisor+1)^0,f,c
  5250  00145C  2A35               	incf	___awdiv@counter^0,f,c
  5251  00145E                     i2l1980:
  5252  00145E  AE34               	btfss	(___awdiv@divisor+1)^0,7,c
  5253  001460  EF34  F00A         	goto	i2u132_41
  5254  001464  EF36  F00A         	goto	i2u132_40
  5255  001468                     i2u132_41:
  5256  001468  EF2B  F00A         	goto	i2l1978
  5257  00146C                     i2u132_40:
  5258  00146C                     i2l1982:
  5259  00146C  90D8               	bcf	status,0,c
  5260  00146E  3637               	rlcf	___awdiv@quotient^0,f,c
  5261  001470  3638               	rlcf	(___awdiv@quotient+1)^0,f,c
  5262  001472  5033               	movf	___awdiv@divisor^0,w,c
  5263  001474  5C31               	subwf	___awdiv@dividend^0,w,c
  5264  001476  5034               	movf	(___awdiv@divisor+1)^0,w,c
  5265  001478  5832               	subwfb	(___awdiv@dividend+1)^0,w,c
  5266  00147A  A0D8               	btfss	status,0,c
  5267  00147C  EF42  F00A         	goto	i2u133_41
  5268  001480  EF44  F00A         	goto	i2u133_40
  5269  001484                     i2u133_41:
  5270  001484  EF49  F00A         	goto	i2l1990
  5271  001488                     i2u133_40:
  5272  001488  5033               	movf	___awdiv@divisor^0,w,c
  5273  00148A  5E31               	subwf	___awdiv@dividend^0,f,c
  5274  00148C  5034               	movf	(___awdiv@divisor+1)^0,w,c
  5275  00148E  5A32               	subwfb	(___awdiv@dividend+1)^0,f,c
  5276  001490  8037               	bsf	___awdiv@quotient^0,0,c
  5277  001492                     i2l1990:
  5278  001492  90D8               	bcf	status,0,c
  5279  001494  3234               	rrcf	(___awdiv@divisor+1)^0,f,c
  5280  001496  3233               	rrcf	___awdiv@divisor^0,f,c
  5281  001498  2E35               	decfsz	___awdiv@counter^0,f,c
  5282  00149A  EF36  F00A         	goto	i2l1982
  5283  00149E                     i2l1994:
  5284  00149E  5036               	movf	___awdiv@sign^0,w,c
  5285  0014A0  B4D8               	btfsc	status,2,c
  5286  0014A2  EF55  F00A         	goto	i2u134_41
  5287  0014A6  EF57  F00A         	goto	i2u134_40
  5288  0014AA                     i2u134_41:
  5289  0014AA  EF5B  F00A         	goto	i2l1998
  5290  0014AE                     i2u134_40:
  5291  0014AE  6C37               	negf	___awdiv@quotient^0,c
  5292  0014B0  1E38               	comf	(___awdiv@quotient+1)^0,f,c
  5293  0014B2  B0D8               	btfsc	status,0,c
  5294  0014B4  2A38               	incf	(___awdiv@quotient+1)^0,f,c
  5295  0014B6                     i2l1998:
  5296  0014B6  C037  F031         	movff	___awdiv@quotient,?___awdiv
  5297  0014BA  C038  F032         	movff	___awdiv@quotient+1,?___awdiv+1
  5298  0014BE  0012               	return		;funcret
  5299  0014C0                     __end_of___awdiv:
  5300                           	opt callstack 0
  5301  0000                     
  5302                           	psect	rparam
  5303  0000                     
  5304                           	psect	temp
  5305  000048                     btemp:
  5306                           	opt callstack 0
  5307  000048                     	ds	1
  5308  0000                     int$flags	set	btemp
  5309  0000                     wtemp8	set	btemp+1
  5310  0000                     ttemp5	set	btemp+1
  5311  0000                     ttemp6	set	btemp+4
  5312  0000                     ttemp7	set	btemp+8
  5313                           tosu	equ	0xFFF
  5314                           tosh	equ	0xFFE
  5315                           tosl	equ	0xFFD
  5316                           stkptr	equ	0xFFC
  5317                           pclatu	equ	0xFFB
  5318                           pclath	equ	0xFFA
  5319                           pcl	equ	0xFF9
  5320                           tblptru	equ	0xFF8
  5321                           tblptrh	equ	0xFF7
  5322                           tblptrl	equ	0xFF6
  5323                           tablat	equ	0xFF5
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           indf0	equ	0xFEF
  5327                           postinc0	equ	0xFEE
  5328                           postdec0	equ	0xFED
  5329                           preinc0	equ	0xFEC
  5330                           plusw0	equ	0xFEB
  5331                           fsr0h	equ	0xFEA
  5332                           fsr0l	equ	0xFE9
  5333                           wreg	equ	0xFE8
  5334                           indf1	equ	0xFE7
  5335                           postinc1	equ	0xFE6
  5336                           postdec1	equ	0xFE5
  5337                           preinc1	equ	0xFE4
  5338                           plusw1	equ	0xFE3
  5339                           fsr1h	equ	0xFE2
  5340                           fsr1l	equ	0xFE1
  5341                           bsr	equ	0xFE0
  5342                           indf2	equ	0xFDF
  5343                           postinc2	equ	0xFDE
  5344                           postdec2	equ	0xFDD
  5345                           preinc2	equ	0xFDC
  5346                           plusw2	equ	0xFDB
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      71
    BANK0           160      1     160
    BANK1           256     21     101
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    keypad.KP_O_Pins.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    keypad.KP_O_Pins.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), PORTD(SFR[1]), 

    keypad.KP_I_Pins.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    keypad.KP_I_Pins.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), PORTD(SFR[1]), 

    DO_Init@dir	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    DOArray.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), PORTD(SFR[1]), 

    DO_Init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), 

    SW_Init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 

    S48$dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    SW.dirRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 

    S48$portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), PORTD(SFR[1]), 

    SW.portRegPtr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR[1]), PORTB(SFR[1]), PORTD(SFR[1]), 

    SW_Init@dir	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(SFR[1]), 

    GPIO_Init_Nibble@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISD(SFR[1]), 

    GPIO_Init_Pin@DirRegAddress	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    _TMR0_ISR->_keypad_Update
    _keypad_Update->___wmul
    _SW_Update->___wmul
    _LCD_Update->_LCD_SetDDRAM
    i2_LCD_Write_Symbol->i2_LCD_Data_Out
    _LCD_SetDDRAM->i2_LCD_Write_Instruction
    i2_LCD_Write_Instruction->i2_LCD_Data_Out
    _LCD_SetSymbol->___awdiv

Critical Paths under _main in BANK0

    _keypad_Init->_GPIO_Init_Pin
    _SW_Init->_GPIO_Init_Pin
    _DO_Init->_GPIO_Init_Pin
    _LCD_Init->_GPIO_Init_Pin
    _LCD_Init->_LCD_Data_Out
    _LCD_Write_Symbol->_LCD_Data_Out
    _LCD_Write_Instruction->_LCD_Data_Out

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _keypad_Init->_GPIO_Init_Pin
    _initSW->_SW_Init
    _SW_Init->_GPIO_Init_Pin
    _initDO->_DO_Init
    _DO_Init->_GPIO_Init_Pin
    _LCD_Init->_LCD_Init_Custom_Sym
    _LCD_Init_Custom_Sym->_LCD_SetCGRAM
    _LCD_SetCGRAM->_LCD_Write_Instruction

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19081
                           _LCD_Init
                             _initDO
                          _initOSTMR
                             _initSW
                        _keypad_Init
 ---------------------------------------------------------------------------------
 (1) _keypad_Init                                          9     9      0    3293
                                              9 BANK1      9     9      0
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _initSW                                               0     0      0    4174
                            _SW_Init
 ---------------------------------------------------------------------------------
 (2) _SW_Init                                              6     1      5    4174
                                              9 BANK1      6     1      5
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _initOSTMR                                            0     0      0       0
                           _TMR_Init
                          _TMR_Start
 ---------------------------------------------------------------------------------
 (2) _TMR_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDO                                               0     0      0    4776
                            _DO_Init
 ---------------------------------------------------------------------------------
 (2) _DO_Init                                             12     6      6    4776
                                              9 BANK1     12     6      6
                      _GPIO_Init_Pin
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    6838
                                             12 BANK1      1     1      0
                   _GPIO_Init_Nibble
                      _GPIO_Init_Pin
                       _LCD_Data_Out
                _LCD_Init_Custom_Sym
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (2) _LCD_Init_Custom_Sym                                 10    10      0    2729
                                              2 BANK1     10    10      0
                       _LCD_SetCGRAM
                   _LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Symbol                                     1     1      0      93
                                              0 BANK1      1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_SetCGRAM                                         1     1      0     130
                                              1 BANK1      1     1      0
              _LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Instruction                                1     1      0      93
                                              0 BANK1      1     1      0
                       _LCD_Data_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Data_Out                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Pin                                       10     6      4    3293
                                              0 BANK0      1     1      0
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _GPIO_Init_Nibble                                    10     6      4     692
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             6     6      0   10908
                                             17 COMRAM     6     6      0
                      _LCD_SetSymbol
                         _LCD_Update
                        _SW_GetState
                          _SW_Update
                      _keypad_Update
 ---------------------------------------------------------------------------------
 (7) _keypad_Update                                       11    11      0    4643
                                              6 COMRAM    11    11      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) _SW_Update                                            6     6      0    4620
                                              6 COMRAM     6     6      0
                     _SW_UpdateState
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    4155
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _SW_UpdateState                                       3     3      0     286
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _SW_GetState                                          2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _LCD_Update                                          13    13      0     515
                                              3 COMRAM    13    13      0
                       _LCD_SetDDRAM
                 i2_LCD_Write_Symbol
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Write_Symbol                                   1     1      0      66
                                              1 COMRAM     1     1      0
                     i2_LCD_Data_Out
 ---------------------------------------------------------------------------------
 (8) _LCD_SetDDRAM                                         1     1      0      90
                                              2 COMRAM     1     1      0
            i2_LCD_Write_Instruction
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Write_Instruction                              1     1      0      66
                                              1 COMRAM     1     1      0
                     i2_LCD_Data_Out
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Data_Out                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _LCD_SetSymbol                                        8     6      2    1084
                                              8 COMRAM     8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _GPIO_Init_Nibble
     _GPIO_Init_Pin
     _LCD_Data_Out
     _LCD_Init_Custom_Sym
       _LCD_SetCGRAM
         _LCD_Write_Instruction
           _LCD_Data_Out
       _LCD_Write_Symbol
         _LCD_Data_Out
     _LCD_Write_Instruction
       _LCD_Data_Out
   _initDO
     _DO_Init
       _GPIO_Init_Pin
   _initOSTMR
     _TMR_Init
     _TMR_Start
   _initSW
     _SW_Init
       _GPIO_Init_Pin
   _keypad_Init
     _GPIO_Init_Pin

 _TMR0_ISR (ROOT)
   _LCD_SetSymbol
     ___awdiv
   _LCD_Update
     _LCD_SetDDRAM
       i2_LCD_Write_Instruction
         i2_LCD_Data_Out
     i2_LCD_Write_Symbol
       i2_LCD_Data_Out
   _SW_GetState
   _SW_Update
     _SW_UpdateState
     ___wmul
   _keypad_Update
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     15      65       7       39.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      47       1       75.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      20        0.0%
DATA                 0      0     14C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 22:08:23 2020

                   ?_LCD_Data_Out 0031               __end_of_SW_GetState 19CE  
                              l30 11F4                                l24 13FA  
                              l33 1232                                l46 157E  
                              l78 16F0                                _SW 00E7  
                    ___awdiv@sign 0036                       __CFG_BOR$ON 000000  
                     ?_LCD_Update 0031               ___wmul@multiplicand 0033  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                       __CFG_LVP$ON 000000  
                             l122 131E                               l131 18BC  
                             l125 190E                               l128 1958  
                             l233 19F2                               l305 0980  
                             l218 1A02                               l171 0B04  
                             l181 19E0                               l270 19AC  
                             l175 0BC2                               l271 19AC  
                             l178 0C22                               l282 188C  
                             l276 1800                               l279 1A24  
                             _GIE 007F97                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _PSA 007EAB  
                   _LCD_SetSymbol 16F2                               prod 000FF3  
                             wreg 000FE8                     ?_LCD_SetDDRAM 0031  
                   ?_LCD_SetCGRAM 0031                      __CFG_FOSC$HS 000000  
                    __CFG_WDT$OFF 000000                              l1270 19EC  
                            l1264 19F4                              l1272 19EE  
                            l2410 19D8                              l2402 18EE  
                            l1274 19F0                              l1266 19E2  
                            l2420 114A                              l2412 19DA  
                            l2404 18FC                              l2500 0A7E  
                            l1268 19E4                              l1540 1A1C  
                            l2430 11D8                              l2422 1164  
                            l2414 1116                              l2406 1906  
                            l2502 0A84                              l1542 1A20  
                            l2432 11E8                              l2424 117E  
                            l2416 1116                              l2408 19D2  
                            l2520 0B06                              l2504 0AA0  
                            l2600 12C2                              l2440 14C6  
                            l2434 11F8                              l2426 1198  
                            l2418 1130                              l2370 1892  
                            l2522 0B16                              l2514 0AD0  
                            l2506 0AC0                              l2610 12E6  
                            l2602 12CA                              l2450 1642  
                            l2442 150C                              l2428 119C  
                            l2372 18AC                              l2380 1946  
                            l2540 0B62                              l2524 0B18  
                            l2516 0AE2                              l2508 0AC6  
                            l2460 099A                              l2620 1312  
                            l2612 12EC                              l2604 12D0  
                            l2452 1688                              l2444 1540  
                            l2390 1354                              l2374 18B4  
                            l2382 1950                              l2542 0B76  
                            l2534 0B2E                              l2526 0B1E  
                            l2518 0AE8                              l2470 09BC  
                            l2622 131A                              l2614 12FE  
                            l2606 12D8                              l2454 169C  
                            l2446 1556                              l2438 14C4  
                            l2630 06D0                              l2392 136E  
                            l2384 1320                              l2376 18BA  
                            l2560 0BC4                              l2544 0B78  
                            l2536 0B40                              l2528 0B24  
                            l2472 09D8                              l2456 0982  
                            l2616 1304                              l2608 12DE  
                            l2624 17A0                              l2448 156A  
                            l2640 06FE                              l2632 06D4  
                            l2394 1388                              l2386 1320  
                            l2378 193A                              l2562 0BDC  
                            l2554 0B8E                              l2546 0B7E  
                            l2538 0B46                              l2490 0A5C  
                            l2482 0A08                              l2474 09F8  
                            l2466 09A4                              l2458 0994  
                            l2618 130C                              l2650 074E  
                            l2642 0724                              l2634 06EA  
                            l2626 06BE                              l2396 13A2  
                            l2388 133A                              l2572 0BEE  
                            l2564 0BDE                              l2556 0BA0  
                            l2548 0B84                              l2492 0A62  
                            l2484 0A1A                              l2476 09FE  
                            l2468 09B6                              l2580 1260  
                            l2660 079A                              l2652 0752  
                            l2644 0728                              l2636 06F2  
                            l2628 06C0                              l2398 13A6  
                            l2574 0C00                              l2566 0BE4  
                            l2558 0BA6                              l2486 0A20  
                            l2590 1298                              l2582 1276  
                            l2670 07E6                              l2662 07A2  
                            l2654 0778                              l2646 073E  
                            l2638 06FA                              l2576 0C06  
                            l2488 0A3C                              l2592 12AA  
                            l2584 1286                              l2672 083A  
                            l2664 07A6                              l2656 077C  
                            l2648 0746                              l2680 1998  
                            l2498 0A6C                              l2594 12B0  
                            l2586 128C                              l2578 1234  
                            l2674 088C                              l2666 07CC  
                            l2658 0792                              l2682 199C  
                            l2596 12B6                              l2588 1292  
                            l2676 08DE                              l2668 07D0  
                            l2684 19A0                              l2598 12BC  
                            l2678 1854                              l2686 19A4  
                            l2688 19A8                   __end_of_DO_Init 16F2  
                            _T0CS 007EAD                              u2004 16B0  
                            u2021 098C                              u2005 16AC  
                            u2030 09D8                              u2014 16D6  
                            u2031 09D4                              u2015 16D2  
                            u2040 0A3C                              u2104 07FA  
                            u2041 0A38                              u2105 07F6  
                            u2050 0AA0                              u2114 0820  
                            u2051 0A9C                              u2115 081C  
                            u2060 0B04                              u2124 084C  
                            u2061 0B00                              u2125 0848  
                            u2070 0B62                              u2134 0872  
                            u2071 0B5E                              u2207 12B2  
                            u2135 086E                              u2080 0BC2  
                            u2144 089E                              u2081 0BBE  
                            u2217 12C4                              u2145 089A  
                            u2090 0C22                              u2154 08C4  
                            u2091 0C1E                              u2227 12D2  
                            u2155 08C0                              u2164 0920  
                            u2237 12E0                              u2165 091C  
                            u2174 096E                              u2247 12F4  
                            u2175 096A                              u2257 1306  
                            u2267 1314                              u2187 127E  
                            u2277 18AE                              u2197 12A0  
                            u1920 1130                              u1904 13BA  
                            u1921 112C                              u1905 13B6  
                            u1930 114A                              u1914 13E0  
                            u1850 133A                              u1931 1146  
                            u1915 13DC                              u1851 1336  
                            u1940 1164                              u1860 1354  
                            u1941 1160                              u1861 1350  
                            u1950 117E                              u1870 136E  
                            u1951 117A                              u1871 136A  
                            u1960 1198                              u1880 1388  
                            u1961 1194                              u1881 1384  
                            u1890 13A2                              u1891 139E  
                            u1980 11E8                              u1981 11E4  
                            u1974 11C0                              u1975 11BC  
                            u1994 121A                              u1995 1216  
                            i2l71 0FF4                              i2l55 1114  
                            i2l49 19CC                              _RBPU 007F8F  
                            _RDPU 007C27                              _TMR0 000FD6  
             LCD_Write_Symbol@sym 0150          ?i2_LCD_Write_Instruction 0031  
               ?_LCD_Write_Symbol 0031                              _main 1998  
               ?_GPIO_Init_Nibble 0150                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0048  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                ??_LCD_Write_Symbol 0048  
                   __CFG_IESO$OFF 000000                ??_GPIO_Init_Nibble 0154  
                ??i2_LCD_Data_Out 0031                   __end_of_SW_Init 1580  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                   _GPIO_Init_Pin 1320                    ??_LCD_Data_Out 0048  
                __end_of_LCD_Init 1320               GPIO_Init_Nibble@dir 0153  
                   __CFG_PLLDIV$1 000000                    __CFG_CCP2MX$ON 000000  
                           ?_main 0031                   __end_of___awdiv 14C0  
                 ___awdiv@divisor 0033                    ?_LCD_SetSymbol 0039  
                     LCD_Update@i 003F                       LCD_Update@j 0040  
                           _T0PS0 007EA8                             _T0PS1 007EA9  
                           _T0PS2 007EAA                             i2l131 18E8  
                           i2l125 1978                             i2l230 1622  
                           i2l135 179E                             i2l128 1996  
                           i2l312 06BC                             i2l145 1A10  
                           i2l331 1934                             i2l228 15F4  
                           i2l149 0E42                             i2l562 14BE  
                 ___awdiv@counter 0035                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTD 000F83  
                           _PORTE 000F84                    ??_LCD_SetDDRAM 0033  
                  ??_LCD_SetCGRAM 0048                     __CFG_USBDIV$1 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                  __end_of_TMR0_ISR 163E  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                    ?_keypad_Init 0031                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             tablat 000FF5  
                __end_of_TMR_Init 1A04                             plusw1 000FE3  
                           plusw2 000FDB               __size_of_LCD_Update 0220  
                           ttemp5 0049                             ttemp6 004C  
                           ttemp7 0050                             status 000FD8  
                           wtemp8 0049           __size_of_SW_UpdateState 01B2  
                  __CFG_ICPRT$OFF 000000                    __CFG_PBADEN$ON 000000  
                     _SW_GetState 19B4                __size_of_TMR_Start 0012  
                  ?_GPIO_Init_Pin 0150                   __initialization 1802  
                    __end_of_main 19B4                            ??_main 0048  
                   __activetblptr 000002                __size_of_SW_Update 0120  
                       ??_DO_Init 015F   __end_ofi2_LCD_Write_Instruction 1998  
              Keypad@tick_counter 002C        GPIO_Init_Pin@DirRegAddress 0150  
                          _T08BIT 007EAE                  ___awdiv@dividend 0031  
                          i2l2002 195C                            i2l2010 19B6  
                          i2l2004 196A                            i2l2012 19CA  
                          i2l2020 0FFA                            i2l2006 1972  
                          i2l2110 0C92                            i2l2102 0C48  
                          i2l2030 101C                            i2l2120 0D1E  
                          i2l2008 19B6                            i2l2032 10EE  
                          i2l2024 1010                            i2l2016 0FF6  
                          i2l2200 05EA                            i2l2130 0DC4  
                          i2l2122 0D24                            i2l2034 10F4  
                          i2l2018 0FF6                            i2l2202 0606  
                          i2l2140 0E2A                            i2l2124 0D56  
                          i2l2132 0E06                            i2l2116 0C96  
                          i2l2108 0C54                            i2l2036 10F8  
                          i2l2204 06A4                            i2l2300 15B0  
                          i2l2142 0E2C                            i2l2134 0E08  
                          i2l2126 0DB0                            i2l2118 0D02  
                          i2l2206 06A6                            i2l2302 15C8  
                          i2l2310 1618                            i2l2144 0E3E  
                          i2l2128 0DB2                            i2l2136 0E18  
                          i2l2208 06B8                            i2l2160 01F4  
                          i2l2152 00CA                            i2l2312 161A  
                          i2l2304 15D0                            i2l2090 1718  
                          i2l2138 0E1A                            i2l2170 0220  
                          i2l2162 01F8                            i2l2146 0012  
                          i2l2306 15E6                            i2l2092 173C  
                          i2l2084 16F4                            i2l2180 0384  
                          i2l2172 0264                            i2l2164 0214  
                          i2l2148 0028                            i2l2308 160A  
                          i2l2086 1704                            i2l1710 18E0  
                          i2l2094 0C24                            i2l2190 04E0  
                          i2l2182 03C8                            i2l2174 02B0  
                          i2l2158 00D6                            i2l1712 18E6  
                          i2l2096 0C28                            i2l1800 0EFA  
                          i2l2192 052C                            i2l2184 040C  
                          i2l2176 02F4                            i2l1706 18C0  
                          i2l2098 0C30                            i2l1810 0F92  
                          i2l1802 0F1A                            i2l2186 0458  
                          i2l2178 0338                            i2l1708 18D8  
                          i2l1804 0F3A                            i2l2188 049C  
                          i2l2196 0570                            i2l2292 159A  
                          i2l1806 0F52                            i2l1814 0FAA  
                          i2l2198 05E6                            i2l2294 15A4  
                          i2l1744 197C                            i2l1808 0F72  
                          i2l2296 15A8                            i2l1746 1988  
                          i2l2730 05C0                            i2l2298 15AC  
                          i2l1748 1990                            i2l2732 0FCE  
                          i2l1950 1A0A                            i2l1790 0E6A  
                          i2l1960 1400                            i2l1792 0E8A  
                          i2l1952 1910                            i2l1970 1430  
                          i2l1962 140E                            i2l1794 0EA2  
                          i2l1786 0E46                            i2l1954 192C  
                          i2l1980 145E                            i2l1972 1434  
                          i2l1964 1416                            i2l1948 1A06  
                          i2l1796 0EC2                            i2l1788 0E4A  
                          i2l1990 1492                            i2l1982 146C  
                          i2l1974 143C                            i2l1966 141A  
                          i2l1958 13FC                            i2l1798 0EE2  
                          i2l1992 1498                            i2l1984 1472  
                          i2l1976 144E                            i2l1968 1428  
                          i2l1986 1488                            i2l1978 1456  
                          i2l1994 149E                            i2l1996 14AE  
                          i2l1988 1490                            i2l1998 14B6  
                       ??_SW_Init 0048                            _TMR0IE 007F95  
                          _TMR0IF 007F92                            _TMR0ON 007EAF  
                  __CFG_XINST$OFF 000000                       DO_Init@pinN 015D  
                     DO_Init@port 0159                            ___wmul 1910  
                       ??___awdiv 0035                    __CFG_STVREN$ON 000000  
                          _initDO 17A0                            _initSW 1854  
                          _keypad 0001                            clear_0 1828  
                          clear_1 1834                            clear_2 1840  
                 ??_LCD_SetSymbol 003B                  ___awdiv@quotient 0037  
        SW_Update@SW_Time_Counter 0030                 __end_of_TMR_Start 19F4  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_LCD_Data_Out 18BE  
                      __accesstop 0060            __size_of_keypad_Update 06AC  
         __end_of__initialization 1846                         ?_LCD_Init 0031  
                 ??_GPIO_Init_Pin 0154                     ___rparam_used 000001  
                GPIO_Init_Pin@dir 0153                 __end_of_SW_Update 1116  
            __end_of_LCD_SetDDRAM 1A12              __end_of_LCD_SetCGRAM 19E2  
     __end_of_LCD_Init_Custom_Sym 0C24                    __pcstackCOMRAM 0031  
                    __pidataBANK0 1A12                         ?_TMR0_ISR 0031  
           _lines_offset_adresses 00FD                      ??_LCD_Update 0034  
     __size_ofi2_LCD_Write_Symbol 0020       i2LCD_Write_Instruction@inst 0032  
                       ?_TMR_Init 0031                         DO_Init@DO 0164  
                   SW_GetState@sw 0031              __size_of_keypad_Init 02C4  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
              __size_of_initOSTMR 000A                        ??_LCD_Init 015C  
                  _SW_UpdateState 0E44                __end_of_LCD_Update 0E44  
                         ?___wmul 0031                        ??_TMR0_ISR 0042  
__size_ofi2_LCD_Write_Instruction 001E             _LCD_Write_Instruction 1936  
                         ?_initDO 0031                           ?_initSW 0031  
       __size_of_LCD_Write_Symbol 0026                     _keypad_Update 0012  
       __size_of_GPIO_Init_Nibble 011E                        ??_TMR_Init 0048  
                         _DOArray 00D8                           _DO_Init 163E  
   GPIO_Init_Nibble@DirRegAddress 0150        GPIO_Init_Nibble@nibble_num 0152  
          __end_of_SW_UpdateState 0FF6                           _SW_DATA 0024  
                 __CFG_VREGEN$OFF 000000                  LCD_Data_Out@byte 00FF  
                         _SW_Init 14C0               _GPIO_Init_Nibble$44 0158  
                    ?_SW_GetState 0031                           __Hparam 0000  
                         __Lparam 0000                           ___awdiv 13FC  
                    DO_Init@state 015E                   __size_of___wmul 0026  
                  ?_keypad_Update 0031                   __size_of_initDO 0062  
                 __size_of_initSW 003A                           __pcinit 1802  
                         __ramtop 0800                 __end_of_initOSTMR 1A26  
                         __ptext0 1998                           __ptext1 06BE  
                         __ptext2 1854                           __ptext3 14C0  
                         __ptext4 1A1C                           __ptext5 19E2  
                         __ptext6 19F4                           __ptext7 17A0  
                         __ptext8 163E                           __ptext9 1234  
           __size_of_LCD_Data_Out 0030                    __pintcode_body 1580  
            end_of_initialization 1846                   ?_SW_UpdateState 0031  
           __size_of_LCD_SetDDRAM 000E             __size_of_LCD_SetCGRAM 0014  
                   __Lmediumconst 0000                           int_func 1580  
                       SW_Init@sw 015E            ?_LCD_Write_Instruction 0031  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                      _LCD_Data_Out 188E  
         __size_ofi2_LCD_Data_Out 002C                      _LCD_SetDDRAM 1A04  
                    _LCD_SetCGRAM 19CE                         _TMR_Start 19E2  
         GPIO_Init_Pin@pin_number 0152                 __size_of_LCD_Init 00EC  
         i2_LCD_Write_Instruction 197A                   ??_keypad_Update 0037  
                       _SW_Update 0FF6                    __end_of___wmul 1936  
                _LCD_Write_Symbol 18EA                 __size_of_TMR0_ISR 1636  
                _GPIO_Init_Nibble 1116                    __end_of_initDO 1802  
                  __end_of_initSW 188E             __end_of_LCD_SetSymbol 17A0  
             start_initialization 1802                 __size_of_TMR_Init 0010  
                 TMR0_ISR@counter 00F1                  LCD_SetSymbol@row 0039  
                LCD_SetSymbol@sym 0040               LCD_SetSymbol@column 003A  
                      ?_TMR_Start 0031             __end_of_GPIO_Init_Pin 13FC  
                  SW_GetState@ret 0032                        DO_Init@dir 015B  
            __size_of_SW_GetState 001A        __end_ofi2_LCD_Write_Symbol 197A  
                        ??___wmul 0035                        ?_SW_Update 0031  
                     __pdataBANK0 00F5                          ??_initDO 0048  
                __CFG_LPT1OSC$OFF 000000                          ??_initSW 0048  
    __size_of_LCD_Init_Custom_Sym 02A2                    _current_column 002D  
                     __pbssCOMRAM 0001                          ?_DO_Init 0159  
                   __pcstackBANK0 00FF                     __pcstackBANK1 0150  
                   ??_keypad_Init 0159                     TMR0_ISR@index 002E  
                    _line_counter 002F                          ?_SW_Init 0159  
       ??i2_LCD_Write_Instruction 0032                         __pintcode 0008  
                        ?___awdiv 0031                    i2_LCD_Data_Out 18BE  
                       _initOSTMR 1A1C                  ??_SW_UpdateState 0031  
               LCD_Update@address 003D                       ??_TMR_Start 0048  
                SW_UpdateState@sw 0033               __end_of_keypad_Init 0982  
                        _LCD_Init 1234                    ___wmul@product 0035  
               LCD_Update@updated 003E           ??_LCD_Write_Instruction 0048  
                        i2u111_40 0E6A                          i2u111_41 0E66  
                        i2u112_40 0E8A                          i2u112_41 0E86  
                        i2u113_40 0EC2                          i2u113_41 0EBE  
                        i2u130_40 1428                          i2u114_40 0EE2  
                        i2u130_41 1424                          i2u114_41 0EDE  
                        i2u131_40 144E                          i2u115_40 0F1A  
                        i2u131_41 144A                          i2u115_41 0F16  
                        i2u132_40 146C                          i2u116_40 0F3A  
                        i2u132_41 1468                          i2u116_41 0F36  
                        i2u140_44 1758                          i2u140_45 1752  
                        i2u133_40 1488                          i2u141_40 0C44  
                        i2u117_40 0F72                          i2u133_41 1484  
                        i2u141_41 0C40                          i2u117_41 0F6E  
                        i2u134_40 14AE                          i2u150_40 0E3E  
                        i2u142_40 0C92                          i2u118_40 0F92  
                        i2u134_41 14AA                          i2u150_41 0E3A  
                        i2u142_41 0C8E                          i2u118_41 0F8E  
                        i2u135_40 100C                          i2u151_40 0028  
                        i2u135_41 1008                          i2u151_41 0024  
                        i2u143_44 0CE2                          i2u143_45 0CDC  
                        i2u144_40 0D02                          i2u160_40 040C  
                        i2u144_41 0CFE                          i2u160_41 0408  
                        i2u136_44 10E2                          i2u152_44 006A  
                        i2u136_45 10DE                          i2u152_45 0066  
                        i2u129_40 140E                          i2u137_40 1114  
                        i2u161_40 0458                          i2u129_41 140A  
                        i2u137_41 1110                          i2u161_41 0454  
                        i2u145_44 0D6E                          i2u153_44 00B6  
                        i2u145_45 0D68                          i2u153_45 00B2  
                        i2u138_40 1704                          i2u146_40 0DC4  
                        i2u162_40 04E0                          i2u138_41 1700  
                        i2u146_41 0DC0                          i2u162_41 04DC  
                        i2u154_44 01E8                          i2u154_45 01E4  
                        i2u139_40 1714                          i2u147_40 0E02  
                        i2u163_40 052C                          i2u155_40 0214  
                        i2u139_41 1710                          i2u147_41 0DFE  
                        i2u163_41 0528                          i2u155_41 0210  
                        i2u148_40 0E18                          i2u164_40 0606  
                        i2u156_40 0264                          i2u148_41 0E14  
                        i2u164_41 0602                          i2u156_41 0260  
                        i2u228_47 18DA                          i2u149_40 0E2A  
                        i2u157_40 02B0                          i2u149_41 0E26  
                        i2u157_41 02AC                          i2u165_44 0648  
                        i2u165_45 0644                          i2u158_40 0338  
                        i2u182_40 15C8                          i2u158_41 0334  
                        i2u182_41 15C4                          i2u166_44 0694  
                        i2u166_45 0690                          i2u167_40 06B8  
                        i2u159_40 0384                          i2u183_40 15E6  
                        i2u167_41 06B4                          i2u159_41 0380  
                        i2u183_41 15E2                          i2u184_40 160A  
                        i2u184_41 1606                i2LCD_Data_Out@byte 0031  
        LCD_Init_Custom_Sym@F3257 00F5                  __CFG_WDTPS$32768 000000  
                        _TMR0_ISR 0008                       ??_SW_Update 0037  
          __end_ofi2_LCD_Data_Out 18EA                          _TMR_Init 19F4  
               ___wmul@multiplier 0031               LCD_SetDDRAM@ADDRESS 0033  
                      ?_initOSTMR 0031                  __size_of_DO_Init 00B4  
                       copy_data0 1816          __end_of_LCD_Write_Symbol 1910  
        __end_of_GPIO_Init_Nibble 1234                  __size_of_SW_Init 00C0  
             LCD_SetCGRAM@ADDRESS 0151                          __Hrparam 0000  
                 _LCD_Data_Buffer 0100                          __Lrparam 0000  
                 ?i2_LCD_Data_Out 0031                  __size_of___awdiv 00C4  
       LCD_Write_Instruction@inst 0150                       _keypad_Init 06BE  
                        __ptext10 0982                          __ptext11 18EA  
                        __ptext20 1910                          __ptext12 19CE  
                        __ptext21 0E44                          __ptext13 1936  
                        __ptext22 19B4                          __ptext14 188E  
                        __ptext23 0C24                          __ptext15 1320  
                        __ptext24 195A                          __ptext16 1116  
                        __ptext25 1A04                          __ptext26 197A  
                        __ptext18 0012                          __ptext27 18BE  
                        __ptext19 0FF6                          __ptext28 16F2  
                        __ptext29 13FC             i2LCD_Write_Symbol@sym 0032  
                     SW_Init@port 015B                      _tick_counter 002A  
                   __size_of_main 001C               _LCD_Init_Custom_Sym 0982  
                        int$flags 0048           LCD_Init_Custom_Sym@data 0152  
           __end_of_keypad_Update 06BE                        _LCD_Update 0C24  
            ?_LCD_Init_Custom_Sym 0031             __CFG_CPUDIV$OSC1_PLL2 000000  
                     ??_initOSTMR 0048                i2_LCD_Write_Symbol 195A  
                        intlevel2 0000               ?i2_LCD_Write_Symbol 0031  
                      SW_Init@dir 0159                       _tempCounter 00F3  
                      SW_Init@pin 015D                     ??_SW_GetState 0031  
          __size_of_LCD_SetSymbol 00AE                       _KP_Btn_Data 00B4  
                  keypad_Update@i 0040              ??i2_LCD_Write_Symbol 0032  
                      SW_Update@i 003B             ??_LCD_Init_Custom_Sym 0048  
          __size_of_GPIO_Init_Pin 00DC              LCD_Init_Custom_Sym@i 015A  
  __size_of_LCD_Write_Instruction 0024     __end_of_LCD_Write_Instruction 195A  
                     _update_flag 0060  
